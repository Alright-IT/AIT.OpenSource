<?xml version="1.0" encoding="utf-8" ?>
<helpItems xmlns="http://msh" schema="maml">
	<!--Generated by: SAPIEN PowerShell HelpWriter 2016 v1.1.20-->
	<!--
		Module: 		AIT.OpenSource
		Version:		1.0.0.5
	-->
	<!--All Commands-->
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Approve-MailAddress</command:name>
			<maml:description>
				<maml:para>REGEX checks to see if a given Email address is valid.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Approve</command:verb>
			<command:noun>MailAddress</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>It checks a given Mail Address against an REGEX Filter to see if it is RfC822 complaint.
Most mailers will not be able to handle it if there are non standard chars within the Mail Address.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Approve-MailAddress</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Mail">
					<maml:name>Email</maml:name>
					<maml:description>
						<maml:para>e.g. &quot;joerg.hochwald@outlook.com&quot;
Email address to check</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Mail">
				<maml:name>Email</maml:name>
				<maml:description>
					<maml:para>e.g. &quot;joerg.hochwald@outlook.com&quot;
Email address to check</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Boolean</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Internal Helper function to check mail addresses via REGEX to see if they are RfC822 complaint before use them.</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Approve-MailAddress -Email:&quot;No.Reply@bewoelkt.net&quot;</dev:code>
				<dev:remarks>
					<maml:para>True

Description
-----------
It checks a given Mail Address (No.Reply@bewoelkt.net) against an REGEX  Filter to see if it is RfC822 complaint.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Approve-MailAddress -Email:&quot;J&#246;rg.hochwald@gmail.com&quot;</dev:code>
				<dev:remarks>
					<maml:para>False

Description
-----------
It checks a given Mail Address (J&#246;rg.hochwald@gmail.com) against an REGEX Filter to see if it is RfC822 complaint, and it is NOT.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Approve-MailAddress -Email:&quot;Joerg hochwald@gmail.com&quot;</dev:code>
				<dev:remarks>
					<maml:para>False

Description
-----------
It checks a given Mail Address (Joerg hochwald@gmail.com) against an REGEX Filter to see if it is RfC822 complaint, and it is NOT.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Approve-MailAddress -Email:&quot;Joerg.hochwald@gmail&quot;</dev:code>
				<dev:remarks>
					<maml:para>False

Description
-----------
It checks a given Mail Address (Joerg.hochwald@gmail) against an REGEX Filter to see if it is RfC822 complaint, and it is NOT.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>ConvertTo-Base64</command:name>
			<maml:description>
				<maml:para>Convert a string to a Base 64 encoded string.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>ConvertTo</command:verb>
			<command:noun>Base64</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Convert a string to a Base 64 encoded string.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>ConvertTo-Base64</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="unencoded">
					<maml:name>plain</maml:name>
					<maml:description>
						<maml:para>Un-Encodes Input String</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="unencoded">
				<maml:name>plain</maml:name>
				<maml:description>
					<maml:para>Un-Encodes Input String</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Companion function</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>ConvertTo-Base64 -plain &quot;Hello World&quot;</dev:code>
				<dev:remarks>
					<maml:para>SABlAGwAbABvACAAVwBvAHIAbABkAA==

Description
-----------
Convert a string to a Base 64 encoded string.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>&quot;Just a String&quot; | ConvertTo-Base64</dev:code>
				<dev:remarks>
					<maml:para>SgB1AHMAdAAgAGEAIABTAHQAcgBpAG4AZwA=

Description
-----------
Convert a string to a Base 64 encoded string via Pipe(line).</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>ConvertFrom-Base64</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>ConvertFrom-Base64</command:name>
			<maml:description>
				<maml:para>Decode a Base64 encoded string back to a plain string.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>ConvertFrom</command:verb>
			<command:noun>Base64</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Decode a Base64 encoded string back to a plain string.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>ConvertFrom-Base64</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
					<maml:name>encoded</maml:name>
					<maml:description>
						<maml:para>Base64 encoded String</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
				<maml:name>encoded</maml:name>
				<maml:description>
					<maml:para>Base64 encoded String</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Companion function</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>ConvertFrom-Base64 -encoded &quot;SABlAGwAbABvACAAVwBvAHIAbABkAA==&quot;</dev:code>
				<dev:remarks>
					<maml:para>Hello World

Description
-----------
Decode a Base64 encoded string back to a plain string.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>&quot;SABlAGwAbABvACAAVwBvAHIAbABkAA==&quot; | ConvertFrom-Base64</dev:code>
				<dev:remarks>
					<maml:para>Hello World

Description
-----------
Decode a Base64 encoded string back to a plain string via Pipe(line).</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>ConvertTo-Base64</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>ConvertFrom-BinHex</command:name>
			<maml:description>
				<maml:para>Convert an HEX value to a string.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>ConvertFrom</command:verb>
			<command:noun>BinHex</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>It converts a given HEX value back to human readable strings.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>ConvertFrom-BinHex</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
					<maml:name>binhex</maml:name>
					<maml:description>
						<maml:para></maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>binhex</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				<dev:type>
					<maml:name>Object</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This is just a little helper function to make the shell more flexible</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>ConvertFrom-BinHex 0c</dev:code>
				<dev:remarks>
					<maml:para>12

Description
-----------
Return the regular value (12) of the given HEX 0c</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>ConvertTo-BinHex</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: https://github.com/jhochwald/NETX/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>ConvertTo-BinHex</command:name>
			<maml:description>
				<maml:para>It converts a string to HEX.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>ConvertTo</command:verb>
			<command:noun>BinHex</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>It converts a given string or array to HEX and dumps it.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>ConvertTo-BinHex</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
					<maml:name>array</maml:name>
					<maml:description>
						<maml:para>Array that should be converted to HEX</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>array</maml:name>
				<maml:description>
					<maml:para>Array that should be converted to HEX</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				<dev:type>
					<maml:name>Object</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This is just a little helper function to make the shell more flexible</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>ConvertTo-BinHex 1234</dev:code>
				<dev:remarks>
					<maml:para>4d2

Description
-----------
Returns the HEX value (4d2) of the string 1234</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>ConvertFrom-BinHex</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Support: https://github.com/jhochwald/NETX/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Invoke-CheckSessionArch</command:name>
			<maml:description>
				<maml:para>Show the CPU architecture</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Invoke</command:verb>
			<command:noun>CheckSessionArch</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>You want to know if this is a 64BIT or still a 32BIT system?
It might be useful, maybe not!</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Invoke-CheckSessionArch</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Invoke-CheckSessionArch</dev:code>
				<dev:remarks>
					<maml:para>x64</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Check-SessionArch</dev:code>
				<dev:remarks>
					<maml:para>x64

Description
-----------
It shows that the architecture is 64 BIT and that the session also supports X64.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Clear-AllEventLogs</command:name>
			<maml:description>
				<maml:para>Delete all EventLog entries</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Clear</command:verb>
			<command:noun>AllEventLogs</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Delete all EventLog entries</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Clear-AllEventLogs</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>It could be great to clean up everything, but everything will be gone forever!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Clear-AllEventLogs</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Ask if it should delete all EventLog entries, and you need to confirm it.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Clear-AllEventLogs -Confirm:$False</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Delete all EventLog entries, and you do not need to confirm it.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Clear-OldFiles</command:name>
			<maml:description>
				<maml:para>It removes old Log files</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Clear</command:verb>
			<command:noun>OldFiles</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Convenience function to clean up old Files (House Keeping)</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Clear-OldFiles</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
					<maml:name>Days</maml:name>
					<maml:description>
						<maml:para>Files older than this will be deleted, the Default is 7 (For 7 Days)</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>The Path where the Logs are located, default is C:\scripts\PowerShell\log</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="ext">
					<maml:name>Extension</maml:name>
					<maml:description>
						<maml:para>The File Extension that you would like to remove, the default is ALL (*)</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>Days</maml:name>
				<maml:description>
					<maml:para>Files older than this will be deleted, the Default is 7 (For 7 Days)</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>7</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>The Path where the Logs are located, default is C:\scripts\PowerShell\log</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>C:\scripts\PowerShell\log</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="ext">
				<maml:name>Extension</maml:name>
				<maml:description>
					<maml:para>The File Extension that you would like to remove, the default is ALL (*)</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>*</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Want to clean out old logfiles?</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Clear-OldFiles</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
I will remove all files older than seven (7) days from C:\scripts\PowerShell\log
You need to confirm every action!</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Clear-OldFiles -Confirm:$False</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
I will remove all files older than seven (7) days from C:\scripts\PowerShell\log
You do not need to confirm any action!</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Clear-OldFiles -days:&quot;30&quot; -Confirm:$False</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
I will remove all files older than thirty (30) days from C:\scripts\PowerShell\log
You do not need to confirm any action!</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Clear-OldFiles -Extension:&quot;.csv&quot; -days:&quot;365&quot; -Path:&quot;C:\scripts\PowerShell\export&quot; -Confirm:$False</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
I will remove all csv files older than 365 days from C:\scripts\PowerShell\export
You do not need to confirm any action!</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Clear-TempDir</command:name>
			<maml:description>
				<maml:para>Clean up the TEMP Directory</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Clear</command:verb>
			<command:noun>TempDir</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Clean up the TEMP Directory</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Clear-TempDir</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="RemoveOlderThen">
					<maml:name>Days</maml:name>
					<maml:description>
						<maml:para>Number of days, older files will be removed!</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="RemoveOlderThen">
				<maml:name>Days</maml:name>
				<maml:description>
					<maml:para>Number of days, older files will be removed!</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>30</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Clear-TempDir</dev:code>
				<dev:remarks>
					<maml:para>Freed 439,58 MB disk space

Description
-----------
I will delete all Files older than 30 Days (This is the default)
You have to confirm every item before it is deleted.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Clear-TempDir -Days:60 -Confirm:$False</dev:code>
				<dev:remarks>
					<maml:para>Freed 407,17 MB disk space

Description
-----------
I will delete all Files older than 30 Days (This is the default)
You do not have to confirm every item before it is deleted</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Save-CommandHistory</command:name>
			<maml:description>
				<maml:para>It dumps the command history to an XML File.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Save</command:verb>
			<command:noun>CommandHistory</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>It dumps the command history to an XML File.
This file is located in the User Profile.
You can then restore it via the sibling command Import-CommandHistory</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Save-CommandHistory</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Companion command</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Save-CommandHistory</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
It dumps the command history to the XML file &quot;commandHistory.xml&quot; in the user profile folder.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Import-CommandHistory</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Import-CommandHistory</command:name>
			<maml:description>
				<maml:para>It loads the command history dumped via the sibling command Save-CommandHistory</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Import</command:verb>
			<command:noun>CommandHistory</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>This is the Companion Command for Save-CommandHistory.
It loads the command history from an XML File in the user profile.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Import-CommandHistory</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Companion command</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Import-CommandHistory</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
It loads the command history from an XML file &quot;commandHistory.xml&quot; in the user profile folder.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Save-CommandHistory</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Confirm-XMLisValid</command:name>
			<maml:description>
				<maml:para>It checks if one, or more, given files looks like valid XML formatted.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Confirm</command:verb>
			<command:noun>XMLisValid</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>This function does some basic checks to see if one, or more, given files looks valid XML formatted.
If you use multiple files at once, the answer is False (Boolean) even if just one is not a valid XML file!</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Confirm-XMLisValid</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1">
					<maml:name>XmlFilePath</maml:name>
					<maml:description>
						<maml:para>One or more Files to check</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1">
				<maml:name>XmlFilePath</maml:name>
				<maml:description>
					<maml:para>One or more Files to check</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Boolean</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>The return is boolean. The function should never throw an error; maximum is a warning!
So if you want to catch a problem be aware of that!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Confirm-XMLisValid -XmlFilePath &#39;D:\apache-maven-3.3.9\conf\settings.xml&#39;</dev:code>
				<dev:remarks>
					<maml:para>True

Description
-----------
This will check if the file &#39;D:\apache-maven-3.3.9\conf\settings.xml&#39; looks like a well formatted XML file, what it does.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Confirm-XMLisValid -XmlFilePath &#39;D:\apache-maven-3.3.9\README.txt&#39;</dev:code>
				<dev:remarks>
					<maml:para>False

Description
-----------
Looks like the File &#39;D:\apache-maven-3.3.9\README.txt&#39; is not a valid XML formatted file.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Confirm-XMLisValid -XmlFilePath &#39;D:\apache-maven-3.3.9\README.txt&#39;, &#39;D:\apache-maven-3.3.9\conf\settings.xml&#39;</dev:code>
				<dev:remarks>
					<maml:para>False

Description
-----------
Checks multiple files to see if they are valid XML files.
If one is not, &quot;False&quot; is returned!</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>ConvertFrom-CurlRequest</command:name>
			<maml:description>
				<maml:para>Parse a Curl command to get a parameter hash table for Invoke-RestMethod</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>ConvertFrom</command:verb>
			<command:noun>CurlRequest</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Parse a Curl command to get a parameter hash table for Invoke-RestMethod

It could be useful if you have an example Curl request or the API documentation just contains Curl based examples, often the case in API documentations.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>ConvertFrom-CurlRequest</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
					<maml:name>InputObject</maml:name>
					<maml:description>
						<maml:para>Curl Command to convert</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para>Curl Command to convert</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Collections.Hashtable</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Based on the Idea of Nicholas M. Getchell</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>$RestParams = (&#39;curl -X &quot;GET&quot; &quot;https://echo.luckymarmot.com&quot;&#39; | ConvertFrom-CurlRequest)</dev:code>
				<dev:remarks>
					<maml:para>Invoke-RestMethod @RestParams

Description
-----------
It parses the given Curl command to get a parameter hash table for Invoke-RestMethod
In this example, we use no headers!</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>$RestParams = (&#39;curl -X &quot;GET&quot; &quot;https://echo.luckymarmot.com&quot; -H &quot;Authorization: Basic dXNlcm5hbWU6KioqKiogSGlkZGVuIGNyZWRlbnRpYWxzICoqKioq&quot;&#39; | ConvertFrom-CurlRequest)</dev:code>
				<dev:remarks>
					<maml:para>Invoke-RestMethod @RestParams

Description
-----------
It parses the given Curl command to get a parameter hash table for Invoke-RestMethod</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>$RestParams = (&#39;curl -X &quot;GET&quot; &quot;https://echo.luckymarmot.com&quot; -H &quot;Authorization: Basic dXNlcm5hbWU6KioqKiogSGlkZGVuIGNyZWRlbnRpYWxzICoqKioq&quot;&#39; | ConvertFrom-CurlRequest)</dev:code>
				<dev:remarks>
					<maml:para>$RestParams

Name                           Value
----                           -----
Method                         GET
Headers                        {Authorization}
Uri                            https://echo.luckymarmot.com

Description
-----------
It parses the given Curl command to get a parameter hash table for Invoke-RestMethod
Do not execute Invoke-RestMethod; just dump the hash table. Make sense for saving it to your own script (Splatting)</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/ngetchell/Parse-Curl</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>ConvertFrom-DateString</command:name>
			<maml:description>
				<maml:para>It converts a string representation of a date.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>ConvertFrom</command:verb>
			<command:noun>DateString</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>It converts the specified string representation of a date and time to its DateTime equivalent using the specified format and culture-specific format information.
The format of the string representation must match the specified format exactly.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>ConvertFrom-DateString</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
					<maml:name>Value</maml:name>
					<maml:description>
						<maml:para>A string containing a date and time to convert.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="format">
					<maml:name>FormatString</maml:name>
					<maml:description>
						<maml:para>The required format of the date string value. If FormatString defines a date with no time element, the resulting DateTime value has a time of midnight (00:00:00).
If FormatString defines a time with no date element, the resulting DateTime value has a date of DateTime.Now.Date.
If FormatString is a custom format pattern that does not include date or time separators (such as &quot;yyyyMMdd HHmm&quot;), use the invariant culture (e.g [System.Globalization.CultureInfo]::InvariantCulture), for the provider parameter and the widest form of each custom format specified.
For example, if you want to specify hours in the format pattern, specify the wider form, &quot;HH&quot;; instead of the narrower form, &quot;H&quot;.
The format parameter is a string that contains either a single standard format specifier, or one or more custom format specifiers that define the required format of StringFormats. For details about valid formatting codes, see &#39;Standard Date and Time Format Strings&#39; (http://msdn.microsoft.com/en-us/library/az4se3k1.aspx) or &#39;Custom Date and Time Format Strings&#39; (http://msdn.microsoft.com/en-us/library/8kb3ddd4.aspx).</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Culture</maml:name>
					<maml:description>
						<maml:para>An object that supplies culture-specific formatting information about the date string value. The default value is null.
A value of null corresponds to the current culture.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">CultureInfo</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>ConvertFrom-DateString</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
					<maml:name>Value</maml:name>
					<maml:description>
						<maml:para>A string containing a date and time to convert.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="format">
					<maml:name>FormatString</maml:name>
					<maml:description>
						<maml:para>The required format of the date string value. If FormatString defines a date with no time element, the resulting DateTime value has a time of midnight (00:00:00).
If FormatString defines a time with no date element, the resulting DateTime value has a date of DateTime.Now.Date.
If FormatString is a custom format pattern that does not include date or time separators (such as &quot;yyyyMMdd HHmm&quot;), use the invariant culture (e.g [System.Globalization.CultureInfo]::InvariantCulture), for the provider parameter and the widest form of each custom format specified.
For example, if you want to specify hours in the format pattern, specify the wider form, &quot;HH&quot;; instead of the narrower form, &quot;H&quot;.
The format parameter is a string that contains either a single standard format specifier, or one or more custom format specifiers that define the required format of StringFormats. For details about valid formatting codes, see &#39;Standard Date and Time Format Strings&#39; (http://msdn.microsoft.com/en-us/library/az4se3k1.aspx) or &#39;Custom Date and Time Format Strings&#39; (http://msdn.microsoft.com/en-us/library/8kb3ddd4.aspx).</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>InvariantCulture</maml:name>
					<maml:description>
						<maml:para>It gets the CultureInfo that is culture-independent (invariant).
The invariant culture is culture-insensitive. It is associated in the English language but not with any country/region.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
				<maml:name>Value</maml:name>
				<maml:description>
					<maml:para>A string containing a date and time to convert.</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="format">
				<maml:name>FormatString</maml:name>
				<maml:description>
					<maml:para>The required format of the date string value. If FormatString defines a date with no time element, the resulting DateTime value has a time of midnight (00:00:00).
If FormatString defines a time with no date element, the resulting DateTime value has a date of DateTime.Now.Date.
If FormatString is a custom format pattern that does not include date or time separators (such as &quot;yyyyMMdd HHmm&quot;), use the invariant culture (e.g [System.Globalization.CultureInfo]::InvariantCulture), for the provider parameter and the widest form of each custom format specified.
For example, if you want to specify hours in the format pattern, specify the wider form, &quot;HH&quot;; instead of the narrower form, &quot;H&quot;.
The format parameter is a string that contains either a single standard format specifier, or one or more custom format specifiers that define the required format of StringFormats. For details about valid formatting codes, see &#39;Standard Date and Time Format Strings&#39; (http://msdn.microsoft.com/en-us/library/az4se3k1.aspx) or &#39;Custom Date and Time Format Strings&#39; (http://msdn.microsoft.com/en-us/library/8kb3ddd4.aspx).</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Culture</maml:name>
				<maml:description>
					<maml:para>An object that supplies culture-specific formatting information about the date string value. The default value is null.
A value of null corresponds to the current culture.</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">CultureInfo</command:parameterValue>
				<dev:type>
					<maml:name>CultureInfo</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>InvariantCulture</maml:name>
				<maml:description>
					<maml:para>It gets the CultureInfo that is culture-independent (invariant).
The invariant culture is culture-insensitive. It is associated in the English language but not with any country/region.</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.DateTime</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>We just adopted and tweaked the existing function from Shay Levy.</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>ConvertFrom-DateString -Value &#39;Sun 15 Jun 2008 8:30 AM -06:00&#39; -FormatString &#39;ddd dd MMM yyyy h:mm tt zzz&#39; -InvariantCulture</dev:code>
				<dev:remarks>
					<maml:para>Sunday, June 15, 2008 5:30:00 PM

Description
-----------
This example converts the date string, &#39;Sun 15 Jun 2008 8:30 AM -06:00&#39;, according to the specifier that defines the required format.
The InvariantCulture switch parameter formats the date string in a culture-independent manner.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>&#39;jeudi 10 avril 2008 06:30&#39; | ConvertFrom-DateString -FormatString &#39;dddd dd MMMM yyyy HH:mm&#39; -Culture fr-FR</dev:code>
				<dev:remarks>
					<maml:para>Thursday, April 10, 2008 6:30:00 AM

Description
-----------
In this example a date string, in French format (culture).
The date string is piped to ConvertFrom-DateString.
The input value is bound for the Value parameter.
The FormatString value defines the required format of the date string value.
The result is a DateTime object that is equivalent on the date and time contained in the Value parameter, as specified by FormatString and Culture parameters.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>ConvertFrom-DateString -Value &#39;Sun 15 Jun 2008 8:30 AM -06:00&#39; -FormatString &#39;ddd dd MMM yyyy h:mm tt zzz&#39;</dev:code>
				<dev:remarks>
					<maml:para>Sunday, June 15, 2008 5:30:00 PM

Description
-----------
It converts the date string specified for the Value parameter with the custom specifier specified for the FormatString parameter.
The result DateTime object format corresponds to the current culture.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Blog	http://PowerShay.com</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText>information	http://msdn.microsoft.com/en-us/library/w2sa9yss.aspx</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>http://gallery.technet.microsoft.com/scriptcenter/5b40075b-caef-45e8-8b12-d882fcd0dd9c</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>ConvertTo-HashTable</command:name>
			<maml:description>
				<maml:para>It converts an object to a HashTable</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>ConvertTo</command:verb>
			<command:noun>HashTable</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>It converts an object to a HashTable excluding certain types.

For example ListDictionaryInternal doesn&#39;t support serialization therefore it can&#39;t be converted.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>ConvertTo-HashTable</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
					<maml:name>InputObject</maml:name>
					<maml:description>
						<maml:para>The object to convert</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
					<maml:name>ExcludeTypeName</maml:name>
					<maml:description>
						<maml:para>The array of types to skip adding to resulting HashTable.
Default is to skip ListDictionaryInternal and Object arrays.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
					<maml:name>MaxDepth</maml:name>
					<maml:description>
						<maml:para>Maximum depth of embedded objects to convert, default is 4.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para>The object to convert</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				<dev:type>
					<maml:name>Object</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>ExcludeTypeName</maml:name>
				<maml:description>
					<maml:para>The array of types to skip adding to resulting HashTable.
Default is to skip ListDictionaryInternal and Object arrays.</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>@(&#39;ListDictionaryInternal&#39;, &#39;Object[]&#39;)</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>MaxDepth</maml:name>
				<maml:description>
					<maml:para>Maximum depth of embedded objects to convert, default is 4.</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>4</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>$bios = Get-CimInstance win32_bios</dev:code>
				<dev:remarks>
					<maml:para>$bios | ConvertTo-HashTable

Name                           Value
----                           -----
SoftwareElementState           3
Manufacturer                   American Megatrends Inc.
Caption                        4.6.5
CurrentLanguage                en|US|iso8859-1

Description
-----------
It converts an object to a HashTable</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>ConvertTo-hex</command:name>
			<maml:description>
				<maml:para>Converts a given integer to HEX</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>ConvertTo</command:verb>
			<command:noun>hex</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Converts any given Integer (INT) to Hex and dumps it to the Console</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>ConvertTo-hex</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
					<maml:name>dec</maml:name>
					<maml:description>
						<maml:para>N.A.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Int64</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>dec</maml:name>
				<maml:description>
					<maml:para>N.A.</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">Int64</command:parameterValue>
				<dev:type>
					<maml:name>Int64</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>0</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Int64</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Renamed function
Just a little helper function</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>ConvertTo-hex &quot;100&quot;</dev:code>
				<dev:remarks>
					<maml:para>0x64

Description
-----------
Converts a given integer to HEX</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>ConvertTo-HumanReadable</command:name>
			<maml:description>
				<maml:para>It converts a given long number to a more human readable format.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>ConvertTo</command:verb>
			<command:noun>HumanReadable</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>It converts a given long number to a more human readable format.,
it coverts 1024 to 1KB as basic example.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>ConvertTo-HumanReadable</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
					<maml:name>num</maml:name>
					<maml:description>
						<maml:para>Input Number</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Int64</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
				<maml:name>num</maml:name>
				<maml:description>
					<maml:para>Input Number</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">Int64</command:parameterValue>
				<dev:type>
					<maml:name>Int64</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>0</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.Int64</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>ConvertTo-HumanReadable -num &#39;1024&#39;</dev:code>
				<dev:remarks>
					<maml:para>1,0 KB

Description
-----------
It converts a given long number to a more human readable format.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>(Get-Item &#39;C:\scripts\PowerShell\profile.ps1&#39;).Length | ConvertTo-HumanReadable</dev:code>
				<dev:remarks>
					<maml:para>25 KB

Description
-----------
Get the Size of a File (C:\scripts\PowerShell\profile.ps1 in this case)
and make it human understandable</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>ConvertTo-Objects</command:name>
			<maml:description>
				<maml:para>You receive a result from a query and convert it to an array of objects.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>ConvertTo</command:verb>
			<command:noun>Objects</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>You receive a result from a query and convert it to an array of objects, which is more legible to understand.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>ConvertTo-Objects</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
					<maml:name>Input</maml:name>
					<maml:description>
						<maml:para>Input Objects</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
				<maml:name>Input</maml:name>
				<maml:description>
					<maml:para>Input Objects</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">Object[]</command:parameterValue>
				<dev:type>
					<maml:name>Object[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.Object[]</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Management.Automation.PSCustomObject[]</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>$input = Select-SqlCeServer &#39;SELECT * FROM TABLE1&#39; &#39;Data Source=C:\Users\cdbody05\Downloads\VisorImagenesNacional\VisorImagenesNacional\DIVIPOL.sdf;&#39;</dev:code>
				<dev:remarks>
					<maml:para>$input | ConvertTo-Objects

Description
-----------
You receive a result from a query and convert it to an array of objects, which is more legible to understand.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>ConvertTo-PlainText</command:name>
			<maml:description>
				<maml:para>It converts a secure string back to plain text.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>ConvertTo</command:verb>
			<command:noun>PlainText</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>It converts a secure string back to plain text.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>ConvertTo-PlainText</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="SecureString">
					<maml:name>secure</maml:name>
					<maml:description>
						<maml:para>Secure String to convert back to plain text.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="SecureString">
				<maml:name>secure</maml:name>
				<maml:description>
					<maml:para>Secure String to convert back to plain text.</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">SecureString</command:parameterValue>
				<dev:type>
					<maml:name>SecureString</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Helper function</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>ConvertTo-PlainText -Secure &#39;SECURESTRINGHERE&#39;</dev:code>
				<dev:remarks>
					<maml:para>Plain String

Description
-----------
It converts a secure string back to plain text.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>ConvertTo-StringList</command:name>
			<maml:description>
				<maml:para>Function to convert an array into a string list with a delimiter.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>ConvertTo</command:verb>
			<command:noun>StringList</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Function to convert an array into a string list with a delimiter.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>ConvertTo-StringList</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
					<maml:name>array</maml:name>
					<maml:description>
						<maml:para>Specifies the array to process.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Array</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
					<maml:name>Delimiter</maml:name>
					<maml:description>
						<maml:para>Separator between value, default is &quot;,&quot;</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
				<maml:name>array</maml:name>
				<maml:description>
					<maml:para>Specifies the array to process.</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">Array</command:parameterValue>
				<dev:type>
					<maml:name>Array</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Delimiter</maml:name>
				<maml:description>
					<maml:para>Separator between value, default is &quot;,&quot;</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>,</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.Array</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Based on an idea of Francois-Xavier Cat</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>$Computers = &quot;Computer1&quot;,&quot;Computer2&quot;</dev:code>
				<dev:remarks>
					<maml:para>ConvertTo-StringList -Array $Computers
Computer1,Computer2

Description
-----------
Convert an array into a string list with a default delimiter.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>$Computers = &quot;Computer1&quot;,&quot;Computer2&quot;</dev:code>
				<dev:remarks>
					<maml:para>ConvertTo-StringList -Array $Computers -Delimiter &quot;__&quot;
Computer1__Computer2

Description
-----------
Convert an array into a string list with a given delimiter.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>$Computers = &quot;Computer1&quot;</dev:code>
				<dev:remarks>
					<maml:para>ConvertTo-StringList -Array $Computers -Delimiter &quot;__&quot;
Computer1

Description
-----------
Convert an array into a string list with a given delimiter.
In this case, just one item is given!</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Disable-IEESEC</command:name>
			<maml:description>
				<maml:para>Disabling IE Enhanced Security Configuration (IE ESC)</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Disable</command:verb>
			<command:noun>IEESEC</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Disabling IE Enhanced Security Configuration (IE ESC)</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Disable-IEESEC</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Users</maml:name>
					<maml:description>
						<maml:para>Apply for Users?</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Admins</maml:name>
					<maml:description>
						<maml:para>Apply for Admins?</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>All</maml:name>
					<maml:description>
						<maml:para>Apply for Users and Admins?</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Users</maml:name>
				<maml:description>
					<maml:para>Apply for Users?</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Admins</maml:name>
				<maml:description>
					<maml:para>Apply for Admins?</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>True</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>All</maml:name>
				<maml:description>
					<maml:para>Apply for Users and Admins?</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Disable-IEESEC -Admins</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Remove the IE Enhanced Security Configuration (IE ESC) for Admin Users</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Disable-IEESEC -Users</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Remove the IE Enhanced Security Configuration (IE ESC) for regular
Users</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Disable-IEESEC -All</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Remove the IE Enhanced Security Configuration (IE ESC) for Admin and
regular Users</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Disable-IEESEC -WhatIf</dev:code>
				<dev:remarks>
					<maml:para>What if: Performing the operation &quot;Set the new value: Disable&quot; on target &quot;IE Enhanced Security Configuration&quot;.

Description
-----------
Show what would be changed without doing it!</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Edit-HostsFile</command:name>
			<maml:description>
				<maml:para>Edit the Windows Host file</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Edit</command:verb>
			<command:noun>HostsFile</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>A shortcut to quickly edit the Windows host file. It might be useful for testing things without changing the regular DNS.

Handle with care!</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Edit-HostsFile</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Edit-HostsFile</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Opens the Editor configured within the VisualEditor variable to edit
the Windows Host file</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>ConvertTo-EscapeString</command:name>
			<maml:description>
				<maml:para>HTML on web pages uses tags and other special characters to define the page.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>ConvertTo</command:verb>
			<command:noun>EscapeString</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>HTML on web pages uses tags and other special characters to define the page.
To make sure the text is not misinterpreted as HTML tags, you may want to escape text and automatically convert any ambiguous text character in an encoded format.
Mostly useful if you need to use it in Web-Calls or for automated posts (via your own scripts).</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>ConvertTo-EscapeString</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="Message">
					<maml:name>String</maml:name>
					<maml:description>
						<maml:para>String to escape</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="Message">
				<maml:name>String</maml:name>
				<maml:description>
					<maml:para>String to escape</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This function has a companion: ConvertFrom-EscapedString
The companion reverses the escaped strings back to regular ones.</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>ConvertTo-EscapeString -String &quot;Hello World&quot;</dev:code>
				<dev:remarks>
					<maml:para>Hello%20World

Description
-----------
In this example we escape the space in the string &quot;Hello World&quot;</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>&quot;http://www.alright-it.com&quot; | ConvertTo-EscapeString</dev:code>
				<dev:remarks>
					<maml:para>http%3A%2F%2Fwww.alright-it.com

Description
-----------
In this example we escape the URL string</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>ConvertFrom-EscapedString</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>ConvertFrom-EscapedString</command:name>
			<maml:description>
				<maml:para>It converts an encoded (escaped) string back into the original representation.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>ConvertFrom</command:verb>
			<command:noun>EscapedString</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>If you have an escaped string, this function makes it human readable  again.
Some Web services returns strings an escaped format, so we convert an  encoded (escaped) string back into the original representation.
Mostly useful if you need to use it in Web-Calls or for automated posts (via your own scripts).</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>ConvertFrom-EscapedString</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="Message">
					<maml:name>String</maml:name>
					<maml:description>
						<maml:para>String to un-escape</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="Message">
				<maml:name>String</maml:name>
				<maml:description>
					<maml:para>String to un-escape</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This function has a companion: ConvertTo-EscapeString
The companion escapes any given regular string.</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>ConvertFrom-EscapedString -String &quot;Hello%20World&quot;</dev:code>
				<dev:remarks>
					<maml:para>Hello World

Description
-----------
In this example we un-escape the space in the string &quot;Hello%20World&quot;</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>&quot;http%3A%2F%2Fwww.alright-it.com&quot; | ConvertFrom-EscapedString</dev:code>
				<dev:remarks>
					<maml:para>http://www.alright-it.com

Description
-----------
In this example we un-escape the masked (escaped) URL string</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>ConvertTo-EscapeString</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Expand-ArrayObject</command:name>
			<maml:description>
				<maml:para>You get an array of objects and perform an expansion of data separated by a spacer.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Expand</command:verb>
			<command:noun>ArrayObject</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>You get an array of objects and perform an expansion of data separated by a spacer.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Expand-ArrayObject</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
					<maml:name>array</maml:name>
					<maml:description>
						<maml:para>Input Array</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Array</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1">
					<maml:name>field</maml:name>
					<maml:description>
						<maml:para>Field to extract from the Array</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Delimiter</maml:name>
					<maml:description>
						<maml:para>Delimiter within the Array, default is &quot;;&quot;</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Char</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
				<maml:name>array</maml:name>
				<maml:description>
					<maml:para>Input Array</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">Array</command:parameterValue>
				<dev:type>
					<maml:name>Array</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1">
				<maml:name>field</maml:name>
				<maml:description>
					<maml:para>Field to extract from the Array</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Delimiter</maml:name>
				<maml:description>
					<maml:para>Delimiter within the Array, default is &quot;;&quot;</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">Char</command:parameterValue>
				<dev:type>
					<maml:name>Char</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>;</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.Array</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Management.Automation.PSCustomObject[]</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>$arr | Expand-ArrayObject fieldX</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
You get an array of objects and perform an expansion of data separated by a spacer.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Invoke-WindowsExplorer</command:name>
			<maml:description>
				<maml:para>Open the Windows Explorer.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Invoke</command:verb>
			<command:noun>WindowsExplorer</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Open the Windows Explorer in the current or given directory.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Invoke-WindowsExplorer</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="loc">
					<maml:name>Location</maml:name>
					<maml:description>
						<maml:para>Where to open the Windows Explorer, default is where the command is called.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="loc">
				<maml:name>Location</maml:name>
				<maml:description>
					<maml:para>Where to open the Windows Explorer, default is where the command is called.</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>.</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Just a little helper function</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Invoke-WindowsExplorer</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Open the Windows Explorer in the current directory</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Invoke-WindowsExplorer &#39;C:\scripts&#39;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Open the Windows Explorer in the given &#39;C:\scripts&#39; directory.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Test-Filelock</command:name>
			<maml:description>
				<maml:para>It tests if a given file is locked.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Test</command:verb>
			<command:noun>Filelock</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>It tests if a given file is locked.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Test-Filelock</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="File">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>File to check</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">FileInfo</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="File">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>File to check</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">FileInfo</command:parameterValue>
				<dev:type>
					<maml:name>FileInfo</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.IO.FileInfo</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Boolean</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Just a helper function</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>Test-Filelock .\profile.ps1</dev:code>
				<dev:remarks>
					<maml:para>path          filelocked
----          ----------
.\profile.ps1      False

Description
-----------
It tests if a given file is locked.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Get-FileLock</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-FileLock</command:name>
			<maml:description>
				<maml:para>It tests if a given file is locked.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>FileLock</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>It tests if a given file is locked.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-FileLock</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>File to check</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>File to check</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Companion function Test-Filelock is needed!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-FileLock</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
It tests if a given file is locked.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Test-Filelock</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Set-FirewallExceptionRDP</command:name>
			<maml:description>
				<maml:para>It enables Windows Remote Desktop (RDP) via Windows Firewall.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Set</command:verb>
			<command:noun>FirewallExceptionRDP</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>It enables Windows Remote Desktop (RDP) via Windows Firewall.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Set-FirewallExceptionRDP</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Only the defaults are supported. If you use another port, you need to check the firewall rules!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Set-FirewallExceptionRDP</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
It enables Windows Remote Desktop (RDP) via Windows Firewall.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Set-FirewallExceptionFileSharing</command:name>
			<maml:description>
				<maml:para>It enables File Sharing via Windows Firewall.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Set</command:verb>
			<command:noun>FirewallExceptionFileSharing</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>It enables File Sharing via Windows Firewall.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Set-FirewallExceptionFileSharing</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Only SMB sharing is supported here.
If you want to use iSCSI or any AFP (Apple File Sharing) extension, you need to enable this by yourself.</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Set-FirewallExceptionFileSharing</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
It enables File Sharing via Windows Firewall.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-Accelerators</command:name>
			<maml:description>
				<maml:para>Get a list of all .NET functions</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>Accelerators</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Get a list of all .NET functions</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-Accelerators</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-Accelerators</dev:code>
				<dev:remarks>
					<maml:para>Key                                                             Value
---                                                             -----
Alias                                                           System.Management.Automation.AliasAttribute

Description
-----------
Get a list of all .NET functions</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-Accelerators | Format-List</dev:code>
				<dev:remarks>
					<maml:para>Key   : Alias
Value : System.Management.Automation.AliasAttribute

Key   : AllowEmptyCollection
Value : System.Management.Automation.AllowEmptyCollectionAttribute

Description
-----------
Get a list of all .NET functions</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-AdminUser</command:name>
			<maml:description>
				<maml:para>Check if the user has started the PowerShell session as admin.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>AdminUser</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Check if the user has started the PowerShell session as admin.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-AdminUser</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Boolean</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Just a little helper function</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-AdminUser</dev:code>
				<dev:remarks>
					<maml:para>True

Description
-----------
Return a boolean (True if the user is Admin and False if not)</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>if ( Get-AdminUser ) { Write-Output &quot;Hello Admin User&quot; }</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Prints &quot;Hello Admin User&quot; to the Console if the session is started
as Admin!</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-ASCBanner</command:name>
			<maml:description>
				<maml:para>Create an ASC II Banner for a given string.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>ASCBanner</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Create an ASC II Banner for a given string.
It looks a bit 80s like first, but with PowerShell we heavily rely on the Shell. And ASCII Art might still be useful today.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-ASCBanner</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
					<maml:name>InputString</maml:name>
					<maml:description>
						<maml:para></maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
					<maml:name>IsString</maml:name>
					<maml:description>
						<maml:para>Is this a String that should be dumped as ASC Art?</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
					<maml:name>ASCChar</maml:name>
					<maml:description>
						<maml:para>Character for the ASC Banner, * is the default</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Char</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
				<maml:name>InputString</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>IsString</maml:name>
				<maml:description>
					<maml:para>Is this a String that should be dumped as ASC Art?</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>True</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>ASCChar</maml:name>
				<maml:description>
					<maml:para>Character for the ASC Banner, * is the default</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">Char</command:parameterValue>
				<dev:type>
					<maml:name>Char</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>*</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Just for fun!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-ASCBanner -InputString &#39;Welcome&#39; -IsString -ASCChar &#39;#&#39;</dev:code>
				<dev:remarks>
					<maml:para>#     #
#  #  #  ######  #        ####    ####   #    #  ######
#  #  #  #       #       #    #  #    #  ##  ##  #
#  #  #  #####   #       #       #    #  # ## #  #####
#  #  #  #       #       #       #    #  #    #  #
#  #  #  #       #       #    #  #    #  #    #  #
## ##   ######  ######   ####    ####   #    #  ######

Description
-----------
Create an ASC II Banner for a given String</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-ASCBanner -InputString &#39;Alright-IT&#39; -IsString -ASCChar &#39;*&#39;</dev:code>
				<dev:remarks>
					<maml:para>*                                                              ***   *******
* *    *       *****      *     ****   *    *   *****            *       *
*   *   *       *    *     *    *    *  *    *     *              *       *
*     *  *       *    *     *    *       ******     *    *****     *       *
*******  *       *****      *    *  ***  *    *     *              *       *
*     *  *       *   *      *    *    *  *    *     *              *       *
*     *  ******  *    *     *     ****   *    *     *             ***      *

Description
-----------
Create an ASC II Banner for a given String</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-AvailibleDriveLetter</command:name>
			<maml:description>
				<maml:para>Get an available Drive Letter</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>AvailibleDriveLetter</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Get an available Drive Letter, next free available or random</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-AvailibleDriveLetter</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Random</maml:name>
					<maml:description>
						<maml:para>Get a random available Drive letter instead of the next free one.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Random</maml:name>
				<maml:description>
					<maml:para>Get a random available Drive letter instead of the next free one.</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Found the base idea on PowerShellMagazine</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-AvailibleDriveLetter -Random</dev:code>
				<dev:remarks>
					<maml:para>O:

Description
-----------
Get an available Drive Letter (A Random selection of a free letter)</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-AvailibleDriveLetter</dev:code>
				<dev:remarks>
					<maml:para>F:

Description
-----------
Get the next available unused Drive Letter (non random)</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>http://www.powershellmagazine.com/2012/01/12/find-an-unused-drive-letter/</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-BingSearch</command:name>
			<maml:description>
				<maml:para>It gets the Bing search results for a string.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>BingSearch</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>It gets the latest Bing search results for a given string and presents it on the console.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-BingSearch</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Search">
					<maml:name>searchstring</maml:name>
					<maml:description>
						<maml:para>String to search for on Bing</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Search">
				<maml:name>searchstring</maml:name>
				<maml:description>
					<maml:para>String to search for on Bing</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>$(throw &#39;Please specify a search string.&#39;)</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This is a function that Michael found useful, so we adopted and
tweaked it a bit.

The original function was found somewhere on the Internet!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-BingSearch -searchstring &quot;Joerg Hochwald&quot;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Return the Bing Search Results for &quot;Joerg Hochwald&quot;</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-BingSearch -searchstring &quot;KreativSign GmbH&quot;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Return the Bing Search Results for &quot;KreativSign GmbH&quot; as a formated
List (fl = Format-List)</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-Calendar</command:name>
			<maml:description>
				<maml:para>It displays a calendar to the console.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>Calendar</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>It displays a calendar to the console.
You might find it handy to have that on a core server or in a remote PowerShell session.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-Calendar</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
					<maml:name>StartDate</maml:name>
					<maml:description>
						<maml:para>The Date the Calendar should start</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">DateTime</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>StartDate</maml:name>
				<maml:description>
					<maml:para>The Date the Calendar should start</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">DateTime</command:parameterValue>
				<dev:type>
					<maml:name>DateTime</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>(Get-Date)</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-Calendar</dev:code>
				<dev:remarks>
					<maml:para>April 2016
Mo Tu We Th Fr Sa Su
01 02 03
04 05 06 07 08 09 10
11 12 13 14 15 16 17
18 19 20 21 22 23 24
25 26 27 28 29 30

Description
-----------
Dumps a calendar to the console.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-DiskInfo</command:name>
			<maml:description>
				<maml:para>Show free disk space for all disks.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>DiskInfo</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>It shows the free disk space for all available disks.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-DiskInfo</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Internal Helper</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-DiskInfo</dev:code>
				<dev:remarks>
					<maml:para>Loading system disk free space information...
C Drive has 24,77 GB of free space.
D Drive has 1,64 GB of free space.

Description
-----------
It shows the free disk space for all available disks.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-EnvironmentVariables</command:name>
			<maml:description>
				<maml:para>Get and list all environment variables.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>EnvironmentVariables</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Dump all existing environment variables.
Sometimes this becomes handy if you do something that changes them; and you want to compare the values before and after the changes (see examples).</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-EnvironmentVariables</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Initial Version...</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-EnvironmentVariables</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Get and list all environment variables.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>$before = (Get-EnvironmentVariables)</dev:code>
				<dev:remarks>
					<maml:para>PS C:\&gt; Installer
PS C:\&gt; $after = (Get-EnvironmentVariables)
PS C:\&gt; Compare-Object -ReferenceObject $before -DifferenceObject $after

Description
-----------
Get and list all Environment Variables and save them to a variable.
Install, or do whatever you want to do... Something that might change the Environment Variables.
Get and list all Environment Variables again and save them to a variable.
Then we compare the two results...</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>(Get-EnvironmentVariables) | C:\scripts\PowerShell\export\before.txt</dev:code>
				<dev:remarks>
					<maml:para>PS C:\&gt; Installer
PS C:\&gt; reboot
PS C:\&gt; (Get-EnvironmentVariables) | C:\scripts\PowerShell\export\after.txt
PS C:\&gt; Compare-Object -ReferenceObject &#39;C:\scripts\PowerShell\export\before.txt&#39; -DifferenceObject &#39;C:\scripts\PowerShell\export\after.txt&#39;

Description
-----------
Get and list all Environment Variables and save them to a file.
Install, or do whatever you want to do... Something that might change the Environment Variables.
Get and list all Environment Variables again and save them to another file.
Then we compare the two results...</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-ExternalIP</command:name>
			<maml:description>
				<maml:para>Get the current external IP address.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>ExternalIP</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Get the current external IP address.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-ExternalIP</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Speed</maml:name>
					<maml:description>
						<maml:para>Try to measure the speed of the actual connection.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Ping</maml:name>
					<maml:description>
						<maml:para>Use Ping to see if a given host is reachable. Useful to see if we have a working Internet connection.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Short</maml:name>
					<maml:description>
						<maml:para>Minimize the output.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
					<maml:name>PingHost</maml:name>
					<maml:description>
						<maml:para>Ping the given host</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Speed</maml:name>
				<maml:description>
					<maml:para>Try to measure the speed of the actual connection.</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Ping</maml:name>
				<maml:description>
					<maml:para>Use Ping to see if a given host is reachable. Useful to see if we have a working Internet connection.</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Short</maml:name>
				<maml:description>
					<maml:para>Minimize the output.</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>PingHost</maml:name>
				<maml:description>
					<maml:para>Ping the given host</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>8.8.8.8</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>TODO: Move the check function to another Server and enable https</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-ExternalIP -Short</dev:code>
				<dev:remarks>
					<maml:para>84.132.180.143

Description
-----------
Get the current external IP address.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-ExternalIP -Speed</dev:code>
				<dev:remarks>
					<maml:para>Current external IP Address:  84.132.174.61
Download Speed: 136,95 Mbit/sec

Description
-----------
Get the current external IP address and measure the download speed of the actual connection.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-ExternalIP -Ping</dev:code>
				<dev:remarks>
					<maml:para>Current external IP Address:  84.132.174.61
Ping Info for 8.8.8.8: Minimum = 30ms, Maximum = 31ms, Average = 30ms

Description
-----------
Get the current external IP address and measure the Ping Time.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-ExternalIP -Ping -Speed</dev:code>
				<dev:remarks>
					<maml:para>Current external IP Address:  84.132.174.61
Download Speed: 102,73 Mbit/sec
Ping Info for 8.8.8.8: Minimum = 30ms, Maximum = 31ms, Average = 30ms

Description
-----------
Get the current external IP address and measure the Ping Time and Download Speed.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 5 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-ExternalIP</dev:code>
				<dev:remarks>
					<maml:para>Current external IP Address:  84.132.174.61

Description
-----------
Get the current external IP address in longer format.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://tools.aitlab.de/ip.php</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-FreeDiskSpace</command:name>
			<maml:description>
				<maml:para>It shows the free disk space of all local disks.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>FreeDiskSpace</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>This is a Uni* DF like command that shows the available disk space.
It is human readable (e.g. more like df -h)</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-FreeDiskSpace</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Array</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Just a quick hack to make Powershell more Uni* like</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-FreeDiskSpace</dev:code>
				<dev:remarks>
					<maml:para>Name Disk Size(GB) Free (%)
---- ------------- --------
C          64         42%
D           2         84%

Description
-----------
It shows the free disk space of all local disks.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Idea http://www.computerperformance.co.uk/powershell/powershell_get_psdrive.htm</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-Hash</command:name>
			<maml:description>
				<maml:para>It dumps the MD5 hash for the given file object.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>Hash</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>It dumps the MD5 hash for the given file object.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-Hash</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
					<maml:name>File</maml:name>
					<maml:description>
						<maml:para>File or path to dump MD5 Hash for</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1">
					<maml:name>hash</maml:name>
					<maml:description>
						<maml:para>It specifies the cryptographic hash function to use for computing the hash value to the contents of the specified file.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
				<maml:name>File</maml:name>
				<maml:description>
					<maml:para>File or path to dump MD5 Hash for</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1">
				<maml:name>hash</maml:name>
				<maml:description>
					<maml:para>It specifies the cryptographic hash function to use for computing the hash value to the contents of the specified file.</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>MD5</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>It is removed and replaced with a wrapper of the native PowerShell function!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-Hash -File &#39;C:\scripts\PowerShell\profile.ps1&#39;</dev:code>
				<dev:remarks>
					<maml:para>30BB3458D34B1A0F10E52F9F39025925

Description
-----------
Dumps the MD5 hash for the given File</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-Hash -File &#39;C:\scripts\PowerShell\profile.ps1&#39; -hash SHA1</dev:code>
				<dev:remarks>
					<maml:para>36A09B3C5BCB35AE48719D31699E96F72721FFFE

Description
-----------
Dumps the SHA1 hash for the given File</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-HostFileEntry</command:name>
			<maml:description>
				<maml:para>It dumps the HOSTS File to the Console</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>HostFileEntry</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>It dumps the HOSTS File to the Console
It dumps the WINDIR\System32\drivers\etc\hosts file! And only this.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-HostFileEntry</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This is just a little helper function to make the shell more flexible
Sometimes I need to know what is set in the HOSTS File...
So I came up with that approach.</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-HostFileEntry</dev:code>
				<dev:remarks>
					<maml:para>IP                                                              Hostname
--                                                              --------
10.211.55.123                                                   GOV13714W7
10.211.55.10                                                    jhwsrv08R2
10.211.55.125                                                   KSWIN07DEV

Description
-----------
Dumps the HOSTS File to the Console</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-HttpHead</command:name>
			<maml:description>
				<maml:para>It retrieves the HTTP headers from a given web server.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>HttpHead</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>This command will get the HTTP headers from the target web server and test for the presence of various security-related HTTP headers and also display the cookie information.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-HttpHead</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="link">
					<maml:name>url</maml:name>
					<maml:description>
						<maml:para>The URL for inspection, e.g. https://www.linkedin.com</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="link">
				<maml:name>url</maml:name>
				<maml:description>
					<maml:para>The URL for inspection, e.g. https://www.linkedin.com</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Based on an idea of Dave Hardy, davehardy20@gmail.com @davehrdy20</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-HttpHead -url https://www.linkedin.com</dev:code>
				<dev:remarks>
					<maml:para>Header Information for https://www.linkedin.com

Description
-----------
Retrieve HTTPs Headers from www.linkedin.com</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-HttpHead -url http://enatec.io</dev:code>
				<dev:remarks>
					<maml:para>Header Information for http://enatec.io

Description
-----------
Retrieve HTTP Headers from enatec.io</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Source: https://github.com/davehardy20/PowerShell-Scripts/blob/master/Get-HttpSecHead.ps1</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-InstalledDotNetVersions</command:name>
			<maml:description>
				<maml:para>It shows all installed .NET versions</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>InstalledDotNetVersions</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>It shows all .NET versions installed on the local system</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-InstalledDotNetVersions</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Management.Automation.PSCustomObject</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Based on Show-MyDotNetVersions from Tzvika N 9. I just tweaked the Code and removed the HTML parts
All Versions after .NET 4.5 will have the Version 4.5+ and show the full version in the FullVersion</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-InstalledDotNetVersions</dev:code>
				<dev:remarks>
					<maml:para>Version FullVersion
------- -----------
2.0     2.0.50727.5420
3.0     3.0.30729.5420
3.5     3.5.30729.5420
4.0     4.0.0.0
4.5+    4.6.1

Description
-----------
Shows all .NNET versions installed on the local system</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>http://poshcode.org/6403</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-IsSessionElevated</command:name>
			<maml:description>
				<maml:para>Is the Session started as admin (Elevated)</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>IsSessionElevated</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Quick Helper that return if the session is started as admin (Elevated)
It returns a Boolean (True or False) and sets a global variable (IsSessionElevated) with this Boolean value.
This might be useful for further use!</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-IsSessionElevated</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Boolean</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Quick Helper that Return if the session is started as admin (Elevated)</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-IsSessionElevated</dev:code>
				<dev:remarks>
					<maml:para>True

Description
-----------
If the session is elevated</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-IsSessionElevated</dev:code>
				<dev:remarks>
					<maml:para>False

Description
-----------
If the session is not elevated</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-IsVirtual</command:name>
			<maml:description>
				<maml:para>It checks if the is a Virtual Machine</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>IsVirtual</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>It checks if the is a Virtual Machine
If this is a virtual System the Boolean is True, if not it is False</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-IsVirtual</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Boolean</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>The Function name is changed!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-IsVirtual</dev:code>
				<dev:remarks>
					<maml:para>True

Description
-----------
If this is a virtual System the Boolean is True, if not it is False</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-IsVirtual</dev:code>
				<dev:remarks>
					<maml:para>False

Description
-----------
If this is not a virtual System the Boolean is False, if so it is True</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-LocalIPAdresses</command:name>
			<maml:description>
				<maml:para>Show all local IP Addresses</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>LocalIPAdresses</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Show all local IP Addresses</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-LocalIPAdresses</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>LinkLocal</maml:name>
					<maml:description>
						<maml:para>Show IsIPv6LinkLocal?</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>LinkLocal</maml:name>
				<maml:description>
					<maml:para>Show IsIPv6LinkLocal?</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-LocalIPAdresses</dev:code>
				<dev:remarks>
					<maml:para>IPAddressToString                                          AddressFamily
-----------------                                          -------------
fe80::3db7:8507:3f9a:bb13%11                              InterNetworkV6
10.211.55.125                                               InterNetwork

Description
-----------
Show all local IP Addresses</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-LocalIPAdresses</dev:code>
				<dev:remarks>
					<maml:para>IPAddressToString  AddressFamily
-----------------  -------------
10.211.55.5         InterNetwork
::1               InterNetworkV6

Description
-----------
Show all local IP Addresses</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-LocalIPAdresses | Format-List</dev:code>
				<dev:remarks>
					<maml:para>IPAddressToString : fe80::3db7:8507:3f9a:bb13%11
AddressFamily     : InterNetworkV6

IPAddressToString : 10.211.55.125
AddressFamily     : InterNetwork

Description
-----------
Show all local IP Addresses, formated</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-LocalIPAdresses -LinkLocal | ConvertTo-Csv -NoTypeInformation</dev:code>
				<dev:remarks>
					<maml:para>&quot;IPAddressToString&quot;,&quot;AddressFamily&quot;,&quot;IsIPv6LinkLocal&quot;
&quot;fe80::3db7:8507:3f9a:bb13%11&quot;,&quot;InterNetworkV6&quot;,&quot;True&quot;
&quot;10.211.55.125&quot;,&quot;InterNetwork&quot;,&quot;False&quot;

Description
-----------
Show all local IP Addresses as CSV and shows IsIPv6LinkLocal info</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-LocalListenPort</command:name>
			<maml:description>
				<maml:para>This parses the native netstat.exe output using the command line
&quot;netstat -anb&quot; to find all of the network ports in use on a local
machine and all associated processes and services</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>LocalListenPort</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>This parses the native netstat.exe output using the command line
&quot;netstat -anb&quot; to find all of the network ports in use on a local
machine and all associated processes and services</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-LocalListenPort</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Based on an idea of Adam Bertram</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-LocalListenPort</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
This example will find all network ports in uses on the local
computer with associated processes and services</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-LocalListenPort | Where-Object {$_.ProcessOwner -eq &#39;svchost.exe&#39;}</dev:code>
				<dev:remarks>
					<maml:para>RemotePort    : 0
ProcessOwner  : svchost.exe
IPVersion     : IPv4
LocalPort     : 135
State         : LISTENING
LocalAddress  : 0.0.0.0
RemoteAddress : 0.0.0.0
Protocol      : TCP
Service       : RpcSs

Description
-----------
This example will find all network ports in use on the local computer
that were opened by the svchost.exe process. (Example output trimmed)</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-LocalListenPort | Where-Object {$_.IPVersion -eq &#39;IPv4&#39;}</dev:code>
				<dev:remarks>
					<maml:para>RemotePort    : 0
ProcessOwner  : svchost.exe
IPVersion     : IPv4
LocalPort     : 135
State         : LISTENING
LocalAddress  : 0.0.0.0
RemoteAddress : 0.0.0.0
Protocol      : TCP
Service       : RpcSs

Description
-----------
This example will find all network ports in use on the local computer
using IPv4 only. (Example output trimmed)</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-LocalListenPort | Where-Object {$_.IPVersion -eq &#39;IPv6&#39;}</dev:code>
				<dev:remarks>
					<maml:para>RemotePort    : 0
ProcessOwner  : svchost.exe
IPVersion     : IPv6
LocalPort     : 135
State         : LISTENING
LocalAddress  : ::
RemoteAddress : ::
Protocol      : TCP
Service       : RpcSs

Description
-----------
This example will find all network ports in use on the local computer
using IPv6 only. (Example output trimmed)</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-MicrosoftUpdateInfo</command:name>
			<maml:description>
				<maml:para>Gives a list of all Microsoft Updates sorted by KB number/HotfixID</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>MicrosoftUpdateInfo</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Gives a list of all Microsoft Updates sorted by KB number/HotfixID</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-MicrosoftUpdateInfo</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
					<maml:name>raw</maml:name>
					<maml:description>
						<maml:para>Just dum the Objects?</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>raw</maml:name>
				<maml:description>
					<maml:para>Just dum the Objects?</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Basic Function found here: http://tomtalks.uk/2013/09/list-all-microsoftwindows-updates-with-powershell-sorted-by-kbhotfixid-Get-microsoftupdate/
By Tom Arbuthnot. Lyncdup.com

We just adopted and tweaked it.</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-MicrosoftUpdateInfo</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Return the installed Microsoft Updates</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>$MicrosoftUpdateInfo = (Get-MicrosoftUpdateInfo -raw)</dev:code>
				<dev:remarks>
					<maml:para>$MicrosoftUpdateInfo | Where-Object { $_.HotFixID -eq &quot;KB3121461&quot; }

Description
-----------
Return the installed Microsoft Updates in a more raw format, this might
be handy if you want to reuse it!
In this example we search for the Update &quot;KB3121461&quot; only and
displays that info.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>$MicrosoftUpdateInfo = (Get-MicrosoftUpdateInfo -raw)</dev:code>
				<dev:remarks>
					<maml:para>[System.String](($MicrosoftUpdateInfo | Where-Object { $_.HotFixID -eq &quot;KB3121461&quot; }).Title)

Description
-----------
Return the installed Microsoft Updates in a more raw format, this might
be handy if you want to reuse it!
In this example we search for the Update &quot;KB3121461&quot; only and
displays the info about that Update as String.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Source: http://tomtalks.uk/2013/09/list-all-microsoftwindows-updates-with-powershell-sorted-by-kbhotfixid-Get-microsoftupdate/</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>http://blogs.technet.com/b/tmintner/archive/2006/07/07/440729.aspx</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>http://www.gfi.com/blog/windows-powershell-extracting-strings-using-regular-expressions/</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-myPROCESS</command:name>
			<maml:description>
				<maml:para>Get our own process information</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>myPROCESS</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Get our own process information about the PowerShell Session</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-myPROCESS</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Diagnostics.Process</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Just a little helper function that might be useful if you have a long
running shell session</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-myProcess</dev:code>
				<dev:remarks>
					<maml:para>Handles  NPM(K)    PM(K)      WS(K) VM(M)   CPU(s)     Id  SI ProcessName
-------  ------    -----      ----- -----   ------     --  -- -----------
666      51   124016     127952   773    10,55   1096   1 powershell

Description
-----------
Get our own process information</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-NetFramework</command:name>
			<maml:description>
				<maml:para>retrieve the list of Framework Installed</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>NetFramework</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>This function will retrieve the list of Framework Installed</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-NetFramework</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-NetFramework</dev:code>
				<dev:remarks>
					<maml:para>PSChildName                                   Version
-----------                                   -------
v2.0.50727                                    2.0.50727.4927
v3.0                                          3.0.30729.4926
Windows Communication Foundation              3.0.4506.4926
Windows Presentation Foundation               3.0.6920.4902
v3.5                                          3.5.30729.4926
Client                                        4.5.51641
Full                                          4.5.51641
Client                                        4.0.0.0

Description
-----------
This function will retrieve the list of Framework Installed</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-NetStat</command:name>
			<maml:description>
				<maml:para>This function will get the output of netstat -n and parse the output</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>NetStat</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>This function will get the output of netstat -n and parse the output</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-NetStat</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Based on an idea of Francois-Xavier Cat</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-NetStat</dev:code>
				<dev:remarks>
					<maml:para>LocalAddressIP     : 10.211.59.125
LocalAddressPort   : 1321
State              : ESTABLISHED
ForeignAddressIP   : 10.211.16.2
ForeignAddressPort : 10943
Protocole          : TCP

Description
-----------
This function will get the output of netstat -n and parse the output</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Idea: http://www.lazywinadmin.com/2014/08/powershell-parse-this-netstatexe.html</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-NewAesKey</command:name>
			<maml:description>
				<maml:para>Get a AES Key</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>NewAesKey</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Get a AES Key</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-NewAesKey</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Initial Version</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-NewAesKey</dev:code>
				<dev:remarks>
					<maml:para>3z38JJzHJghPYm9X95EP8Xbh2fuE8/rPxBi6N7mME9M=

Description
-----------
Get a AES Key</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-NewPassword</command:name>
			<maml:description>
				<maml:para>Generates a New password with varying length and Complexity,</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>NewPassword</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Generate a New Password for a User.  Defaults to 8 Characters
with Moderate Complexity.  Usage

GET-NEWPASSWORD or

GET-NEWPASSWORD $Length $Complexity

Where $Length is an integer from 1 to as high as you want
and $Complexity is an Integer from 1 to 4</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-NewPassword</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Length">
					<maml:name>PasswordLength</maml:name>
					<maml:description>
						<maml:para>Password Length</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="Level">
					<maml:name>Complexity</maml:name>
					<maml:description>
						<maml:para>Complexity Level</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Length">
				<maml:name>PasswordLength</maml:name>
				<maml:description>
					<maml:para>Password Length</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>8</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="Level">
				<maml:name>Complexity</maml:name>
				<maml:description>
					<maml:para>Complexity Level</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>3</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>The Complexity falls into the following setup for the Complexity level
1 - Pure lowercase Ascii
2 - Mix Uppercase and Lowercase Ascii
3 - Ascii Upper/Lower with Numbers
4 - Ascii Upper/Lower with Numbers and Punctuation</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-NewPassword</dev:code>
				<dev:remarks>
					<maml:para>zemermyya784vKx93

Description
-----------
Create New Password based on the defaults</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-NewPassword 9 1</dev:code>
				<dev:remarks>
					<maml:para>zemermyya

Description
-----------
Generate a Password of strictly Uppercase letters 9 letters long</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-NewPassword 5</dev:code>
				<dev:remarks>
					<maml:para>zemermyya784vKx93K2sqG

Description
-----------
Generate a Highly Complex password 5 letters long</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>$MYPASSWORD = (ConvertTo-SecureString (Get-NewPassword 8 2) -asplaintext -Force)</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Create a new 8 Character Password of Uppercase/Lowercase and store as
a Secure.String in Variable called $MYPASSWORD</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-Pause</command:name>
			<maml:description>
				<maml:para>Wait for user to press any key</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>Pause</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Shows a console message and waits for user to press any key.

Optional:
The message to display could be set by a command line parameter.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-Pause</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="Message">
					<maml:name>PauseMessage</maml:name>
					<maml:description>
						<maml:para>This optional parameter is the text that the function displays.
If this is not set, it uses a default text &quot;Press any key...&quot;</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="Message">
				<maml:name>PauseMessage</maml:name>
				<maml:description>
					<maml:para>This optional parameter is the text that the function displays.
If this is not set, it uses a default text &quot;Press any key...&quot;</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>Press any key...</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>PowerShell have no build in function like this</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-Pause</dev:code>
				<dev:remarks>
					<maml:para>Display a console message and wait for user to press any key.
It shows the default Text &quot;Press any key...&quot;</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-Pause &quot;Please press any key&quot;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Display a console message and wait for user to press any key.
It shows the Text &quot;Please press any key&quot;</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-Pause -PauseMessage &quot;Please press any key&quot;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Display a console message and wait for user to press any key.
It shows the Text &quot;Please press any key&quot;</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-PendingReboot</command:name>
			<maml:description>
				<maml:para>Gets the pending reboot status on a local or remote computer.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>PendingReboot</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>This function will query the registry on a local or remote computer and
determine if the system is pending a reboot, from either Microsoft
Patching or a Software Installation.
For Windows 2008+ the function will query the CBS registry key as
another factor in determining pending reboot state.
&quot;PendingFileRenameOperations&quot; and &quot;Auto Update\RebootRequired&quot; are
observed as being consistent across Windows Server 2003 &amp; 2008.

CBServicing = Component Based Servicing (Windows 2008)
WindowsUpdate = Windows Update / Auto Update (Windows 2003 / 2008)
CCMClientSDK = SCCM 2012 Clients only (DetermineIfRebootPending method) otherwise $null value
PendFileRename = PendingFileRenameOperations (Windows 2003 / 2008)</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-PendingReboot</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="CN , Computer">
					<maml:name>ComputerName</maml:name>
					<maml:description>
						<maml:para>A single Computer or an array of computer names.

The default is localhost ($env:COMPUTERNAME).</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="CN , Computer">
				<maml:name>ComputerName</maml:name>
				<maml:description>
					<maml:para>A single Computer or an array of computer names.

The default is localhost ($env:COMPUTERNAME).</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>&quot;$env:COMPUTERNAME&quot;</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Based on an idea of Brian Wilhite</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-PendingReboot -ComputerName (Get-Content C:\ServerList.txt) | Format-Table -AutoSize</dev:code>
				<dev:remarks>
					<maml:para>Computer CBServicing WindowsUpdate CCMClientSDK PendFileRename PendFileRenVal RebootPending
-------- ----------- ------------- ------------ -------------- -------------- -------------
DC01     False   False           False      False
DC02     False   False           False      False
FS01     False   False           False      False

Description
-----------
This example will capture the contents of C:\ServerList.txt and query
the pending reboot information from the systems contained in the file
and display the output in a table.
The null values are by design, since these systems do not have the
SCCM 2012 client installed, nor was the PendingFileRenameOperations
value populated.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-PendingReboot</dev:code>
				<dev:remarks>
					<maml:para>Computer     : WKS01
CBServicing  : False
WindowsUpdate      : True
CCMClient    : False
PendComputerRename : False
PendFileRename     : False
PendFileRenVal     :
RebootPending      : True

Description
-----------
This example will query the local machine for pending reboot information.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>$Servers = Get-Content C:\Servers.txt</dev:code>
				<dev:remarks>
					<maml:para>PS C:\&gt; Get-PendingReboot -Computer $Servers | Export-Csv C:\PendingRebootReport.csv -NoTypeInformation

Description
-----------
This example will create a report that contains pending reboot
information.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Component-Based Servicing: http://technet.microsoft.com/en-us/library/cc756291(v=WS.10).aspx</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText>PendingFileRename/Auto Update: http://support.microsoft.com/kb/2723674</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>http://technet.microsoft.com/en-us/library/cc960241.aspx</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>http://blogs.msdn.com/b/hansr/archive/2006/02/17/patchreboot.aspx</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText>SCCM 2012/CCM_ClientSDK: http://msdn.microsoft.com/en-us/library/jj902723.aspx</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-PhoneticSpelling</command:name>
			<maml:description>
				<maml:para>Get the Phonetic Spelling for a given input String</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>PhoneticSpelling</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Get the Phonetic Spelling for a given input String</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-PhoneticSpelling</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1">
					<maml:name>Char</maml:name>
					<maml:description>
						<maml:para>Input that should be Phonetic Spelled</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Char[]</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1">
				<maml:name>Char</maml:name>
				<maml:description>
					<maml:para>Input that should be Phonetic Spelled</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">Char[]</command:parameterValue>
				<dev:type>
					<maml:name>Char[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.Char[]</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Management.Automation.PSCustomObject</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Simple function to convert a string to Phonetic Spelling</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>(Get-PhoneticSpelling -Char &#39;Test&#39;).Table</dev:code>
				<dev:remarks>
					<maml:para>Char Phonetic
---- --------
T Capital-Tango
e Lowercase-Echo
s Lowercase-Sierra
t Lowercase-Tango

Description
-----------
Show the Input and Phonetic Spelling (table) for &#39;Test&#39;</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>(Get-PhoneticSpelling -Char &#39;Test&#39;).PhoneticForm</dev:code>
				<dev:remarks>
					<maml:para>Capital-Tango  Lowercase-Echo  Lowercase-Sierra  Lowercase-Tango

Description
-----------
Convert &#39;Test&#39; to Phonetic Spelling</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-PreReqModules</command:name>
			<maml:description>
				<maml:para>Get all required Office 365 Modules and Software from Microsoft</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>PreReqModules</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Get all required Office 365 Modules and Software from Microsoft</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-PreReqModules</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>Where to Download</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Where to Download</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>c:\scripts\powershell\prereq</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Just a helper function based on an idea of En Pointe Technologies

It Downloads:
-&gt; .NET Framework 4.6.1 Off-line Installer
-&gt; Microsoft Online Services Sign-In Assistant for IT Professionals RTW
-&gt; Microsoft Azure Active Directory PowerShell Module
-&gt; SharePoint Online Management Shell
-&gt; Skype for Business Online Windows PowerShell Module

The .NET Framework 4.6.1 Off-line Installer URL
https://download.microsoft.com/download/E/4/1/E4173890-A24A-4936-9FC9-AF930FE3FA40/NDP461-KB3102436-x86-x64-AllOS-ENU.exe

Microsoft Online Services Sign-In Assistant for IT Professionals RTW URL
http://download.microsoft.com/download/5/0/1/5017D39B-8E29-48C8-91A8-8D0E4968E6D4/EN/msoidcli_64.msi

Microsoft Azure Active Directory PowerShell Module URL
https://bposast.vo.msecnd.net/MSOPMW/Current/AMD64/AdministrationConfig-EN.msi

SharePoint Online Management Shell URL
https://download.microsoft.com/download/0/2/E/02E7E5BA-2190-44A8-B407-BC73CA0D6B87/sharepointonlinemanagementshell_5326-1200_x64_en-us.msi

Skype for Business Online Windows PowerShell Module URL
https://download.microsoft.com/download/2/0/5/2050B39B-4DA5-48E0-B768-583533B42C3B/SkypeOnlinePowershell.exe</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-PreReqModules</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Get all required Office 365 Modules and Software from Microsoft.
Downloads them to: &quot;c:\scripts\powershell\prereq&quot;
(Will be created if it doe not exist)</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-PreReqModules -Path &#39;c:\scripts\download&#39;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Get all required Office 365 Modules and Software from Microsoft.
Downloads them to: &quot;c:\scripts\download&quot;
(Will be created if it doe not exist)</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://download.microsoft.com/download/E/4/1/E4173890-A24A-4936-9FC9-AF930FE3FA40/NDP461-KB3102436-x86-x64-AllOS-ENU.exe
http://download.microsoft.com/download/5/0/1/5017D39B-8E29-48C8-91A8-8D0E4968E6D4/EN/msoidcli_64.msi
https://bposast.vo.msecnd.net/MSOPMW/Current/AMD64/AdministrationConfig-EN.msi
https://download.microsoft.com/download/0/2/E/02E7E5BA-2190-44A8-B407-BC73CA0D6B87/sharepointonlinemanagementshell_5326-1200_x64_en-us.msi
https://download.microsoft.com/download/2/0/5/2050B39B-4DA5-48E0-B768-583533B42C3B/SkypeOnlinePowershell.exe</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-ProxyInfo</command:name>
			<maml:description>
				<maml:para>Detect the proxy for a given URL</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>ProxyInfo</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Detect the proxy for a given URL</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-ProxyInfo</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
					<maml:name>url</maml:name>
					<maml:description>
						<maml:para>URL to check, the default is http://www.google.com</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
				<maml:name>url</maml:name>
				<maml:description>
					<maml:para>URL to check, the default is http://www.google.com</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>http://www.google.com</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Internal Helper</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-ProxyInfo</dev:code>
				<dev:remarks>
					<maml:para>proxy.netx.local:8080

Description
-----------
Detect the proxy for a given url (http://www.google.com what is the default)</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-Quote</command:name>
			<maml:description>
				<maml:para>Get a random Quote from an Array</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>Quote</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Get a random Quote from an Array of Quotes I like.

I like to put Quotes in slides and presentations, here is a collection
of whose I used...</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-Quote</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Based on an idea of Jeff Hicks

I just implemented this because it was fun to do so ;-)</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-Quote</dev:code>
				<dev:remarks>
					<maml:para>*******************************************************************
*  The only real mistake is the one from which we learn nothing.  *
*                                                     Henry Ford  *
*******************************************************************

Description
-----------
Get a random Quote from an Array</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-RelativePath</command:name>
			<maml:description>
				<maml:para>Get a path to a file (or folder) relative to another folder</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>RelativePath</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Converts the FilePath to a relative path rooted in the specified Folder</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-RelativePath</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
					<maml:name>Folder</maml:name>
					<maml:description>
						<maml:para>The folder to build a relative path from</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="1" aliases="FullName">
					<maml:name>FilePath</maml:name>
					<maml:description>
						<maml:para>The File (or folder) to build a relative path TO</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Resolve</maml:name>
					<maml:description>
						<maml:para>If true, the file and folder paths must exist</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>Folder</maml:name>
				<maml:description>
					<maml:para>The folder to build a relative path from</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="1" aliases="FullName">
				<maml:name>FilePath</maml:name>
				<maml:description>
					<maml:para>The File (or folder) to build a relative path TO</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Resolve</maml:name>
				<maml:description>
					<maml:para>If true, the file and folder paths must exist</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-RelativePath ~\Documents\WindowsPowerShell\Logs\ ~\Documents\WindowsPowershell\Modules\Logger\log4net.xslt</dev:code>
				<dev:remarks>
					<maml:para>..\Modules\Logger\log4net.xslt

Description
-----------
Returns a path to log4net.xslt relative to the Logs folder</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-ReqParams</command:name>
			<maml:description>
				<maml:para>A quick way to view required parameters on a cmdlet</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>ReqParams</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>A quick way to view required parameters on a cmdlet, function,
provider, script or workflow</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-ReqParams</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="cmd">
					<maml:name>command</maml:name>
					<maml:description>
						<maml:para>Gets required parameters of the specified command or concept.
Enter the name of a cmdlet, function, provider, script, or workflow,
such as &quot;Get-Member&quot;, a conceptual topic name, such as &quot;about_Objects&quot;,
or an alias, such as &quot;ls&quot;.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="cmd">
				<maml:name>command</maml:name>
				<maml:description>
					<maml:para>Gets required parameters of the specified command or concept.
Enter the name of a cmdlet, function, provider, script, or workflow,
such as &quot;Get-Member&quot;, a conceptual topic name, such as &quot;about_Objects&quot;,
or an alias, such as &quot;ls&quot;.</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Just a filter for Get-Help</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-ReqParams -command &#39;New-ADUser&#39;</dev:code>
				<dev:remarks>
					<maml:para>-Name &lt;String&gt;
Specifies the name of the object. This parameter sets the Name property of the Active Directory object. The LDAP Display
Name (ldapDisplayName) of this property is name.

Required?                    true
Position?                    2
Default value
Accept pipeline input?       True (ByPropertyName)
Accept wildcard characters?  false</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-ServiceStatus</command:name>
			<maml:description>
				<maml:para>List Services Where-Object StartMode is AUTOMATIC that are NOT running</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>ServiceStatus</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>This function will list services from a local or remote computer
Where-Object the StartMode property is set to &quot;Automatic&quot; and
Where-Object the state is different from RUNNING
(so mostly Where-Object the state is NOT RUNNING)</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-ServiceStatus</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
					<maml:name>ComputerName</maml:name>
					<maml:description>
						<maml:para>Computer Name to execute the function</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>ComputerName</maml:name>
				<maml:description>
					<maml:para>Computer Name to execute the function</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>&quot;$env:COMPUTERNAME&quot;</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Just an initial Version of the Function,
it might still need some optimization.</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-ServiceStatus</dev:code>
				<dev:remarks>
					<maml:para>DisplayName                                  Name                           StartMode State
-----------                                  ----                           --------- -----
Microsoft .NET Framework NGEN v4.0.30319_X86 clr_optimization_v4.0.30319_32 Auto      Stopped
Microsoft .NET Framework NGEN v4.0.30319_X64 clr_optimization_v4.0.30319_64 Auto      Stopped
Multimedia Class Scheduler                   MMCSS                          Auto      Stopped

Description
-----------
List Services Where-Object StartMode is AUTOMATIC that are NOT running</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-ShortDate</command:name>
			<maml:description>
				<maml:para>Get the Date as short String</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>ShortDate</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Get the Date as short String</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-ShortDate</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
					<maml:name>FilenameCompatibleFormat</maml:name>
					<maml:description>
						<maml:para>Make sure it is compatible to File Dates</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>FilenameCompatibleFormat</maml:name>
				<maml:description>
					<maml:para>Make sure it is compatible to File Dates</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Helper Function based on an idea of Robert D. Biddle</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-ShortDate</dev:code>
				<dev:remarks>
					<maml:para>19.03.16

Description
-----------
Get the Date as short String</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-ShortDate -FilenameCompatibleFormat</dev:code>
				<dev:remarks>
					<maml:para>19-03-16

Description
-----------
Get the Date as short String and replace the &#39;.&#39; with &#39;-&#39;.
Useful is you want to append this to filenames.

The dots are bad for such use cases!</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Source https://github.com/RobBiddle/Get-ShortDateTime/blob/master/Get-ShortDateTime.psm1</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-Syntax</command:name>
			<maml:description>
				<maml:para>Get the syntax of a cmdlet, even if we have no help for it</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>Syntax</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Helper function to get the syntax of a alias or cmdlet,
even if we have no help for it</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-Syntax</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Command">
					<maml:name>cmdlet</maml:name>
					<maml:description>
						<maml:para>command-let that you want to check</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Command">
				<maml:name>cmdlet</maml:name>
				<maml:description>
					<maml:para>command-let that you want to check</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				<dev:type>
					<maml:name>Object</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This is just a little helper function to make the shell more flexible</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-Syntax Get-Syntax</dev:code>
				<dev:remarks>
					<maml:para>Get-Syntax [-cmdlet] &lt;Object&gt; [&lt;CommonParameters&gt;]

Description
-----------
Get the syntax and parameters for the cmdlet &quot;Get-Syntax&quot;.
Makes no sense at all, but this is just an example!</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-Syntax Get-Help</dev:code>
				<dev:remarks>
					<maml:para>Get-Help [[-Name] &lt;string&gt;] [-Path &lt;string&gt;] [-Category &lt;string[]&gt;] [-Component &lt;string[]&gt;] [-Functionality &lt;string[]&gt;] [-Role &lt;string[]&gt;] [-Full] [&lt;CommonParameters&gt;]

Get-Help [[-Name] &lt;string&gt;] -Detailed [-Path &lt;string&gt;] [-Category &lt;string[]&gt;] [-Component &lt;string[]&gt;] [-Functionality &lt;string[]&gt;] [-Role &lt;string[]&gt;] [&lt;CommonParameters&gt;]

Get-Help [[-Name] &lt;string&gt;] -Examples [-Path &lt;string&gt;] [-Category &lt;string[]&gt;] [-Component &lt;string[]&gt;] [-Functionality &lt;string[]&gt;] [-Role &lt;string[]&gt;] [&lt;CommonParameters&gt;]

Get-Help [[-Name] &lt;string&gt;] -Parameter &lt;string&gt; [-Path &lt;string&gt;] [-Category &lt;string[]&gt;] [-Component &lt;string[]&gt;] [-Functionality &lt;string[]&gt;] [-Role &lt;string[]&gt;] [&lt;CommonParameters&gt;]

Get-Help [[-Name] &lt;string&gt;] -Online [-Path &lt;string&gt;] [-Category &lt;string[]&gt;] [-Component &lt;string[]&gt;] [-Functionality &lt;string[]&gt;] [-Role &lt;string[]&gt;] [&lt;CommonParameters&gt;]

Get-Help [[-Name] &lt;string&gt;] -ShowWindow [-Path &lt;string&gt;] [-Category &lt;string[]&gt;] [-Component &lt;string[]&gt;] [-Functionality &lt;string[]&gt;] [-Role &lt;string[]&gt;] [&lt;CommonParameters&gt;]

Description
-----------
Get the syntax and parameters for the cmdlet &quot;Get-Help&quot;.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-SysType</command:name>
			<maml:description>
				<maml:para>Show if the system is Workstation or a Server</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>SysType</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>This function shows of the system is a server or a workstation.
Additionally it can show more detailed infos (like Domain Membership)</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-SysType</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="detail">
					<maml:name>d</maml:name>
					<maml:description>
						<maml:para>Shows a more detailed information, including the domain level</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="detail">
				<maml:name>d</maml:name>
				<maml:description>
					<maml:para>Shows a more detailed information, including the domain level</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Wrote this for myself to see what system I was connected to via
Remote PowerShell</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-SysType</dev:code>
				<dev:remarks>
					<maml:para>Workstation

Description
-----------
The system is a Workstation (with or without Domain membership)</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-SysType -d</dev:code>
				<dev:remarks>
					<maml:para>Standalone Server

Description
-----------
The system is a non domain joined server.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-TempFile</command:name>
			<maml:description>
				<maml:para>Creates a string with a temp file</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>TempFile</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Creates a string with a temp file</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-TempFile</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
					<maml:name>Extension</maml:name>
					<maml:description>
						<maml:para>File Extension as a string.
The default is &quot;tmp&quot;</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>Extension</maml:name>
				<maml:description>
					<maml:para>File Extension as a string.
The default is &quot;tmp&quot;</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>tmp</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Helper to avoid &quot;System.IO.Path]::GetTempFileName()&quot; usage.</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-TempFile</dev:code>
				<dev:remarks>
					<maml:para>C:\Users\josh\AppData\Local\Temp\332ddb9a-5e52-4687-aa01-1d67ab6ae2b1.tmp

Description
-----------
Returns a String of the Temp File with the extension TMP.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-TempFile -Extension txt</dev:code>
				<dev:remarks>
					<maml:para>C:\Users\josh\AppData\Local\Temp\332ddb9a-5e52-4687-aa01-1d67ab6ae2b1.txt

Description
-----------
Returns a String of the Temp File with the extension TXT</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>$foo = (Get-TempFile)</dev:code>
				<dev:remarks>
					<maml:para>PS C:\&gt; New-Item -Path $foo -Force -Confirm:$False
PS C:\&gt; Add-Content -Path $foo -Value &#39;Test&#39; -Encoding &#39;UTF8&#39; -Force

Description
-----------
Creates a temp File: C:\Users\josh\AppData\Local\Temp\d08cec6f-8697-44db-9fba-2c369963a017.tmp

And fill the newly created file with the String &quot;Test&quot;</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Idea: http://powershell.com/cs/blogs/tips/archive/2015/10/15/creating-temporary-filenames.aspx</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-TimeStamp</command:name>
			<maml:description>
				<maml:para>Get-TimeStamp dumps a default Time-Stamp</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>TimeStamp</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Get-TimeStamp dumps a default Time-Stamp in the following format:
yyyy-MM-dd HH:mm:ss</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-TimeStamp</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This is just a little helper function to make the shell more flexible
It is just a kind of a leftover: Used that within my old logging
functions a lot</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-TimeStamp</dev:code>
				<dev:remarks>
					<maml:para>2015-12-13 18:05:18

Description
-----------
Get a Time-Stamp as i would like it.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-Timezone</command:name>
			<maml:description>
				<maml:para>A function that retrieves valid computer timezones.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>Timezone</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>This function is a wrapper around tzutil.exe, aiming to make getting timezones slightly easier.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-Timezone</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1">
					<maml:name>Timezone</maml:name>
					<maml:description>
						<maml:para>Specify the timezone that you wish to retrieve data for.
Not specifying this parameter will return the current timezone.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Get-Timezone</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
					<maml:name>UTCOffset</maml:name>
					<maml:description>
						<maml:para>Specify the offset from UTC to return timezones for,
using the format NN:NN (implicitly positive), -NN:NN or +NN:NN.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Get-Timezone</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
					<maml:name>All</maml:name>
					<maml:description>
						<maml:para>Return all timezones supported by tzutil available on the system.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="1">
				<maml:name>Timezone</maml:name>
				<maml:description>
					<maml:para>Specify the timezone that you wish to retrieve data for.
Not specifying this parameter will return the current timezone.</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>(&amp; &quot;$env:windir\system32\tzutil.exe&quot; /g)</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>UTCOffset</maml:name>
				<maml:description>
					<maml:para>Specify the offset from UTC to return timezones for,
using the format NN:NN (implicitly positive), -NN:NN or +NN:NN.</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
				<maml:name>All</maml:name>
				<maml:description>
					<maml:para>Return all timezones supported by tzutil available on the system.</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Author: David Green (http://tookitaway.co.uk/)</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-Timezone</dev:code>
				<dev:remarks>
					<maml:para>ExampleLocation                         UTCOffset                               Timezone
---------------                         ---------                               --------
(UTC+01:00) Amsterdam, Berlin, Bern,... +01:00                                  W. Europe Standard Time

Description
-----------
Gets the current computer timezone</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-Timezone -Timezone &#39;UTC&#39;</dev:code>
				<dev:remarks>
					<maml:para>ExampleLocation                         UTCOffset                               Timezone
---------------                         ---------                               --------
(UTC) Coordinated Universal Time        +00:00                                  UTC

Description
-----------
Get the timezone for Singapore standard time (UTC+08:00).</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-Timezone -All</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Returns all valid computer timezones.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-TopProcesses</command:name>
			<maml:description>
				<maml:para>Make the PowerShell a bit more *NIX like</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>TopProcesses</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>This is a PowerShell Version of the well known *NIX like TOP</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-TopProcesses</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Make PowerShell a bit more like *NIX!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>top</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Shows the top CPU consuming processes</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-Uptime</command:name>
			<maml:description>
				<maml:para>Show how long system has been running</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>Uptime</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Uni* like Uptime - The uptime utility displays the current time,
the length of time the system has been up</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-Uptime</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Make PowerShell a bit more like *NIX!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-Uptime</dev:code>
				<dev:remarks>
					<maml:para>Uptime: 0 days, 2 hours, 11 minutes

Description
-----------
Returns the uptime of the system, the time since last reboot/startup</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-ValidateIsIP</command:name>
			<maml:description>
				<maml:para>Validates if input is an IP Address</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>ValidateIsIP</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Validates if input is an IP Address</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-ValidateIsIP</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1">
					<maml:name>IP</maml:name>
					<maml:description>
						<maml:para>A string containing an IP address</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1">
				<maml:name>IP</maml:name>
				<maml:description>
					<maml:para>A string containing an IP address</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Boolean</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Very easy helper function</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-ValidateIsIP 10.211.55.125</dev:code>
				<dev:remarks>
					<maml:para>True

Description
-----------
Validates if input is an IP Address</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-ValidateIsIP -IP &#39;10.211.55.125&#39;</dev:code>
				<dev:remarks>
					<maml:para>True

Description
-----------
Validates if input is an IP Address</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-ValidateIsIP -IP &#39;fe80::3db7:8507:3f9a:bb13%11&#39;</dev:code>
				<dev:remarks>
					<maml:para>True

Description
-----------
Validates if input is an IP Address</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-Whois</command:name>
			<maml:description>
				<maml:para>Script to retrieve WhoIs information from a list of domains</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>Whois</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>This script will, by default, create a report of WhoIs information on
1 or more Internet domains. Not all Top-Level Domains support Whois
queries! e.g. .de (Germany) domains!

Report options are CSV, Json, XML, HTML, and object (default) output.
Dates in the CSV, Json, and HTML options are formatted for the culture
settings on the PC.
Columns in HTML report are also sortable, just click on the headers.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-Whois</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
					<maml:name>Domain</maml:name>
					<maml:description>
						<maml:para>One or more domain names to check. Accepts pipeline.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>Path Where-Object the resulting HTML or CSV report will be saved.

Default is: C:\scripts\PowerShell\export</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>RedThresold</maml:name>
					<maml:description>
						<maml:para>If the number of days left before the domain expires falls below this
number the entire row will be highlighted in Red (HTML reports only).

Default is 30 (Days)</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>YellowThresold</maml:name>
					<maml:description>
						<maml:para>If the number of days left before the domain expires falls below this
number the entire row will be highlighted in Yellow (HTML reports only)

Default is 90 (Days)</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>GreyThresold</maml:name>
					<maml:description>
						<maml:para>If the number of days left before the domain expires falls below this
number the entire row will be highlighted in Grey (HTML reports only).

Default is 365 (Days)</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1">
					<maml:name>OutputType</maml:name>
					<maml:description>
						<maml:para>Specify what kind of report you want.  Valid types are Json, XML,HTML,
CSV, or Object.

The default is Object.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
				<maml:name>Domain</maml:name>
				<maml:description>
					<maml:para>One or more domain names to check. Accepts pipeline.</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Path Where-Object the resulting HTML or CSV report will be saved.

Default is: C:\scripts\PowerShell\export</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>C:\scripts\PowerShell\export</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>RedThresold</maml:name>
				<maml:description>
					<maml:para>If the number of days left before the domain expires falls below this
number the entire row will be highlighted in Red (HTML reports only).

Default is 30 (Days)</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>30</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>YellowThresold</maml:name>
				<maml:description>
					<maml:para>If the number of days left before the domain expires falls below this
number the entire row will be highlighted in Yellow (HTML reports only)

Default is 90 (Days)</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>90</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>GreyThresold</maml:name>
				<maml:description>
					<maml:para>If the number of days left before the domain expires falls below this
number the entire row will be highlighted in Grey (HTML reports only).

Default is 365 (Days)</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>365</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1">
				<maml:name>OutputType</maml:name>
				<maml:description>
					<maml:para>Specify what kind of report you want.  Valid types are Json, XML,HTML,
CSV, or Object.

The default is Object.</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>object</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Based on an idea of Martin Pugh (Martin Pugh)</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-Whois -Domain &quot;alright-it.com&quot;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Will create object Whois output of the domain registration data.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-Whois -Domain &quot;alright-it.com&quot; -OutputType json</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Will create Json Whois Report of the domain registration data.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Source: http://community.spiceworks.com/scripts/show/2809-whois-report-Get-whois-ps1</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Invoke-GnuGrep</command:name>
			<maml:description>
				<maml:para>File pattern searcher</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Invoke</command:verb>
			<command:noun>GnuGrep</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>This command emulates the well known (and loved?) GNU file
pattern searcher</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Invoke-GnuGrep</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="PaternString">
					<maml:name>pattern</maml:name>
					<maml:description>
						<maml:para>Pattern (STRING) - Mandatory</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="FFilter">
					<maml:name>filefilter</maml:name>
					<maml:description>
						<maml:para>File (STRING) - Mandatory</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="Recursive">
					<maml:name>r</maml:name>
					<maml:description>
						<maml:para>Recurse</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="IgnoreCase">
					<maml:name>i</maml:name>
					<maml:description>
						<maml:para>Ignore case</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="ListFilenames">
					<maml:name>l</maml:name>
					<maml:description>
						<maml:para>List filenames</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="PaternString">
				<maml:name>pattern</maml:name>
				<maml:description>
					<maml:para>Pattern (STRING) - Mandatory</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="FFilter">
				<maml:name>filefilter</maml:name>
				<maml:description>
					<maml:para>File (STRING) - Mandatory</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="Recursive">
				<maml:name>r</maml:name>
				<maml:description>
					<maml:para>Recurse</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="IgnoreCase">
				<maml:name>i</maml:name>
				<maml:description>
					<maml:para>Ignore case</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="ListFilenames">
				<maml:name>l</maml:name>
				<maml:description>
					<maml:para>List filenames</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Make PowerShell a bit more like *NIX!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Invoke-GnuGrep</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
File pattern searcher</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Invoke-GnuGrep</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
File pattern searcher</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Grant-PathFullPermission</command:name>
			<maml:description>
				<maml:para>Grant Full Access Permission for a given user to a given Path</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Grant</command:verb>
			<command:noun>PathFullPermission</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Grant Full Access Permission for a given user to a given Path</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Grant-PathFullPermission</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>Path you want to grant the access to</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1">
					<maml:name>user</maml:name>
					<maml:description>
						<maml:para>User you want to grant the access to</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Path you want to grant the access to</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1">
				<maml:name>user</maml:name>
				<maml:description>
					<maml:para>User you want to grant the access to</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Grant-PathFullPermission -path &#39;D:\dev&#39; -user &#39;John&#39;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Grant Full Access Permission for a given user &#39;John&#39; to a given
Path &#39;D:\dev&#39;</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Invoke-PowerHead</command:name>
			<maml:description>
				<maml:para>Display first lines of a file</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Invoke</command:verb>
			<command:noun>PowerHead</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>This filter displays the first count lines or bytes of each of the
specified files, or of the standard input if no files are specified.

If count is omitted it defaults to 10.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Invoke-PowerHead</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="FileName">
					<maml:name>File</maml:name>
					<maml:description>
						<maml:para>Filename</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="Counter">
					<maml:name>count</maml:name>
					<maml:description>
						<maml:para>A description of the count parameter, default is 10.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="FileName">
				<maml:name>File</maml:name>
				<maml:description>
					<maml:para>Filename</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="Counter">
				<maml:name>count</maml:name>
				<maml:description>
					<maml:para>A description of the count parameter, default is 10.</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>10</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Make PowerShell a bit more like *NIX!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>head &#39;C:\scripts\info.txt&#39;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Display first 10 lines of a file &#39;C:\scripts\info.txt&#39;</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Invoke-PowerHead -File &#39;C:\scripts\info.txt&#39;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Display first 10 lines of a file &#39;C:\scripts\info.txt&#39;</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Invoke-PowerHead -File &#39;C:\scripts\info.txt&#39; -count &#39;2&#39;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Display first 2 lines of a file &#39;C:\scripts\info.txt&#39;</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Invoke-PowerHelp</command:name>
			<maml:description>
				<maml:para>Wrapper of Get-Help</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Invoke</command:verb>
			<command:noun>PowerHelp</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>This wrapper uses Get-Help -full for a given cmdlet and shows
everything paged. This is very much like the typical *nix like man</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Invoke-PowerHelp</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This is just a little helper function to make the shell more flexible</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>man Get-item</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Shows the complete help text of the cmdlet &quot;Get-item&quot;, page by page</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Set-IgnoreSslTrust</command:name>
			<maml:description>
				<maml:para>This workaround completely disables SSL certificate checks</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Set</command:verb>
			<command:noun>IgnoreSslTrust</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>This workaround disables the SSL certificate trust checking.
This seems to be useful if you need to use self signed SSL certificates

But there is a string attached:
This is very dangerous.

And this is not a joke, it is dangerous, because you leave the door
wide open (and honestly it means completely open) for bad certificates,
hijacked certificates and even Man-In-The-middle attacks!

So really think twice before you use this in a production environment!</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Set-IgnoreSslTrust</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Be careful:
If you really need to disable the SSL Trust setting,
just use it for the calls you really need to!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Set-IgnoreSslTrust</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
This workaround completely disables SSL certificate checks.
Do this only if you know what you are doing here!!!</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Source: https://msdn.microsoft.com/en-us/library/system.net.servicepointmanager.servercertificatevalidationcallback.aspx
Source: https://msdn.microsoft.com/en-us/library/system.net.security.remotecertificatevalidationcallback.aspx</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Set-NotIgnoreSslTrust</command:name>
			<maml:description>
				<maml:para>Enables the SSL certificate checks</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Set</command:verb>
			<command:noun>NotIgnoreSslTrust</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>This is a companion function for the usage of the
&quot;Set-IgnoreSslTrust&quot; function
It might be a great idea to disable the SSL Trust check for a single
call (If you real need to do it) via the &quot;Set-IgnoreSslTrust&quot;
function and then enable it directly after the call
via &quot;Set-NotIgnoreSslTrust&quot;</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Set-NotIgnoreSslTrust</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Do yourself a favor and use this function right after a call
without SSL Trust check!!!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Set-NotIgnoreSslTrust</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Enables the SSL certificate checks</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Source: https://msdn.microsoft.com/en-us/library/system.net.servicepointmanager.servercertificatevalidationcallback.aspx
Source: https://msdn.microsoft.com/en-us/library/system.net.security.remotecertificatevalidationcallback.aspx</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Initialize-ModuleUpdate</command:name>
			<maml:description>
				<maml:para>Refresh the PowerShell Module Information</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Initialize</command:verb>
			<command:noun>ModuleUpdate</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Refresh the PowerShell Module Information
Wrapper for the following command: Get-Module -ListAvailable -Refresh</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Initialize-ModuleUpdate</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
					<maml:name>Verbosity</maml:name>
					<maml:description>
						<maml:para>Verbose output, default is not</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>Verbosity</maml:name>
				<maml:description>
					<maml:para>Verbose output, default is not</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>PowerShell will auto-load modules. However, with some modules, this
technique may fail.

Their cmdlets will still only be available after you manually import
the module using Import-Module.

The reason most likely is the way these modules were built.

PowerShell has no way of detecting which cmdlets are exported by
these modules.</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Initialize-ModuleUpdate -Verbose</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Refresh the PowerShell Module Information</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Initialize-ModuleUpdate -Verbose</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Refresh the PowerShell Module Information</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Invoke-AnimatedSleep</command:name>
			<maml:description>
				<maml:para>Animated sleep</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Invoke</command:verb>
			<command:noun>AnimatedSleep</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Takes the title and displays a looping animation for a given number of
seconds.
The animation will delete itself once it&#39;s finished,
to save on console scrolling.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Invoke-AnimatedSleep</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1">
					<maml:name>seconds</maml:name>
					<maml:description>
						<maml:para>A number of seconds to sleep for</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="2">
					<maml:name>title</maml:name>
					<maml:description>
						<maml:para>Some words to put next to the thing</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1">
				<maml:name>seconds</maml:name>
				<maml:description>
					<maml:para>A number of seconds to sleep for</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>1</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="2">
				<maml:name>title</maml:name>
				<maml:description>
					<maml:para>Some words to put next to the thing</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>Sleeping</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Based on an idea of Doug Kerwin</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Invoke-AnimatedSleep</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Will display a small animation for 1 second</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Invoke-AnimatedSleep 5</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Will display a small animation for 5 seconds</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Invoke-AnimatedSleep 10 &quot;Waiting for domain sync&quot;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Will display &quot;Waiting for domain sync &quot; and a small animation for
10 seconds</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Source https://github.com/dwkerwin/powershell_profile/blob/master/autoload-scripts/vendor/sleepanim.ps1</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Invoke-baloonTip</command:name>
			<maml:description>
				<maml:para>Shows a Windows Balloon notification</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Invoke</command:verb>
			<command:noun>baloonTip</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Shows a Windows Balloon notification</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Invoke-baloonTip</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
					<maml:name>title</maml:name>
					<maml:description>
						<maml:para>Title of the Balloon Tip</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1">
					<maml:name>Message</maml:name>
					<maml:description>
						<maml:para>Message of the Balloon Tip</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="2">
					<maml:name>Icon</maml:name>
					<maml:description>
						<maml:para>Type for the Balloon</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
				<maml:name>title</maml:name>
				<maml:description>
					<maml:para>Title of the Balloon Tip</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>Information</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1">
				<maml:name>Message</maml:name>
				<maml:description>
					<maml:para>Message of the Balloon Tip</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>Message...</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="2">
				<maml:name>Icon</maml:name>
				<maml:description>
					<maml:para>Type for the Balloon</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>Information</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Tested with Windows 7, Windows 8/8.1 and Windows Server 2012/2012R2</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Invoke-baloonTip</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Show a windows Balloon with the Title &quot;Title&quot; and the Text &quot;Message...&quot;
as &quot;Information&quot;.

This is the default values for everything.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Invoke-baloonTip -Title &#39;Diskspace!!!&#39; -Message &#39;Diskspace on c: is low&#39; -Icon &#39;Exclamation&#39;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
This shows an Balloon with the Title &quot;Diskspace!!!&quot;,
the message is &quot;Diskspace on c: is low&quot; as &quot;Exclamation&quot;</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Invoke-baloonTip -Title &#39;Reconnect?&#39; -Message &#39;Should is reconnect to Office 365???&#39; -Icon &#39;Question&#39;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
This shows an Balloon with the Title &quot;Reconnect?&quot;,
the message is &quot;Should is reconnect to Office 365???&quot; as &quot;Question&quot;</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Invoke-CreateMissingRegistryDrives</command:name>
			<maml:description>
				<maml:para>Create Missing Registry Drives</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Invoke</command:verb>
			<command:noun>CreateMissingRegistryDrives</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Create Missing Registry Drives</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Invoke-CreateMissingRegistryDrives</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Based on an idea of ALIENQuake</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Invoke-CreateMissingRegistryDrives</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Create Missing Registry Drives</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>ALIENQuake https://github.com/ALIENQuake/WindowsPowerShell</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Invoke-GC</command:name>
			<maml:description>
				<maml:para>Do a garbage collection</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Invoke</command:verb>
			<command:noun>GC</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Do a garbage collection within the PowerShell Session</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Invoke-GC</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Just a little helper function to do garbage collection
PowerShell sometimes do not cleanup and this uses more memory then
it should...</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Invoke-GC</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Do a garbage collection</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Invoke-VisualEditor</command:name>
			<maml:description>
				<maml:para>Wrapper to edit files</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Invoke</command:verb>
			<command:noun>VisualEditor</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>This is a quick wrapper that edits files with editor from the
VisualEditor variable</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Invoke-VisualEditor</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="File">
					<maml:name>args</maml:name>
					<maml:description>
						<maml:para>Arguments</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="File">
				<maml:name>args</maml:name>
				<maml:description>
					<maml:para>Arguments</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This is just a little helper function to make the shell more flexible</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Invoke-VisualEditor example.txt</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Invokes Note++ or ISE and edits &quot;example.txt&quot;.
This is possible, even if the File does not exists...
The editor should ask you if it should create it for you</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Invoke-VisualEditor</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Invokes Note++ or ISE without opening a file</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Set-VisualEditor</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Convert-IPToBinary</command:name>
			<maml:description>
				<maml:para>Converts an IP address string to it&#39;s binary string equivalent</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Convert</command:verb>
			<command:noun>IPToBinary</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Takes a IP as a string and returns the same IP address as a binary
string with no decimal points</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Convert-IPToBinary</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="IPAddress">
					<maml:name>IP</maml:name>
					<maml:description>
						<maml:para>The IP address which will be converted to a binary string</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="IPAddress">
				<maml:name>IP</maml:name>
				<maml:description>
					<maml:para>The IP address which will be converted to a binary string</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Management.Automation.PSCustomObject</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Works with IPv4 addresses only!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Convert-IPToBinary -IP &#39;10.211.55.1&#39;</dev:code>
				<dev:remarks>
					<maml:para>Binary                           IPAddress
------                           ---------
00001010110100110011011100000001 10.211.55.1

Description
-----------
Converts 10.211.55.1 to the binary equivalent (00001010110100110011011100000001)</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Convert-IPtoDecimal</command:name>
			<maml:description>
				<maml:para>Converts an IP address to decimal.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Convert</command:verb>
			<command:noun>IPtoDecimal</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Converts an IP address to decimal value.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Convert-IPtoDecimal</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="IP">
					<maml:name>IPAddress</maml:name>
					<maml:description>
						<maml:para>An IP Address you want to check</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="IP">
				<maml:name>IPAddress</maml:name>
				<maml:description>
					<maml:para>An IP Address you want to check</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Management.Automation.PSCustomObject</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Sometimes I need to have that info, so I decided it would be great
to have a functions who do the job!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Convert-IPtoDecimal -IPAddress &#39;127.0.0.1&#39;</dev:code>
				<dev:remarks>
					<maml:para>decimal        IPAddress
-------        ---------
2130706433    127.0.0.1

Description
-----------
Converts an IP address to decimal.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Convert-IPtoDecimal &#39;10.0.0.1&#39;</dev:code>
				<dev:remarks>
					<maml:para>decimal        IPAddress
-------        ---------
167772161    10.0.0.1

Description
-----------
Converts an IP address to decimal.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>&#39;192.168.0.1&#39; |  Convert-IPtoDecimal</dev:code>
				<dev:remarks>
					<maml:para>decimal        IPAddress
-------        ---------
3232235521    192.168.0.1

Description
-----------
Converts an IP address to decimal.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Invoke-CheckIPaddress</command:name>
			<maml:description>
				<maml:para>Check if a given IP Address seems to be valid</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Invoke</command:verb>
			<command:noun>CheckIPaddress</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Check if a given IP Address seems to be valid.
We use the .NET function to do so. This is not 100% reliable,
but is enough most times.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Invoke-CheckIPaddress</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="IP">
					<maml:name>IPAddress</maml:name>
					<maml:description>
						<maml:para>An IP Address you want to check</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0" aliases="IP">
				<maml:name>IPAddress</maml:name>
				<maml:description>
					<maml:para>An IP Address you want to check</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Boolean</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This is just a little helper function to make the shell more flexible</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Invoke-CheckIPaddress -IPAddress &#39;10.10.16.10&#39;</dev:code>
				<dev:remarks>
					<maml:para>True

Description
-----------
Check if a given IP Address seems to be valid</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Invoke-CheckIPaddress -IPAddress &#39;010.010.016.010&#39;</dev:code>
				<dev:remarks>
					<maml:para>True

Description
-----------
Check if a given IP Address seems to be valid</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Check-IPaddress -IPAddress &#39;10.10.16.01O&#39;</dev:code>
				<dev:remarks>
					<maml:para>False

Description
-----------
Check if a given IP Address seems to be valid</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-NtpTime</command:name>
			<maml:description>
				<maml:para>Get the NTP Time from a given Server</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>NtpTime</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Get the NTP Time from a given Server.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-NtpTime</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="NETServer">
					<maml:name>Server</maml:name>
					<maml:description>
						<maml:para>NTP Server to use. The default is de.pool.ntp.org</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="NETServer">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>NTP Server to use. The default is de.pool.ntp.org</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>de.pool.ntp.org</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.DateTime</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This sends an NTP time packet to the specified NTP server and reads
back the response.
The NTP time packet from the server is decoded and returned.

Note: this uses NTP (rfc-1305: http://www.faqs.org/rfcs/rfc1305.html)
on UDP 123.
Because the function makes a single call to a single server this is
strictly a SNTP client (rfc-2030).
Although the SNTP protocol data is similar (and can be identical) and
the clients and servers are often unable to distinguish the difference.
Where-Object SNTP differs is that is does not accumulate historical
data (to enable statistical averaging) and does not retain a session
between client and server.

An alternative to NTP or SNTP is to use Daytime (rfc-867) on TCP
port 13 although this is an old protocol and is not supported
by all NTP servers.</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\scripts\PowerShell&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-NtpTime -Server &#39;de.pool.ntp.org&#39;</dev:code>
				<dev:remarks>
					<maml:para>5. April 2016 00:58:59

Description
-----------
Get the NTP Time from a given Server</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Source: https://chrisjwarwick.wordpress.com/2012/08/26/getting-ntpsntp-network-time-with-powershell/</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Invoke-AppendClassPath</command:name>
			<maml:description>
				<maml:para>Append a given path to the Class Path</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Invoke</command:verb>
			<command:noun>AppendClassPath</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Appends a given path to the Java Class Path.
Useful if you still need that old Java crap!

By the way: I hate Java!</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Invoke-AppendClassPath</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This is just a little helper function to make the shell more flexible</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Invoke-AppendClassPath &quot;.&quot;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Include the directory Where-Object you are to the Java Class Path</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Invoke-JavaLove</command:name>
			<maml:description>
				<maml:para>Set the JAVAHOME Variable to use JDK and/or JRE instances withing the
Session</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Invoke</command:verb>
			<command:noun>JavaLove</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>You are still using Java Stuff?
OK... Your choice, so we do you the favor and create/fill the
variable JAVAHOME based on the JDK/JRE that we found.
It also append the Info to the PATH variable to make things easier
for you.
But think about dropping the buggy Java crap as soon as you can.
Java is not only buggy, there are also many Security issues with it!</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Invoke-JavaLove</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This is just a little helper function to make the shell more flexible</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>JavaLove</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Find the installed JDK and/or JRE version and crate the JDK_HOME
and JAVA_HOME variables for you.
It also appends the Path to the PATH  and CLASSPATH variable to make
it easier for you.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-MaskedJson</command:name>
			<maml:description>
				<maml:para>Masks all special characters within a JSON File</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>MaskedJson</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Masks all special characters within a JSON File.
mostly used with C# or some other windows tools.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-MaskedJson</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
					<maml:name>json</maml:name>
					<maml:description>
						<maml:para>Regular Formated JSON String or File</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
				<maml:name>json</maml:name>
				<maml:description>
					<maml:para>Regular Formated JSON String or File</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-MaskedJson &#39;{&quot;name&quot;:&quot;John&quot;, &quot;Age&quot;:&quot;21&quot;}&#39;</dev:code>
				<dev:remarks>
					<maml:para>{\&quot;name\&quot;:\&quot;John\&quot;, \&quot;Age\&quot;:\&quot;21\&quot;}

Description
-----------
Masks all special characters within a JSON File</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-RegularJson</command:name>
			<maml:description>
				<maml:para>Converts a C# dumped JSON to regular JSON</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>RegularJson</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Converts a C# dumped JSON to regular JSON</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-RegularJson</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
					<maml:name>csjson</maml:name>
					<maml:description>
						<maml:para>C# formated JSON (The one with mased characters)</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
				<maml:name>csjson</maml:name>
				<maml:description>
					<maml:para>C# formated JSON (The one with mased characters)</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-RegularJson &#39;{\&quot;name\&quot;:\&quot;John\&quot;, \&quot;Age\&quot;:\&quot;21\&quot;}&#39;</dev:code>
				<dev:remarks>
					<maml:para>{&quot;name&quot;:&quot;John&quot;, &quot;Age&quot;:&quot;21&quot;}

Description
-----------
Converts a C# dumped JSON to regular JSON</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Invoke-PowerLL</command:name>
			<maml:description>
				<maml:para>Quick helper to make my PowerShell a bit more like *nix</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Invoke</command:verb>
			<command:noun>PowerLL</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Everyone ever used a modern Unix and/or Linux system knows and love
the colored output of LL

This function is hack to emulate that on PowerShell.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Invoke-PowerLL</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Directory">
					<maml:name>dir</maml:name>
					<maml:description>
						<maml:para>Show the content of this Directory</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Object</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="ShowAll">
					<maml:name>All</maml:name>
					<maml:description>
						<maml:para>Show all files, included the hidden ones!</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Object</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Directory">
				<maml:name>dir</maml:name>
				<maml:description>
					<maml:para>Show the content of this Directory</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">Object</command:parameterValue>
				<dev:type>
					<maml:name>Object</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>.</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="ShowAll">
				<maml:name>All</maml:name>
				<maml:description>
					<maml:para>Show all files, included the hidden ones!</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">Object</command:parameterValue>
				<dev:type>
					<maml:name>Object</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Make PowerShell a bit more like *NIX!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Invoke-PowerLL</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Quick helper to make my PowerShell a bit more like *nix</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Invoke-ReloadPesterModule</command:name>
			<maml:description>
				<maml:para>Load Pester Module</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Invoke</command:verb>
			<command:noun>ReloadPesterModule</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Load the Pester PowerShell Module to the Global context.
Pester is a Mockup, Unit Test and Function Test Module for PowerShell</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Invoke-ReloadPesterModule</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Pester Module must be installed</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Invoke-ReloadPesterModule</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Unloads and load Pester PowerShell Module</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Pester: https://github.com/pester/Pester</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Invoke-MakeDirectory</command:name>
			<maml:description>
				<maml:para>Wrapper of New-Item</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Invoke</command:verb>
			<command:noun>MakeDirectory</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Wrapper of New-Item to create a directory</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Invoke-MakeDirectory</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="dir">
					<maml:name>Directory</maml:name>
					<maml:description>
						<maml:para>Directory name to create</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="dir">
				<maml:name>Directory</maml:name>
				<maml:description>
					<maml:para>Directory name to create</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This is just a little helper function to make the shell more flexible</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>mkdir test</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Creates a directory with the name &quot;test&quot;</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Update-SysInfo</command:name>
			<maml:description>
				<maml:para>Update Information about the system</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Update</command:verb>
			<command:noun>SysInfo</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>This function updates the informations about the systems it runs on</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Update-SysInfo</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Update-SysInfo</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Update Information about the system, no output!</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Based on an idea found here: https://github.com/michalmillar/ps-motd/blob/master/Get-MOTD.ps1</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Invoke-CleanSysInfo</command:name>
			<maml:description>
				<maml:para>Companion for Update-SysInfo</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Invoke</command:verb>
			<command:noun>CleanSysInfo</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Cleanup for variables from the Update-SysInfo function</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Invoke-CleanSysInfo</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Invoke-CleanSysInfo</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Cleanup for variables from the Update-SysInfo function</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-MOTD</command:name>
			<maml:description>
				<maml:para>Displays system information to a host.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>MOTD</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Get-MOTD cmdlet is a system information tool written in PowerShell.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-MOTD</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>inspired by this: https://github.com/michalmillar/ps-motd/blob/master/Get-MOTD.ps1

The Microsoft Logo, PowerShell, Windows and some others are registered
Trademarks by Microsoft Corporation.

I do not own them, i just use them here :-)

I moved some stuff in a separate function to make it reusable</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-MOTD</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Display the colorful Message of the Day with a Microsoft Logo and some
system infos</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-SysInfo</command:name>
			<maml:description>
				<maml:para>Displays Information about the system</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>SysInfo</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Displays Information about the system it is started on</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-SysInfo</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Based on an idea found here: https://github.com/michalmillar/ps-motd/blob/master/Get-MOTD.ps1</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-SysInfo</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Display some system infos</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-MyLS</command:name>
			<maml:description>
				<maml:para>Wrapper for Get-ChildItem</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>MyLS</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>This wrapper for Get-ChildItem shows all directories and files
(even hidden ones)</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-MyLS</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Location">
					<maml:name>loc</maml:name>
					<maml:description>
						<maml:para>A description of the loc parameter.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Location">
				<maml:name>loc</maml:name>
				<maml:description>
					<maml:para>A description of the loc parameter.</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>.</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This is just a little helper function to make the shell more flexible</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>myls</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Show the content of the directory Where-Object you are</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>myls c:\</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Show the content of &quot;c:\&quot;</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>New-BasicAuthHeader</command:name>
			<maml:description>
				<maml:para>Create a basic authentication header for Web requests</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>New</command:verb>
			<command:noun>BasicAuthHeader</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Create a basic authentication header for Web requests, often used
in Rest API Calls (Works perfect for Invoke-RestMethod calls)</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>New-BasicAuthHeader</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1">
					<maml:name>user</maml:name>
					<maml:description>
						<maml:para>User name to use</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="2">
					<maml:name>password</maml:name>
					<maml:description>
						<maml:para>Password to use</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1">
				<maml:name>user</maml:name>
				<maml:description>
					<maml:para>User name to use</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="2">
				<maml:name>password</maml:name>
				<maml:description>
					<maml:para>Password to use</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Very basic for now!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>New-BasicAuthHeader -user &#39;apiuser&#39; -password &#39;password&#39;</dev:code>
				<dev:remarks>
					<maml:para>YXBpdXNlcjpwYXNzd29yZA==

Description
-----------
Create a valid password and Auth header, perfect for REST Web Services</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Invoke-RestMethod -Uri &#39;https://service.contoso.com/api/auth&#39; -Method &#39;Get&#39; -Headers @{Authorization=(&quot;Basic {0}&quot; -f (New-BasicAuthHeader &#39;apiuser&#39; &#39;password&#39;))}</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Call the URI &#39;https://service.contoso.com/api/auth&#39; with an basic
authentication header for the given credentials.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Find-String</command:name>
			<maml:description>
				<maml:para>Searches text files by pattern and displays the results.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Find</command:verb>
			<command:noun>String</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Searches text files by pattern and displays the results.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Find-String</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
					<maml:name>pattern</maml:name>
					<maml:description>
						<maml:para>A description of the pattern parameter.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Regex</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
					<maml:name>include</maml:name>
					<maml:description>
						<maml:para>A description of the include parameter.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>recurse</maml:name>
					<maml:description>
						<maml:para>A description of the recurse parameter.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>caseSensitive</maml:name>
					<maml:description>
						<maml:para>A description of the caseSensitive parameter.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
					<maml:name>directoryExclude</maml:name>
					<maml:description>
						<maml:para>A description of the directoryExclude parameter.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
					<maml:name>context</maml:name>
					<maml:description>
						<maml:para>A description of the context parameter.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32[]</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>pattern</maml:name>
				<maml:description>
					<maml:para>A description of the pattern parameter.</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">Regex</command:parameterValue>
				<dev:type>
					<maml:name>Regex</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>include</maml:name>
				<maml:description>
					<maml:para>A description of the include parameter.</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>*</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>recurse</maml:name>
				<maml:description>
					<maml:para>A description of the recurse parameter.</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>True</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>caseSensitive</maml:name>
				<maml:description>
					<maml:para>A description of the caseSensitive parameter.</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>directoryExclude</maml:name>
				<maml:description>
					<maml:para>A description of the directoryExclude parameter.</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>x{999}</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
				<maml:name>context</maml:name>
				<maml:description>
					<maml:para>A description of the context parameter.</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32[]</command:parameterValue>
				<dev:type>
					<maml:name>Int32[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>0</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>TODO: Documentation</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Find-String</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Searches text files by pattern and displays the results.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Out-ColorMatchInfo</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>http://weblogs.asp.net/whaggard/archive/2007/03/23/powershell-script-to-find-strings-and-highlight-them-in-the-output.aspx
http://poshcode.org/426</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Enable-WinRM</command:name>
			<maml:description>
				<maml:para>Enables Remote PowerShell</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Enable</command:verb>
			<command:noun>WinRM</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Enables Remote PowerShell on the local host</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Enable-WinRM</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Enable-WinRM</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Enables Windows Remote (WinRM) on the local system</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-NewPsSession</command:name>
			<maml:description>
				<maml:para>Create a session and the given credentials are used</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>NewPsSession</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Create a session and the given credentials are used</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-NewPsSession</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="Computer">
					<maml:name>ComputerName</maml:name>
					<maml:description>
						<maml:para>Name of the System</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Object</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>PsCredentials</maml:name>
					<maml:description>
						<maml:para>Credentials to use</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Object</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="Computer">
				<maml:name>ComputerName</maml:name>
				<maml:description>
					<maml:para>Name of the System</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">Object</command:parameterValue>
				<dev:type>
					<maml:name>Object</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>($env:COMPUTERNAME)</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PsCredentials</maml:name>
				<maml:description>
					<maml:para>Credentials to use</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">Object</command:parameterValue>
				<dev:type>
					<maml:name>Object</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>($Credentials)</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-NewPsSession -ComputerName &#39;Raven&#39; -PsCredentials $myCreds</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Open a PowerShell Session to the System &#39;Raven&#39; and use the
credentials stored in the Variable &#39;$myCreds&#39;</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-NewPsSession -ComputerName &#39;Raven&#39; -PsCredentials (Get-Credential)</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Open a PowerShell Session to the System &#39;Raven&#39; and ask for the
credentials to use</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Set-CurrentSession</command:name>
			<maml:description>
				<maml:para>Make the Session globally available</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Set</command:verb>
			<command:noun>CurrentSession</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Make the Session globally available</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Set-CurrentSession</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
					<maml:name>session</maml:name>
					<maml:description>
						<maml:para>Session to use</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
				<maml:name>session</maml:name>
				<maml:description>
					<maml:para>Session to use</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				<dev:type>
					<maml:name>Object</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Set-CurrentSession -session $psSession</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Make the Session in the variable &#39;$psSession&#39; globally available
Might be useful if you open a session from within a script and want
to use it after the script is finished!</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Install-PsGet</command:name>
			<maml:description>
				<maml:para>Install PsGet package management</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Install</command:verb>
			<command:noun>PsGet</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Install PsGet package management</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Install-PsGet</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Just a wrapper for the known installer command</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Install-PsGet</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Install the PsGet package management</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>http://psget.net</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/psget/psget</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Enable-PSGallery</command:name>
			<maml:description>
				<maml:para>Enables the PSGallery Repository</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Enable</command:verb>
			<command:noun>PSGallery</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Enables the PSGallery Repository</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Enable-PSGallery</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>The PSGallery is a great source for PowerShell Modules.</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Enable-PSGallery</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Enable the PSGallery as installation source.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Update-AllPsGetModules</command:name>
			<maml:description>
				<maml:para>Search for all installed PsGet Modules and updates them if needed</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Update</command:verb>
			<command:noun>AllPsGetModules</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Search for all installed PsGet Modules and updates them if needed</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Update-AllPsGetModules</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
					<maml:name>Force</maml:name>
					<maml:description>
						<maml:para>No confirm for the update needed</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Force</maml:name>
				<maml:description>
					<maml:para>No confirm for the update needed</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Inspired by Homebrew (OS X) command: brew update &amp;&amp; brew upgrade</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Update-AllPsGetModules -force</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Update all installed PsGet Modules without confirming anything!</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Update-AllPsGetModules</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Update all installed PsGet Modules...</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Send-Pushover</command:name>
			<maml:description>
				<maml:para>Sends a push message via Pushover</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Send</command:verb>
			<command:noun>Pushover</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>We established a lot of automated messaging and push services,
Pushover was missing!

We do not use Pushover that much, but sometimes it is just nice to
have the function ready...</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Send-Pushover</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
					<maml:name>user</maml:name>
					<maml:description>
						<maml:para>The user/group key (not e-mail address) of your user (or you),
viewable when logged into our Pushover dashboard</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
					<maml:name>Message</maml:name>
					<maml:description>
						<maml:para>Your message, can be HTML like formated</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
					<maml:name>token</maml:name>
					<maml:description>
						<maml:para>Your Pushover application API token</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>device</maml:name>
					<maml:description>
						<maml:para>Your device name to send the message directly to that device,
rather than all of the devices (multiple devices may be separated by
a comma). You can use Get-PushoverUserDeviceInfo to get a list of
all registered devices.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>title</maml:name>
					<maml:description>
						<maml:para>Your message title, otherwise your app name is used</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>url</maml:name>
					<maml:description>
						<maml:para>A supplementary URL to show with your message</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>url_title</maml:name>
					<maml:description>
						<maml:para>A title for your supplementary URL, otherwise just the URL is shown</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>priority</maml:name>
					<maml:description>
						<maml:para>The Push priority (-2 to +2)</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Object</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>sound</maml:name>
					<maml:description>
						<maml:para>The name of one of the sounds supported by device clients to override
the user&#39;s default sound choice</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Object</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>user</maml:name>
				<maml:description>
					<maml:para>The user/group key (not e-mail address) of your user (or you),
viewable when logged into our Pushover dashboard</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Message</maml:name>
				<maml:description>
					<maml:para>Your message, can be HTML like formated</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>token</maml:name>
				<maml:description>
					<maml:para>Your Pushover application API token</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>device</maml:name>
				<maml:description>
					<maml:para>Your device name to send the message directly to that device,
rather than all of the devices (multiple devices may be separated by
a comma). You can use Get-PushoverUserDeviceInfo to get a list of
all registered devices.</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				<dev:type>
					<maml:name>Object</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>title</maml:name>
				<maml:description>
					<maml:para>Your message title, otherwise your app name is used</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				<dev:type>
					<maml:name>Object</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>url</maml:name>
				<maml:description>
					<maml:para>A supplementary URL to show with your message</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				<dev:type>
					<maml:name>Object</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>url_title</maml:name>
				<maml:description>
					<maml:para>A title for your supplementary URL, otherwise just the URL is shown</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				<dev:type>
					<maml:name>Object</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>priority</maml:name>
				<maml:description>
					<maml:para>The Push priority (-2 to +2)</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">Object</command:parameterValue>
				<dev:type>
					<maml:name>Object</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>0</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>sound</maml:name>
				<maml:description>
					<maml:para>The name of one of the sounds supported by device clients to override
the user&#39;s default sound choice</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">Object</command:parameterValue>
				<dev:type>
					<maml:name>Object</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>pushover</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Based on our Send-SlackChat function</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Send-Pushover -User &quot;USERTOKEN&quot; -token &quot;APPTOKEN&quot; -Message &quot;Test&quot;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Send the message &quot;Test&quot; to all your devices. The App Name is
displayed a title of the push</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Send-Pushover -User &quot;USERTOKEN&quot; -token &quot;APPTOKEN&quot; -Message &quot;Test&quot; -device &quot;Josh-iPadPro&quot;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Send the message &quot;Test&quot; to the device with the name &quot;Josh-iPadPro&quot;.
The App Name is displayed a title of the push</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Send-Pushover -User &quot;USERTOKEN&quot; -token &quot;APPTOKEN&quot; -Message &quot;Test&quot; -title &quot;Hello!&quot; -sound &quot;cosmic&quot;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Send the message &quot;Test&quot; to all your devices. It will have the
Title &quot;Hello!&quot; and use the notification sound &quot;cosmic&quot;</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Send-Pushover -User &quot;USERTOKEN&quot; -token &quot;APPTOKEN&quot; -Message &quot;Nice URL for you&quot; -title &quot;Hello!&quot; -url &quot;http://enatec.io&quot; -url_title &quot;My Site&quot;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Send the message &quot;Nice URL for you&quot; with the title &quot;Hello!&quot; to all
your devices.
The Push contains a link to &quot;http://enatec.io&quot; with the
URL title &quot;My Site&quot;</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Get-PushoverUserDeviceInfo</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Info: https://pushover.net</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>API: https://pushover.net/api</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText>Send-SlackChat</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-PushoverUserDeviceInfo</command:name>
			<maml:description>
				<maml:para>Retrieves a list of registered devices with Pushover</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>PushoverUserDeviceInfo</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Perfect in combination with the Send-Pushover command to send a
notification using the &quot;device&quot; parameter of Send-Pushover</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-PushoverUserDeviceInfo</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
					<maml:name>user</maml:name>
					<maml:description>
						<maml:para>The user/group key (not e-mail address) of your user (or you),
viewable when logged into our Pushover dashboard</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
					<maml:name>token</maml:name>
					<maml:description>
						<maml:para>Your Pushover application API token</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>user</maml:name>
				<maml:description>
					<maml:para>The user/group key (not e-mail address) of your user (or you),
viewable when logged into our Pushover dashboard</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>token</maml:name>
				<maml:description>
					<maml:para>Your Pushover application API token</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-PushoverUserDeviceInfo -User &quot;John&quot; -token &quot;APPTOKEN&quot;</dev:code>
				<dev:remarks>
					<maml:para>John-Mac
John-iPadMini
John-iPhone5S
John-S5

Description
-----------
Get all Devices for User &#39;John&#39;</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Send-Pushover</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Info: https://pushover.net</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>API: https://pushover.net/api</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText>Send-SlackChat</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Invoke-RDPSession</command:name>
			<maml:description>
				<maml:para>Wrapper for the Windows RDP Client</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Invoke</command:verb>
			<command:noun>RDPSession</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Just a wrapper for the Windows Remote Desktop Protocol (RDP) Client.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Invoke-RDPSession</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="RDPHost">
					<maml:name>Server</maml:name>
					<maml:description>
						<maml:para>The Host could be a host name or an IP address</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="RDPPort">
					<maml:name>Port</maml:name>
					<maml:description>
						<maml:para>The RDP Port to use</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="RDPHost">
				<maml:name>Server</maml:name>
				<maml:description>
					<maml:para>The Host could be a host name or an IP address</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="RDPPort">
				<maml:name>Port</maml:name>
				<maml:description>
					<maml:para>The RDP Port to use</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>3389</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>We use the follwing defaults: /admin /w:1024 /h:768
Change this within the script if you like other defaults.
A future version might provide more parameters

The default Port is 3389.
You might want to change that via the commandline parameter</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Invoke-RDPSession SNOOPY</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Opens a Remote Desktop Session to the system with the Name SNOOPY</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Invoke-RDPSession -Server &quot;deepblue.fra01.kreativsign.net&quot;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Opens a Remote Desktop Session to the system
&quot;deepblue.fra01.kreativsign.net&quot;</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Invoke-RDPSession -host &#39;10.10.16.10&#39;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Opens a Remote Desktop Session to the system with the IPv4
address 10.10.16.10</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-DefaultMessage</command:name>
			<maml:description>
				<maml:para>Helper Function to show default message used in VERBOSE/DEBUG/WARNING</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>DefaultMessage</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Helper Function to show default message used in VERBOSE/DEBUG/WARNING
and... HOST in some case.
This is helpful to standardize the output messages</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-DefaultMessage</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
					<maml:name>Message</maml:name>
					<maml:description>
						<maml:para>Specifies the message to show</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>Message</maml:name>
				<maml:description>
					<maml:para>Specifies the message to show</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Based on an ideas of Francois-Xavier Cat</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-DefaultMessage -Message &quot;Test&quot;</dev:code>
				<dev:remarks>
					<maml:para>[2016.04.04-23:53:26:61][] Test

Description
-----------
Display the given message with a Time-Stamp</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>.\dummy.ps1</dev:code>
				<dev:remarks>
					<maml:para>[2016.04.04-23:53:26:61][dummy.ps1] Test

Description
-----------
Use the function from within another script
The following code is used in &quot;dummy.ps1&quot;
Get-DefaultMessage -Message &quot;Test&quot;</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Disable-RemoteDesktop</command:name>
			<maml:description>
				<maml:para>The function Disable-RemoteDesktop will disable RemoteDesktop on a
local or remote machine.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Disable</command:verb>
			<command:noun>RemoteDesktop</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The function Disable-RemoteDesktop will disable RemoteDesktop on a
local or remote machine.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Disable-RemoteDesktop</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>CimSession</maml:name>
					<maml:description>
						<maml:para>Specifies one or more existing CIM Session(s) to use</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">CimSession[]</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Disable-RemoteDesktop</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="named" aliases="CN , __SERVER , PSComputerName">
					<maml:name>ComputerName</maml:name>
					<maml:description>
						<maml:para>Specifies the computername</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="RunAs">
					<maml:name>Credentials</maml:name>
					<maml:description>
						<maml:para>Specifies the Credentials to use</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">PSCredential</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CimSession</maml:name>
				<maml:description>
					<maml:para>Specifies one or more existing CIM Session(s) to use</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">CimSession[]</command:parameterValue>
				<dev:type>
					<maml:name>CimSession[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="named" aliases="CN , __SERVER , PSComputerName">
				<maml:name>ComputerName</maml:name>
				<maml:description>
					<maml:para>Specifies the computername</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>&quot;$env:COMPUTERNAME&quot;</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="RunAs">
				<maml:name>Credentials</maml:name>
				<maml:description>
					<maml:para>Specifies the Credentials to use</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">PSCredential</command:parameterValue>
				<dev:type>
					<maml:name>PSCredential</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>[System.Management.Automation.PSCredential]::Empty</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Based on an idea of Francois-Xavier Cat</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Disable-RemoteDesktop -ComputerName &#39;DC01&#39;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Disable RDP on Server &#39;DC01&#39;</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Disable-RemoteDesktop -ComputerName DC01 -Credentials (Get-Credentials -cred &quot;FX\SuperAdmin&quot;)</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Disable RDP on Server &#39;DC01&#39; and use the Domain (FX) Credentials
for &#39;SuperAdmin&#39;, The password will be queried.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Disable-RemoteDesktop -CimSession $Session</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Disable RDP for the host where the CIM Session &#39;$Session&#39; is open.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Disable-RemoteDesktop -CimSession $Session1,$session2,$session3</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Disable RDP for the host where the CIM Sessions
&#39;$Session1,$session2,$session3&#39; are open.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Enable-RemoteDesktop</command:name>
			<maml:description>
				<maml:para>The function Enable-RemoteDesktop will enable RemoteDesktop on a
local or remote machine.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Enable</command:verb>
			<command:noun>RemoteDesktop</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The function Enable-RemoteDesktop will enable RemoteDesktop on a
local or remote machine.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Enable-RemoteDesktop</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>CimSession</maml:name>
					<maml:description>
						<maml:para>Specifies one or more existing CIM Session(s) to use</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">CimSession[]</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Enable-RemoteDesktop</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="named" aliases="CN , __SERVER , PSComputerName">
					<maml:name>ComputerName</maml:name>
					<maml:description>
						<maml:para>Specifies the computername</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="RunAs">
					<maml:name>Credentials</maml:name>
					<maml:description>
						<maml:para>Specifies the Credentials to use</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">PSCredential</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CimSession</maml:name>
				<maml:description>
					<maml:para>Specifies one or more existing CIM Session(s) to use</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">CimSession[]</command:parameterValue>
				<dev:type>
					<maml:name>CimSession[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="named" aliases="CN , __SERVER , PSComputerName">
				<maml:name>ComputerName</maml:name>
				<maml:description>
					<maml:para>Specifies the computername</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>&quot;$env:COMPUTERNAME&quot;</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named" aliases="RunAs">
				<maml:name>Credentials</maml:name>
				<maml:description>
					<maml:para>Specifies the Credentials to use</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">PSCredential</command:parameterValue>
				<dev:type>
					<maml:name>PSCredential</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>[System.Management.Automation.PSCredential]::Empty</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Based on an idea of Francois-Xavier Cat</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Enable-RemoteDesktop -ComputerName &#39;DC01&#39;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Enables RDP on &#39;DC01&#39;</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Enable-RemoteDesktop -ComputerName DC01 -Credentials (Get-Credentials -cred &quot;FX\SuperAdmin&quot;)</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Enables RDP on &#39;DC01&#39; and use the Domain (FX) Credentials for
&#39;SuperAdmin&#39;, The password will be queried.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Enable-RemoteDesktop -CimSession $Session</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Enable RDP for the host where the CIM Session &#39;$Session&#39; is open.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Enable-RemoteDesktop -CimSession $Session1,$session2,$session3</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Enable RDP for the host where the CIM Sessions
&#39;$Session1,$session2,$session3&#39; are open.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Invoke-ReloadModule</command:name>
			<maml:description>
				<maml:para>Reloads one, or more, PowerShell Module(s)</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Invoke</command:verb>
			<command:noun>ReloadModule</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>This function forces an unload and then load the given PowerShell
Module again.

There is no build-in Re-Load function in PowerShell, at least yet!

If you want to reload more then one Module at the time,
just separate them by comma (Usual in PowerShell for multiple-values)</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Invoke-ReloadModule</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="ModuleName">
					<maml:name>Module</maml:name>
					<maml:description>
						<maml:para>Name one, or more, PowerShell Module(s) to reload</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="ModuleName">
				<maml:name>Module</maml:name>
				<maml:description>
					<maml:para>Name one, or more, PowerShell Module(s) to reload</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Needs to be documented</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Invoke-ReloadModule -Module &#39;enatec.opensource&#39;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Reloads the module &#39;enatec.opensource&#39;</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Reload-Module -Module &#39;enatec.opensource&#39;, &#39;enatec.ActiveDirectory&#39;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Reloads the module &#39;enatec.opensource&#39; and &#39;enatec.ActiveDirectory&#39;</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Remove-ItemSafely</command:name>
			<maml:description>
				<maml:para>Deletes files and folders into the Recycle Bin</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Remove</command:verb>
			<command:noun>ItemSafely</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Deletes the file or folder as if it had been done via File Explorer.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Remove-ItemSafely</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>The path to the file/files or folder/folders</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>DeletePermanently</maml:name>
					<maml:description>
						<maml:para>Bypasses the recycle bin, deleting the file or folder permanently</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>The path to the file/files or folder/folders</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>DeletePermanently</maml:name>
				<maml:description>
					<maml:para>Bypasses the recycle bin, deleting the file or folder permanently</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Early Beta Version</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Remove-ItemSafely -Path &#39;C:\scripts\PowerShell\test.ps1&#39;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Deletes file &#39;C:\scripts\PowerShell\test.ps1&#39; into the Recycle Bin</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Remove-ItemSafely -Path &#39;C:\scripts\PowerShell\test.ps1&#39; -DeletePermanently</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Deletes file &#39;C:\scripts\PowerShell\test.ps1&#39; and skip the Recycle Bin</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Based on http://stackoverflow.com/a/502034/2688</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Remove-TempFiles</command:name>
			<maml:description>
				<maml:para>Removes all temp files older then a given time period</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Remove</command:verb>
			<command:noun>TempFiles</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Removes all temp files older then a given time period from the system or the user environment.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Remove-TempFiles</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
					<maml:name>Month</maml:name>
					<maml:description>
						<maml:para>Remove temp files older then X month.
The default is 1</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int64</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="2">
					<maml:name>context</maml:name>
					<maml:description>
						<maml:para>Remove the System or User Temp Files?
The default is All.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Month</maml:name>
				<maml:description>
					<maml:para>Remove temp files older then X month.
The default is 1</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">Int64</command:parameterValue>
				<dev:type>
					<maml:name>Int64</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>1</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="2">
				<maml:name>context</maml:name>
				<maml:description>
					<maml:para>Remove the System or User Temp Files?
The default is All.</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>All</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Management.Automation.PSCustomObject</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Adopted from a snippet found on Powershell.com</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Remove-TempFiles -Confirm:$False</dev:code>
				<dev:remarks>
					<maml:para>TotalSize                     Retrieved                   TotalSizeMB                   RetrievedMB
---------                     ---------                   -----------                   -----------
518485778                     417617315                         494,5                         398,3

Description
-----------
Removes all &#39;User&#39; and &#39;System&#39; temp file older then one month,
without asking if you are sure! This could be dangerous...</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Remove-TempFiles -Confirm:$False</dev:code>
				<dev:remarks>
					<maml:para>WARNING: The process cannot access the file &#39;C:\Users\josh\AppData\Local\Temp\FXSAPIDebugLogFile.txt&#39; because it is being used by another process. - Line Number: 96

TotalSize                       Retrieved                     TotalSizeMB                     RetrievedMB
---------                       ---------                     -----------                     -----------
264147489                       214105710                           251,9                           204,2

Description
-----------
Removes all &#39;User&#39; and &#39;System&#39; temp file older then one month,
without asking if you are sure! This could be dangerous...

One file is locked by another process! Just a warning will show up,
the cleanup will continue.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Remove-TempFiles -Month 3 -Context &#39;System&#39;</dev:code>
				<dev:remarks>
					<maml:para>[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is &quot;Y&quot;)

TotalSize                       Retrieved                     TotalSizeMB                     RetrievedMB
---------                       ---------                     -----------                     -----------
264147489                       214105710                           251,9                           204,2

Description
-----------
Removes all &#39;System&#39; temp files older then 3 month</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Remove-TempFiles -Month 3 -Context &#39;User&#39;</dev:code>
				<dev:remarks>
					<maml:para>[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is &quot;Y&quot;)

TotalSize                       Retrieved                     TotalSizeMB                     RetrievedMB
---------                       ---------                     -----------                     -----------
151519609                       145693231                           144,5                           138,9

Description
-----------
Removes all &#39;User&#39; temp files older then 3 month.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Source http://powershell.com/cs/blogs/tips/archive/2016/05/27/cleaning-week-deleting-temp-files.aspx</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Repair-DotNetFrameWorks</command:name>
			<maml:description>
				<maml:para>Optimize all installed NET Frameworks</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Repair</command:verb>
			<command:noun>DotNetFrameWorks</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Optimize all installed NET Frameworks by executing NGEN.EXE for each.

This could be useful to improve the performance and sometimes the
installation of new NET Frameworks, or even patches, makes them use
a single (the first) core only.

Why Microsoft does not execute the NGEN.EXE with each installation...

no idea!</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Repair-DotNetFrameWorks</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>The Function name is changed!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Repair-DotNetFrameWorks</dev:code>
				<dev:remarks>
					<maml:para>C:\Windows\Microsoft.NET\Framework\v4.0.30319\ngen.exe executeQueuedItems
C:\Windows\Microsoft.NET\Framework64\v4.0.30319\ngen.exe executeQueuedItems

Description
-----------
Optimize all installed NET Frameworks</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-EncryptSecretText</command:name>
			<maml:description>
				<maml:para>Encrypts a given string with a given certificate</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>EncryptSecretText</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Sometimes you might need to transfer a password (or another secret)
via Mail (or any other insecure media) here a strong encryption is
very handy.
Get-EncryptSecretText uses a given Certificate to encrypt a given String</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-EncryptSecretText</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
					<maml:name>CertificatePath</maml:name>
					<maml:description>
						<maml:para>Path to the certificate that you would like to use</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1">
					<maml:name>PlainText</maml:name>
					<maml:description>
						<maml:para>Plain text string that you would like to encrypt with the certificate</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
				<maml:name>CertificatePath</maml:name>
				<maml:description>
					<maml:para>Path to the certificate that you would like to use</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1">
				<maml:name>PlainText</maml:name>
				<maml:description>
					<maml:para>Plain text string that you would like to encrypt with the certificate</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>You need Get-DecryptSecretText to make it human readable again</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-EncryptSecretText -CertificatePath &quot;Cert:\CurrentUser\My\XYZ&quot; -PlainText &quot;My Secret Text&quot;</dev:code>
				<dev:remarks>
					<maml:para>MIIB9QYJKoZIhvcNAQcDoIIB5jCCAeICAQAxggGuMIIBqgIBADCBkTB9MQswCQYDVQQGEwJHQjEbnBkGA1UECBMSR3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHEwdTYWxmb3JkMRowGAYDVQQKExFDT01PRE8
gQ0EgTGltaXRlZDEjMCEGA1UEAxMaQ09NT0RPIFJTQSBDb2RlIFNpZ25pbmcgQ0ECEBbU91MdmxgnT/ImczrRgFwwDQYJKoZIhvcNAQEBBQAEggEAi5M7w7k/siGdGiYW8z8izVUNfI15HaHqHJs/t3VIZkgfSc
GAKUpZjwJW7xMZHoKppw0eL/mUZr4823M276swiktXnpRbol8g8Kqvy2c7dUx2lNJm/+s8YLG0rsK70EhSPzAEbNtFAqlWj5ETnskTlfuEiJdB2tFjC42oweWKRokQ0exyztY1sN7V7vImkMtCS7JHeJF23SyNv
PbFw0hE0QtiKVdu8DESO2CB9H1bVYIxVWTvpvT71yDQCFFOwg0JdGJpCI6l+YxPqHqKhFcdWZtuP8JMvNZ8UbxveNVmBOrasM5ZTHfHljWIT6V6tDxy5jOd9cTiuayh/X1A2eKA/DArBgkqhkiG9w0BBwEwFAYI
KoZIhvcNAwcECFjYhWLX5qsEgAgjq1toxGP5GQ==

Description
-----------
In this example the Certificate with the Fingerprint &quot;XYZ&quot; from the
certificate store of the user is used.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Get-DecryptSecretText</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-DecryptSecretText</command:name>
			<maml:description>
				<maml:para>Decrypts a given String, encrypted by Get-EncryptSecretText</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>DecryptSecretText</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Get-DecryptSecretText makes a string encrypted by Get-EncryptSecretText
decrypts it to and human readable again.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-DecryptSecretText</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
					<maml:name>EncryptedText</maml:name>
					<maml:description>
						<maml:para>The encrypted test string</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
				<maml:name>EncryptedText</maml:name>
				<maml:description>
					<maml:para>The encrypted test string</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>You need the certificate that was used with Get-EncryptSecretText to
encrypt the string</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>$Foo = (Get-EncryptSecretText -CertificatePath &quot;Cert:\CurrentUser\My\XYZ&quot; -PlainText &quot;My Secret Text&quot;)</dev:code>
				<dev:remarks>
					<maml:para>PS C:\&gt; Get-DecrypSecretText -EncryptedText $Foo
My Secret Text

Description
-----------
Get-DecryptSecretText makes a string encrypted by Get-EncryptSecretText
human readable again.
In this example the Certificate with the Fingerprint &quot;XYZ&quot; from the
certificate store of the user is used.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Get-EncryptSecretText</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Send-HipChat</command:name>
			<maml:description>
				<maml:para>Send a notification message to a HipChat room.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Send</command:verb>
			<command:noun>HipChat</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Send a notification message to a HipChat room via a RESTful Call to
the HipChat API V2 Atlassian requires a separate token for each room
within HipChat!

So please note, that the Room and the Token parameter must match.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Send-HipChat</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="AUTH_TOKEN">
					<maml:name>token</maml:name>
					<maml:description>
						<maml:para>HipChat Auth Token</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="ROOM_ID">
					<maml:name>Room</maml:name>
					<maml:description>
						<maml:para>HipChat Room Name that get the notification.
The Token has to fit to the Room!</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
					<maml:name>notify</maml:name>
					<maml:description>
						<maml:para>Whether this message should trigger a user notification
(change the tab color, play a sound, notify mobile phones, etc).
Each recipient&#39;s notification preferences are taken into account.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
					<maml:name>color</maml:name>
					<maml:description>
						<maml:para>Background color for message.

Valid is
- yellow
- green
- red
- purple
- gray
-random</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="4">
					<maml:name>Message</maml:name>
					<maml:description>
						<maml:para>The message body itself. Please see the HipChat API V2 documentation</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="5" aliases="message_format">
					<maml:name>Format</maml:name>
					<maml:description>
						<maml:para>Determines how the message is treated by our server and rendered
inside HipChat applications</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="AUTH_TOKEN">
				<maml:name>token</maml:name>
				<maml:description>
					<maml:para>HipChat Auth Token</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>8EWA77eidxEJG5IFluWjD9794ft8WSzfKhjBCKpv</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="ROOM_ID">
				<maml:name>Room</maml:name>
				<maml:description>
					<maml:para>HipChat Room Name that get the notification.
The Token has to fit to the Room!</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>Testing</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>notify</maml:name>
				<maml:description>
					<maml:para>Whether this message should trigger a user notification
(change the tab color, play a sound, notify mobile phones, etc).
Each recipient&#39;s notification preferences are taken into account.</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
				<dev:type>
					<maml:name>Boolean</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
				<maml:name>color</maml:name>
				<maml:description>
					<maml:para>Background color for message.

Valid is
- yellow
- green
- red
- purple
- gray
-random</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>gray</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="4">
				<maml:name>Message</maml:name>
				<maml:description>
					<maml:para>The message body itself. Please see the HipChat API V2 documentation</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="5" aliases="message_format">
				<maml:name>Format</maml:name>
				<maml:description>
					<maml:para>Determines how the message is treated by our server and rendered
inside HipChat applications</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>text</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>We use the API V2 now ;-)</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Send-HipChat -Message &quot;This is just a BuildServer Test&quot; -color &quot;gray&quot; -Room &quot;Testing&quot; -notify $True</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Sent a HipChat Room notification &quot;This is just a BuildServer Test&quot; to
the Room &quot;Testing&quot;.
It uses the Color &quot;gray&quot;, and it sends a notification to all users
in the room.
It uses a default Token to do so!</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Send-HipChat -Message &quot;Hello @JoergHochwald&quot; -color &quot;Red&quot; -Room &quot;DevOps&quot; -Token &quot;1234567890&quot; -notify $False</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Sent a HipChat Room notification &quot;Hello @JoergHochwald&quot; to the
Room &quot;DevOps&quot;.
The @ indicates a user mention, this is supported like in a regular
chat from user 2 User.
It uses the Color &quot;red&quot;, and it sends no notification to users in
the room.
It uses a Token &quot;1234567890&quot; to do so! The Token must match the Room!</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>API: https://www.hipchat.com/docs/apiv2</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Docs: https://www.hipchat.com/docs/apiv2/method/send_room_notification</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Send-Packet</command:name>
			<maml:description>
				<maml:para>Send a packet via IP, TCP or UDP</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Send</command:verb>
			<command:noun>Packet</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Send a packet via IP, TCP or UDP
Found this useful to test firewall configurations and routing.
Or even to test some services.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Send-Packet</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
					<maml:name>Target</maml:name>
					<maml:description>
						<maml:para>Target name or IP</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
					<maml:name>Protocol</maml:name>
					<maml:description>
						<maml:para>protocol to use, default is IP</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
					<maml:name>TargetPort</maml:name>
					<maml:description>
						<maml:para>Target Port (against the target)</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
					<maml:name>SourcePort</maml:name>
					<maml:description>
						<maml:para>Fake Source port (Default is random)</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4">
					<maml:name>TTL</maml:name>
					<maml:description>
						<maml:para>The Time To Life (Default is 128)</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="5">
					<maml:name>count</maml:name>
					<maml:description>
						<maml:para>The count, how many packets? (Default is one)</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
				<maml:name>Target</maml:name>
				<maml:description>
					<maml:para>Target name or IP</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Protocol</maml:name>
				<maml:description>
					<maml:para>protocol to use, default is IP</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>IP</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>TargetPort</maml:name>
				<maml:description>
					<maml:para>Target Port (against the target)</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>0</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
				<maml:name>SourcePort</maml:name>
				<maml:description>
					<maml:para>Fake Source port (Default is random)</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>(Get-Random -Minimum 0 -Maximum 65535)</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="4">
				<maml:name>TTL</maml:name>
				<maml:description>
					<maml:para>The Time To Life (Default is 128)</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>128</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="5">
				<maml:name>count</maml:name>
				<maml:description>
					<maml:para>The count, how many packets? (Default is one)</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>1</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Based on an idea of JohnLaska</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Send-Packet -Target &#39;10.10.16.29&#39; -Protocol &#39;TCP&#39; -TargetPort &#39;4711&#39;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Send a &#39;TCP&#39; packet on port &#39;4711&#39; to target &#39;10.10.16.29&#39;</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Send-Packet -Target &#39;10.10.16.29&#39; -Protocol &#39;UDP&#39; -TargetPort &#39;4711&#39; -Count &#39;10&#39;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Send 10 &#39;UDP&#39; packets on port &#39;4711&#39; to target &#39;10.10.16.29&#39;</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Send-Packet -Target &#39;10.10.16.29&#39; -Protocol &#39;TCP&#39; -TargetPort &#39;4711&#39; -SourcePort &#39;14712&#39;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Send a &#39;TCP&#39; packet on port &#39;4711&#39; to target &#39;10.10.16.29&#39; and it
uses a fake source port &#39;14712&#39;
This could be useful for port knocking or to check Firewall behaviors</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Source: https://github.com/JohnLaska/PowerShell/blob/master/Send-Packet.ps1</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Send-Prowl</command:name>
			<maml:description>
				<maml:para>Prowl is the Growl client for iOS.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Send</command:verb>
			<command:noun>Prowl</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Prowl is the Growl client for iOS. Push to your iPhone, iPod touch,
or iPad notifications from a Mac or Windows computer,
or from a multitude of apps and services.
Easily integrate the Prowl API into your applications.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Send-Prowl</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
					<maml:name>Event</maml:name>
					<maml:description>
						<maml:para>The Text of the Prowl Message</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
					<maml:name>Description</maml:name>
					<maml:description>
						<maml:para>Description of the Prowl Message</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
					<maml:name>ApplicationName</maml:name>
					<maml:description>
						<maml:para>Name your Application, e.g. BuildBot. Default is PowerShell</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
					<maml:name>priority</maml:name>
					<maml:description>
						<maml:para>Priority of the Prowl Message (0, 1,2), default is 0</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="4">
					<maml:name>url</maml:name>
					<maml:description>
						<maml:para>URL you would like to attach to the Prowl Message</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="5">
					<maml:name>apiKey</maml:name>
					<maml:description>
						<maml:para>Prowl API Key (Required)</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>Event</maml:name>
				<maml:description>
					<maml:para>The Text of the Prowl Message</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Description</maml:name>
				<maml:description>
					<maml:para>Description of the Prowl Message</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>ApplicationName</maml:name>
				<maml:description>
					<maml:para>Name your Application, e.g. BuildBot. Default is PowerShell</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>PowerShell</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3">
				<maml:name>priority</maml:name>
				<maml:description>
					<maml:para>Priority of the Prowl Message (0, 1,2), default is 0</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>0</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="4">
				<maml:name>url</maml:name>
				<maml:description>
					<maml:para>URL you would like to attach to the Prowl Message</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="5">
				<maml:name>apiKey</maml:name>
				<maml:description>
					<maml:para>Prowl API Key (Required)</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Boolean</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Send-Prowl -apiKey &quot;1234567890&quot; -Event &quot;Hello World!&quot;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Send the Prowl message &quot;Hello World!&quot;</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Send-Prowl -apiKey &quot;1234567890&quot; -Event &quot;Call the Helpdesk!&quot; -Priority &quot;2&quot; -Description &quot;Call the Helpdesk, we need your feedback!!!&quot; -url &quot;tel:1234567890&quot;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Send Prowl event &quot;Call the Helpdesk!&quot; with priority 2 and the
description &quot;Call the Helpdesk, we need your feedback!!!&quot;.

It attaches the URL &quot;tel:1234567890&quot;</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Send-Prowl -apiKey &quot;1234567890&quot; -Event &quot;Your Ticket is updated&quot; -Priority 1 -Description &quot;The Helpdesk Team updated your ticket!&quot; -url &quot;http://support.enatec.io/&quot;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Send Prowl event &quot;Your Ticket is updated&quot; with priority 2 and the
description &quot;The Helpdesk Team updated your ticket!&quot;.

It attaches the URL &quot;http://support.enatec.io/&quot;</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Info: http://www.prowlapp.com</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>API: http://www.prowlapp.com/api.php</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Send-SlackChat</command:name>
			<maml:description>
				<maml:para>Sends a chat message to a Slack organization</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Send</command:verb>
			<command:noun>SlackChat</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The Post-ToSlack cmdlet is used to send a chat message to a Slack
channel, group, or person.

Slack requires a token to authenticate to an organization within Slack.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Send-SlackChat</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
					<maml:name>channel</maml:name>
					<maml:description>
						<maml:para>Slack Channel to post to</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
					<maml:name>Message</maml:name>
					<maml:description>
						<maml:para>Chat message to post</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
					<maml:name>token</maml:name>
					<maml:description>
						<maml:para>Slack API token</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="Name">
					<maml:name>BotName</maml:name>
					<maml:description>
						<maml:para>Optional name for the bot</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>channel</maml:name>
				<maml:description>
					<maml:para>Slack Channel to post to</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Message</maml:name>
				<maml:description>
					<maml:para>Chat message to post</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2">
				<maml:name>token</maml:name>
				<maml:description>
					<maml:para>Slack API token</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="3" aliases="Name">
				<maml:name>BotName</maml:name>
				<maml:description>
					<maml:para>Optional name for the bot</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>Build Bot</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Based on an idea of @ChrisWahl
Please note the Name change and the removal of some functions</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Send-SlackChat -channel &#39;#general&#39; -message &#39;Hello everyone!&#39; -botname &#39;The Borg&#39; -token &#39;1234567890&#39;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
This will send a message to the &quot;#General&quot; channel using a specific
token 1234567890, and the bot&#39;s name will be &quot;The Borg&quot;.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Send-SlackChat -channel &#39;#general&#39; -message &#39;Hello everyone!&#39; -token &#39;1234567890&#39;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
This will send a message to the &quot;#General&quot; channel using a specific t
oken 1234567890, and the bot&#39;s name will be default (&quot;Build Bot&quot;).</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Info: https://api.slack.com/tokens</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>API: https://api.slack.com/web</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Info: https://api.slack.com/bot-users</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Set-AcceptProtocolViolation</command:name>
			<maml:description>
				<maml:para>Workaround for servers with SSL header problems</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Set</command:verb>
			<command:noun>AcceptProtocolViolation</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Workaround for the following Exception &quot;DownloadString&quot; with &quot;1&quot;
argument(s):
&quot;The underlying connection was closed: Could not establish trust
relationship for the SSL/TLS secure channel.&quot;</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Set-AcceptProtocolViolation</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Be careful:
This is just a workaround for servers that have a problem with
SSL headers.</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Set-AcceptProtocolViolation</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Establish the workaround (Be careful)</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Set-Culture</command:name>
			<maml:description>
				<maml:para>Set the PowerShell culture to a given culture</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Set</command:verb>
			<command:noun>Culture</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Set the PowerShell culture to a given culture</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Set-Culture</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1">
					<maml:name>Culture</maml:name>
					<maml:description>
						<maml:para>Culture to use</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">CultureInfo</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1">
				<maml:name>Culture</maml:name>
				<maml:description>
					<maml:para>Culture to use</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">CultureInfo</command:parameterValue>
				<dev:type>
					<maml:name>CultureInfo</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>en-US</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.Globalization.CultureInfo</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Inspired by Use-Culture.ps1 by Lee Holmes</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Set-Culture -culture &quot;en-US&quot; | ConvertFrom-UnixDate -Date 1458205878</dev:code>
				<dev:remarks>
					<maml:para>Thursday, March 17, 2016 9:11:18 AM

Description
-----------
Returns the date in the given culture (en-US) format instead of
the system culture.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Use-Culture http://poshcode.org/2226</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Set-DebugOn</command:name>
			<maml:description>
				<maml:para>Turn Debug on</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Set</command:verb>
			<command:noun>DebugOn</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Turn Debug on</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Set-DebugOn</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Just an internal function to make our life easier!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Set-DebugOn</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Turn Debug on</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Set-DebugOff</command:name>
			<maml:description>
				<maml:para>Turn Debug off</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Set</command:verb>
			<command:noun>DebugOff</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Turn Debug off</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Set-DebugOff</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Just an internal function to make our life easier!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Set-DebugOff</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Turn Debug off</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Set-Encoding</command:name>
			<maml:description>
				<maml:para>Converts Encoding of text files</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Set</command:verb>
			<command:noun>Encoding</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Allows you to change the encoding of files and folders.
It supports file extension agnostic

Please note: Overwrites original file if destination equals the path</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Set-Encoding</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="PathName">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>Folder or file to convert</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="Destination">
					<maml:name>dest</maml:name>
					<maml:description>
						<maml:para>If you want so save the newly encoded file/files to a new location</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="enc">
					<maml:name>encoding</maml:name>
					<maml:description>
						<maml:para>Encoding method to use for the Patch or File</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="PathName">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Folder or file to convert</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1" aliases="Destination">
				<maml:name>dest</maml:name>
				<maml:description>
					<maml:para>If you want so save the newly encoded file/files to a new location</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>$Path</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="2" aliases="enc">
				<maml:name>encoding</maml:name>
				<maml:description>
					<maml:para>Encoding method to use for the Patch or File</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>BETA!!!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Set-Encoding -path &quot;c:\windows\temp\folder1&quot; -encoding &quot;UTF8&quot;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Converts all Files in the Folder c:\windows\temp\folder1 in the UTF8 format</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Set-Encoding -path &quot;c:\windows\temp\folder1&quot; -dest &quot;c:\windows\temps\folder2&quot; -encoding &quot;UTF8&quot;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Converts all Files in the Folder c:\windows\temp\folder1 in the UTF8
format and save them to c:\windows\temp\folder2</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>(Get-Content -path &quot;c:\temp\test.txt&quot;) | Set-Content -Encoding UTF8 -Path &quot;c:\temp\test.txt&quot;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
This converts a single File via hardcore PowerShell without a Script.
Might be useful if you want to convert this script after a transfer!</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Set-FolderDate</command:name>
			<maml:description>
				<maml:para>Change one folder, or more, last-write time based on the latest
last-write of the included files</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Set</command:verb>
			<command:noun>FolderDate</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Change one folder, or more, folder last-write time based on the
latest last-write of the included files
Makes windows a lot more Uni* like and have some Convenience.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Set-FolderDate</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>One folder, or more, you would like to update

Default is C:\scripts\PowerShell\log</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>One folder, or more, you would like to update

Default is C:\scripts\PowerShell\log</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>C:\scripts\PowerShell\log</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>We intercept all Errors! This is the part in the &quot;BEGIN&quot; block.
You might want to change that to a warning...

We use this function in bulk operations and from scheduled scripts,
so we do not want that!!!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Set-FolderDate -Path &quot;D:\temp&quot;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Change &quot;D:\temp&quot; last-write time based on the latest last-write
of the included files</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Set-VisualEditor</command:name>
			<maml:description>
				<maml:para>Set the VisualEditor variable</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Set</command:verb>
			<command:noun>VisualEditor</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Setup the VisualEditor variable. Checks if the free (GNU licensed)
Notepad++ is installed,
if so it uses this great free editor.

If not the fall back is the PowerShell ISE.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Set-VisualEditor</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This is just a little helper function to make the shell more flexible</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Set-VisualEditor</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Set the VisualEditor variable. Nothing is returned, no parameter,
no nothing ;-)</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>$VisualEditor</dev:code>
				<dev:remarks>
					<maml:para>C:\Program Files (x86)\Notepad++\notepad++.exe

Description
-----------
Show the variable (Notepad++ in this case)</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>$VisualEditor</dev:code>
				<dev:remarks>
					<maml:para>PowerShell_ISE.exe

Description
-----------
Show the variable (PowerShell ISE in this case)
So no Sublime (our favorite) or Notepad++ (Fallback) installed.
looks like a plain vanilla PowerShell box.
But hey, since PowerShell 4, ISE is great!</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-ShortTime</command:name>
			<maml:description>
				<maml:para>Get the Time as short String</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>ShortTime</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Get the Time as short String</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-ShortTime</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
					<maml:name>FilenameCompatibleFormat</maml:name>
					<maml:description>
						<maml:para>Make sure it is compatible to File Timestamp</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>FilenameCompatibleFormat</maml:name>
				<maml:description>
					<maml:para>Make sure it is compatible to File Timestamp</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Helper Function based on an idea of Robert D. Biddle</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-ShortTime</dev:code>
				<dev:remarks>
					<maml:para>16:17

Description
-----------
Get the Time as short String</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-ShortTime -FilenameCompatibleFormat</dev:code>
				<dev:remarks>
					<maml:para>16-17

Description
-----------
Get the Time as short String and replace the &#39;:&#39; with &#39;-&#39;.
Useful is you want to append this to filenames.
The dash could be bad for such use cases!</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Source https://github.com/RobBiddle/Get-ShortDateTime/blob/master/Get-ShortDateTime.psm1</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Invoke-WithElevation</command:name>
			<maml:description>
				<maml:para>Uni* like Superuser Do (Sudo)</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Invoke</command:verb>
			<command:noun>WithElevation</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>This is not a hack or something:
You still to have the proper access rights (permission) to execute
something with elevated rights (permission)!
Windows will tell you (and ask for confirmation) that the given
command is executes with administrative rights.

The command opens another window and you can still use your existing
shell with you regular permissions.

Keep that in mind when you execute it...</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Invoke-WithElevation</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="FileName">
					<maml:name>File</maml:name>
					<maml:description>
						<maml:para>Script/Program to run</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="FileName">
				<maml:name>File</maml:name>
				<maml:description>
					<maml:para>Script/Program to run</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Still a internal Beta function!
Make PowerShell a bit more like *NIX!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>sudo &#39;C:\scripts\PowerShell\profile.ps1&#39;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Try to execute &#39;C:\scripts\PowerShell\profile.ps1&#39; with elevation
We use the Uni* like alias here</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Invoke-WithElevation &#39;C:\scripts\PowerShell\profile.ps1&#39;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Try to execute &#39;C:\scripts\PowerShell\profile.ps1&#39; with elevation</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Invoke-Tail</command:name>
			<maml:description>
				<maml:para>Make the PowerShell a bit more *NIX like</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Invoke</command:verb>
			<command:noun>Tail</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Wrapper for the PowerShell command Get-Content. It opens a given
file and shows the content...
Get-Content normally exists as soon as the end of the given file is
reached, this wrapper keeps it open and display every new informations
as soon as it appears. This could be very useful for parsing log files.

Everyone ever used Unix or Linux known tail ;-)</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Invoke-Tail</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>f</maml:name>
					<maml:description>
						<maml:para>Follow</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
					<maml:name>File</maml:name>
					<maml:description>
						<maml:para>File to open</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>f</maml:name>
				<maml:description>
					<maml:para>Follow</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>File</maml:name>
				<maml:description>
					<maml:para>File to open</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				<dev:type>
					<maml:name>Object</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Make PowerShell a bit more like *NIX!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Invoke-Tail C:\scripts\PowerShell\logs\create_new_OU_Structure.log</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Opens the given Log file
(C:\scripts\PowerShell\logs\create_new_OU_Structure.log) and shows
every new entry until you break it (CTRL + C)</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>tail C:\scripts\PowerShell\logs\create_new_OU_Structure.log</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Opens the given Log file
(C:\scripts\PowerShell\logs\create_new_OU_Structure.log) and shows
every new entry until you break it (CTRL + C)</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Test-Method</command:name>
			<maml:description>
				<maml:para>Check if the given Function is loaded from a given Module</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Test</command:verb>
			<command:noun>Method</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Check if the given Function is loaded from a given Module</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Test-Method</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="moduleName">
					<maml:name>Module</maml:name>
					<maml:description>
						<maml:para>Name of the Module</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="2" aliases="functionName">
					<maml:name>Function</maml:name>
					<maml:description>
						<maml:para>Name of the function</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="moduleName">
				<maml:name>Module</maml:name>
				<maml:description>
					<maml:para>Name of the Module</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="2" aliases="functionName">
				<maml:name>Function</maml:name>
				<maml:description>
					<maml:para>Name of the function</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Boolean</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Quick helper function to shortcut things. / MBE</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Test-Method -Module &#39;NETX.AD&#39; -Function &#39;Add-AdThumbnailPhoto&#39;</dev:code>
				<dev:remarks>
					<maml:para>True

Description
-----------
Check if the given Function &#39;Add-AdThumbnailPhoto&#39; is loaded from a
given Module &#39;NETX.AD&#39;, what it IS.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Test-Method -Module &#39;NETX.AD&#39; -Function &#39;Test-TCPPort&#39;</dev:code>
				<dev:remarks>
					<maml:para>True

Description
-----------
Check if the given Function &#39;Test-TCPPort&#39; is loaded from a given
Module &#39;NETX.AD&#39;, what it is NOT.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Test-ModuleAvailableToLoad</command:name>
			<maml:description>
				<maml:para>Test if the given Module exists</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Test</command:verb>
			<command:noun>ModuleAvailableToLoad</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Test if the given Module exists</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Test-ModuleAvailableToLoad</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
					<maml:name>modname</maml:name>
					<maml:description>
						<maml:para>Name of the Module to check</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
				<maml:name>modname</maml:name>
				<maml:description>
					<maml:para>Name of the Module to check</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Boolean</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Quick helper function</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Test-ModuleAvailableToLoad EXISTINGMOD</dev:code>
				<dev:remarks>
					<maml:para>True

Description
-----------
This module exists</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Test-ModuleAvailableToLoad WRONGMODULE</dev:code>
				<dev:remarks>
					<maml:para>False

Description
-----------
This Module does not exists</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>$MSOLModname = &quot;MSOnline&quot;</dev:code>
				<dev:remarks>
					<maml:para>$MSOLTrue = (Test-ModuleAvailableToLoad $MSOLModName)

Description
-----------
Bit more complex example that put the Boolean in a variable
for later use.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Test-ProxyBypass</command:name>
			<maml:description>
				<maml:para>Testing URLs for Proxy Bypass</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Test</command:verb>
			<command:noun>ProxyBypass</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>If you&#39;d like to find out whether a given URL goes through a proxy or
is accessed directly</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Test-ProxyBypass</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="uri">
					<maml:name>url</maml:name>
					<maml:description>
						<maml:para>URL to check for Proxy Bypass</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0" aliases="uri">
				<maml:name>url</maml:name>
				<maml:description>
					<maml:para>URL to check for Proxy Bypass</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>http://enatec.io</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Boolean</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Initial version of the function</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Test-ProxyBypass -url &#39;https://outlook.office.com&#39;</dev:code>
				<dev:remarks>
					<maml:para>True

Description
-----------
Check if the given URL &#39;https://outlook.office.com&#39; is directly
accessible, what it IS!</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Test-ProxyBypass -url &#39;http://technet.microsoft.com&#39;</dev:code>
				<dev:remarks>
					<maml:para>False

Description
-----------
Check if the given URL &#39;http://technet.microsoft.com&#39; is directly
accessible, what it is NOT!</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>Source: http://powershell.com/cs/blogs/tips/archive/2012/08/14/testing-urls-for-proxy-bypass.aspx</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Test-RemotePOSH</command:name>
			<maml:description>
				<maml:para>Check if PSRemoting (Remote execution of PowerShell) is enabled on
a given Host</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Test</command:verb>
			<command:noun>RemotePOSH</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Check if PSRemoting (Remote execution of PowerShell) is enabled on
a given Host</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Test-RemotePOSH</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
					<maml:name>Computer</maml:name>
					<maml:description>
						<maml:para></maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>POSHcred</maml:name>
					<maml:description>
						<maml:para>The credentials to use!

Default is the credentials that we use for Azure, Exchange...</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
				<maml:name>Computer</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>($env:COMPUTERNAME)</dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>POSHcred</maml:name>
				<maml:description>
					<maml:para>The credentials to use!

Default is the credentials that we use for Azure, Exchange...</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">PSCredential</command:parameterValue>
				<dev:type>
					<maml:name>PSCredential</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Initial Beta based on an idea of Adrian Rodriguez (adrian@rdrgz.net)</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Enable-RemotePOSH -ComputerName &#39;NXLIMCLN01&#39;</dev:code>
				<dev:remarks>
					<maml:para>WARNING: Unable to establish remote session with NXLIMCLN01.

Description
-----------
Check if PSRemoting (Remote execution of PowerShell) is enabled on
&#39;NXLIMCLN01&#39;. It uses the default credentials (Same that we use to
administer Exchange Online and Azue)</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Enable-RemotePOSH -ComputerName &#39;NXLIMCLN02&#39; -POSHcred (Get-Credential)</dev:code>
				<dev:remarks>
					<maml:para>NXLIMCLN02

Description
-----------
Check if PSRemoting (Remote execution of PowerShell) is enabled on
&#39;NXLIMCLN02&#39;.

And is asks for the credentials to use.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-Time</command:name>
			<maml:description>
				<maml:para>Timing How Long it Takes a Script or Command to Run</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>Time</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>This is a quick wrapper for Measure-Command Cmdlet

Make the PowerShell a bit more *NIX like

Everyone ever used Unix or Linux known time ;-)</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-Time</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Command">
					<maml:name>File</maml:name>
					<maml:description>
						<maml:para>Script or command to execute</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="Command">
				<maml:name>File</maml:name>
				<maml:description>
					<maml:para>Script or command to execute</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				<dev:type>
					<maml:name>Object</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Make PowerShell a bit more like *NIX!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>time new-Bulk-devices.ps1</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Runs the script new-Bulk-devices.ps1 and shows how log it takes
to execute

We use the well known Uni* alias here!</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>time Get-Service | Export-Clixml c:\scripts\test.xml</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
When you run this command, service information will be saved to
the file Test.xml

It also shows how log it takes to execute
We use the well known Uni* alias here!</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-Time new-Bulk-devices.ps1</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Runs the script new-Bulk-devices.ps1 and shows how log it takes to
execute

Makes no sense, instead of Measure-Command we use Get-Time,
but we need to use this name to make it right ;-)</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Set-FileTime</command:name>
			<maml:description>
				<maml:para>Change file Creation + Modification + Last Access times</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Set</command:verb>
			<command:noun>FileTime</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The touch utility sets the Creation + Modification + Last Access
times of files.

If any file does not exist, it is created with default permissions by
default.

To prevent this, please use the -NoCreate parameter!</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Set-FileTime</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>Path to the File that we would like to change</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>AccessTime</maml:name>
					<maml:description>
						<maml:para>Change the Access Time Only</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>WriteTime</maml:name>
					<maml:description>
						<maml:para>Change the Write Time Only</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>CreationTime</maml:name>
					<maml:description>
						<maml:para>Change the Creation Time Only</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>NoCreate</maml:name>
					<maml:description>
						<maml:para>Do not create a new file, if the given one does not exist.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
					<maml:name>Date</maml:name>
					<maml:description>
						<maml:para>Date to set</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">DateTime</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Path to the File that we would like to change</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>AccessTime</maml:name>
				<maml:description>
					<maml:para>Change the Access Time Only</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>WriteTime</maml:name>
				<maml:description>
					<maml:para>Change the Write Time Only</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>CreationTime</maml:name>
				<maml:description>
					<maml:para>Change the Creation Time Only</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>NoCreate</maml:name>
				<maml:description>
					<maml:para>Do not create a new file, if the given one does not exist.</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>Date</maml:name>
				<maml:description>
					<maml:para>Date to set</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">DateTime</command:parameterValue>
				<dev:type>
					<maml:name>DateTime</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>touch foo.txt</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Change the Creation + Modification + Last Access Date/time and if the
file does not already exist, create it with the default permissions.
We use the alias touch instead of Set-FileTime to make it more *NIX like</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Set-FileTime foo.txt -NoCreate</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Change the Creation + Modification + Last Access Date/time if this
file exists.

The -NoCreate makes sure, that the file will not be created!</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Set-FileTime foo.txt -only_modification</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Change only the modification time</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Set-FileTime foo.txt -only_access</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Change only the last access time</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 5 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>dir . -recurse -filter &quot;*.xls&quot; | Set-FileTime</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Change multiple files</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText>Based on this: http://ss64.com/ps/syntax-touch.html</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>ConvertTo-UnixDate</command:name>
			<maml:description>
				<maml:para>Convert from DateTime to Unix date</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>ConvertTo</command:verb>
			<command:noun>UnixDate</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Convert from DateTime to Unix date</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>ConvertTo-UnixDate</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
					<maml:name>Date</maml:name>
					<maml:description>
						<maml:para>Date to convert</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">DateTime</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
					<maml:name>UTC</maml:name>
					<maml:description>
						<maml:para>Default behavior is to convert Date to universal time.
Set this to false to skip this step.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
				<maml:name>Date</maml:name>
				<maml:description>
					<maml:para>Date to convert</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">DateTime</command:parameterValue>
				<dev:type>
					<maml:name>DateTime</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>(Get-Date)</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>UTC</maml:name>
				<maml:description>
					<maml:para>Default behavior is to convert Date to universal time.
Set this to false to skip this step.</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
				<dev:type>
					<maml:name>Boolean</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>True</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.DateTime</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Adopted parts of Warren F. (RamblingCookieMonster)</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>ConvertTo-UnixDate -Date (Get-date)</dev:code>
				<dev:remarks>
					<maml:para>1458205878

Description
-----------
Convert from UTC DateTime to Unix date</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>ConvertTo-UnixDate -Date (Get-date) -UTC $False</dev:code>
				<dev:remarks>
					<maml:para>1458209488

Description
-----------
Convert from non UTC DateTime to Unix date</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Source http://stackoverflow.com/questions/10781697/convert-unix-time-with-powershell
Source http://powershell.com/cs/blogs/tips/archive/2012/03/09/converting-unix-time.aspx</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>ConvertFrom-UnixDate</command:name>
			<maml:description>
				<maml:para>Convert from Unix time to DateTime</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>ConvertFrom</command:verb>
			<command:noun>UnixDate</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Convert from Unix time to DateTime and make it human readable again</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>ConvertFrom-UnixDate</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
					<maml:name>Date</maml:name>
					<maml:description>
						<maml:para>Date to convert, in Unix / Epoch format</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
					<maml:name>UTC</maml:name>
					<maml:description>
						<maml:para>Default behavior is to convert Date to universal time.
Set this to false to Return local time.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
				<maml:name>Date</maml:name>
				<maml:description>
					<maml:para>Date to convert, in Unix / Epoch format</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>0</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="1">
				<maml:name>UTC</maml:name>
				<maml:description>
					<maml:para>Default behavior is to convert Date to universal time.
Set this to false to Return local time.</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">Boolean</command:parameterValue>
				<dev:type>
					<maml:name>Boolean</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>True</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Adopted parts of Warren F. (RamblingCookieMonster)</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>ConvertFrom-UnixDate -Date 1458205878</dev:code>
				<dev:remarks>
					<maml:para>Thursday, March 17, 2016 9:11:18 AM

Description
-----------
Convert from a given Unix time string to a UTC DateTime format
Formated based on the local PowerShell Culture!</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>ConvertFrom-UnixDate -Date 1458205878 -UTC $False</dev:code>
				<dev:remarks>
					<maml:para>Thursday, March 17, 2016 9:11:18 AM

Description
-----------
Convert from a given Unix time string to a non UTC DateTime format
Formated based on the local PowerShell Culture!</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Set-Culture -culture &quot;de-DE&quot; | ConvertFrom-UnixDate -Date 1458205878</dev:code>
				<dev:remarks>
					<maml:para>Donnerstag, 17. M&#228;rz 2016 09:11:18

Description
-----------
Use our Set-Culture to dump the info in US English</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Set-Culture -culture &quot;en-GB&quot; | ConvertFrom-UnixDate -Date 1458205878</dev:code>
				<dev:remarks>
					<maml:para>17 March 2016 09:11:18

Description
-----------
Use our Set-Culture to dump the info in plain (UK) English</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 5 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Set-Culture -culture &quot;fr-CA&quot; | ConvertFrom-UnixDate -Date 1458205878</dev:code>
				<dev:remarks>
					<maml:para>17 mars 2016 09:11:18

Description
-----------
Use our Set-Culture to dump the info in Canadian French</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 6 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>ConvertFrom-UnixDate -Date (Get-ItemProperty &#39;HKLM:\Software\Microsoft\Windows NT\CurrentVersion&#39; | Select-Object -ExpandProperty InstallDate)</dev:code>
				<dev:remarks>
					<maml:para>20. Juli 2015 13:24:00

Description
-----------
Read the Install date of the local system (Unix time string)
and converts it to a human readable string

Formated based on the local PowerShell Culture!</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 7 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>ConvertFrom-UnixDate -Date (Get-ItemProperty &#39;HKLM:\Software\Microsoft\Windows NT\CurrentVersion&#39; | Select-Object -ExpandProperty InstallDate) | New-TimeSpan | Select-Object -ExpandProperty Days</dev:code>
				<dev:remarks>
					<maml:para>431

Description
-----------
Read the Install date (Unix time string) and converts it to DateTime,
extracts the days</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Source http://stackoverflow.com/questions/10781697/convert-unix-time-with-powershell
Source http://powershell.com/cs/blogs/tips/archive/2012/03/09/converting-unix-time.aspx</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>ConvertFrom-UrlEncoded</command:name>
			<maml:description>
				<maml:para>Decodes a UrlEncoded string.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>ConvertFrom</command:verb>
			<command:noun>UrlEncoded</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Decodes a UrlEncoded string.

Input can be either a positional or named parameters of type string or
an array of strings.

The Cmdlet accepts pipeline input.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>ConvertFrom-UrlEncoded</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
					<maml:name>InputObject</maml:name>
					<maml:description>
						<maml:para>A description of the InputObject parameter.</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para>A description of the InputObject parameter.</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				<dev:type>
					<maml:name>Object</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>ConvertFrom-UrlEncoded &#39;http%3a%2f%2fwww.d-fens.ch&#39;</dev:code>
				<dev:remarks>
					<maml:para>http://www.d-fens.ch

Description
-----------
Encoded string is passed as a positional parameter to the Cmdlet.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>ConvertFrom-UrlEncoded -InputObject &#39;http%3a%2f%2fwww.d-fens.ch&#39;</dev:code>
				<dev:remarks>
					<maml:para>http://www.d-fens.ch

Description
-----------
Encoded string is passed as a named parameter to the Cmdlet.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>ConvertFrom-UrlEncoded -InputObject &#39;http%3a%2f%2fwww.d-fens.ch&#39;, &#39;http%3a%2f%2fwww.dfch.biz%2f&#39;</dev:code>
				<dev:remarks>
					<maml:para>http://www.d-fens.ch
http://www.dfch.biz/

Description
-----------
Encoded strings are passed as an implicit array to the Cmdlet.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>ConvertFrom-UrlEncoded -InputObject @(&quot;http%3a%2f%2fwww.d-fens.ch&quot;, &quot;http%3a%2f%2fwww.dfch.biz%2f&quot;)</dev:code>
				<dev:remarks>
					<maml:para>http://www.d-fens.ch
http://www.dfch.biz/

Description
-----------
Encoded strings are passed as an explicit array to the Cmdlet.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 5 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>@(&quot;http%3a%2f%2fwww.d-fens.ch&quot;, &quot;http%3a%2f%2fwww.dfch.biz%2f&quot;) | ConvertFrom-UrlEncoded</dev:code>
				<dev:remarks>
					<maml:para>http://www.d-fens.ch
http://www.dfch.biz/

Description
-----------
Encoded strings are piped as an explicit array to the Cmdlet.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 6 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>&quot;http%3a%2f%2fwww.dfch.biz%2f&quot; | ConvertFrom-UrlEncoded</dev:code>
				<dev:remarks>
					<maml:para>http://www.dfch.biz/

Description
-----------
Encoded string is piped to the Cmdlet.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 7 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>$r = @(&quot;http%3a%2f%2fwww.d-fens.ch&quot;, 0, &quot;http%3a%2f%2fwww.dfch.biz%2f&quot;) | ConvertFrom-UrlEncoded</dev:code>
				<dev:remarks>
					<maml:para>PS C:\&gt; $r
http://www.d-fens.ch
0
http://www.dfch.biz/

Description
-----------
In case one of the passed strings is not a UrlEncoded encoded string,
the plain string is returned. The pipeline will continue to execute
and all strings are returned.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online Version: http://dfch.biz/biz/dfch/PS/System/Utilities/ConvertFrom-UrlEncoded/</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>ConvertTo-UrlEncoded</command:name>
			<maml:description>
				<maml:para>Encode a string</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>ConvertTo</command:verb>
			<command:noun>UrlEncoded</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Encode a string</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>ConvertTo-UrlEncoded</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0">
					<maml:name>InputObject</maml:name>
					<maml:description>
						<maml:para>String to encode</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0">
				<maml:name>InputObject</maml:name>
				<maml:description>
					<maml:para>String to encode</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Adopted from the ConvertFrom-UrlEncoded command</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>ConvertTo-UrlEncoded -InputObject &#39;http://enatec.io&#39;</dev:code>
				<dev:remarks>
					<maml:para>http%3a%2f%2fenatec.io</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>ConvertFrom-UrlEncoded</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-TinyURL</command:name>
			<maml:description>
				<maml:para>Get a Short URL</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>TinyURL</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Get a Short URL using the TINYURL.COM Service</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-TinyURL</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="URL2Tiny">
					<maml:name>url</maml:name>
					<maml:description>
						<maml:para>Long URL</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="URL2Tiny">
				<maml:name>url</maml:name>
				<maml:description>
					<maml:para>Long URL</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Still a beta Version!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-TinyURL -URL &#39;http://enatec.io&#39;</dev:code>
				<dev:remarks>
					<maml:para>http://tinyurl.com/jfnh8re

Description
-----------
Request the TINYURL for http://enatec.io
In this example the Return is http://tinyurl.com/jfnh8re</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-IsGdURL</command:name>
			<maml:description>
				<maml:para>Get a Short URL</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>IsGdURL</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Get a Short URL using the IS.GD Service</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-IsGdURL</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="URL2GD">
					<maml:name>url</maml:name>
					<maml:description>
						<maml:para>Long URL</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="URL2GD">
				<maml:name>url</maml:name>
				<maml:description>
					<maml:para>Long URL</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-IsGdURL -URL &#39;http://enatec.io&#39;</dev:code>
				<dev:remarks>
					<maml:para>http://is.gd/FkMP5v

Description
-----------
Request the IS.GD for http://enatec.io
In this example the Return is http://is.gd/FkMP5v</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-TrImURL</command:name>
			<maml:description>
				<maml:para>Get a Short URL</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>TrImURL</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Get a Short URL using the TR.IM Service</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-TrImURL</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="URL2Trim">
					<maml:name>url</maml:name>
					<maml:description>
						<maml:para>Long URL</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="URL2Trim">
				<maml:name>url</maml:name>
				<maml:description>
					<maml:para>Long URL</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>The service is off line at the moment!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-TrImURL -URL &#39;http://enatec.io&#39;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Request the tr.im for http://enatec.io</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-LongURL</command:name>
			<maml:description>
				<maml:para>Expand a Short URL</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>LongURL</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Expand a Short URL via the untiny.me
This service supports all well known short URL services!</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-LongURL</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="URL2Exapnd">
					<maml:name>url</maml:name>
					<maml:description>
						<maml:para>Short URL</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="URL2Exapnd">
				<maml:name>url</maml:name>
				<maml:description>
					<maml:para>Short URL</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This service supports all well known short URL services!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-LongURL -URL &#39;http://cutt.us/KX5CD&#39;</dev:code>
				<dev:remarks>
					<maml:para>http://enatec.io

Description
-----------
Get the Long URL (http://enatec.io) for a given Short URL</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Invoke-WordCounter</command:name>
			<maml:description>
				<maml:para>Word, line, character, and byte count</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Invoke</command:verb>
			<command:noun>WordCounter</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>The wc utility displays the number of lines, words, and bytes
contained in each input file, or standard input (if no file is
specified) to the standard output.
A line is defined as a string of characters delimited by a &lt;newline&gt;
character.
Characters beyond the final &lt;newline&gt; character will not be
included in the line count.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Invoke-WordCounter</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="File">
					<maml:name>Object</maml:name>
					<maml:description>
						<maml:para>The input File, Object, or Array</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0" aliases="File">
				<maml:name>Object</maml:name>
				<maml:description>
					<maml:para>The input File, Object, or Array</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				<dev:type>
					<maml:name>Object</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Make PowerShell a bit more like *NIX!

TODO: Parameter needs o be fixed (Read from Pipe)</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Invoke-WordCounter</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Word, line, character, and byte count</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Invoke-Which</command:name>
			<maml:description>
				<maml:para>Locate a program file in the user&#39;s path</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Invoke</command:verb>
			<command:noun>Which</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Make PowerShell more Uni* like by set an alias to the existing
Get-Command command let</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Invoke-Which</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
					<maml:name>command</maml:name>
					<maml:description>
						<maml:para>Locate a program file in the path</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="false" position="0">
				<maml:name>command</maml:name>
				<maml:description>
					<maml:para>Locate a program file in the path</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">Object</command:parameterValue>
				<dev:type>
					<maml:name>Object</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Make PowerShell a bit more like *NIX!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Invoke-Which nuget.exe</dev:code>
				<dev:remarks>
					<maml:para>C:\scripts\tools\nuget.exe

Description
-----------
Locate a program file in the user&#39;s path</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>which nuget.exe</dev:code>
				<dev:remarks>
					<maml:para>C:\scripts\tools\nuget.exe

Description
-----------
Locate a program file in the user&#39;s path</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Invoke-Whoami</command:name>
			<maml:description>
				<maml:para>Shows the windows login info</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Invoke</command:verb>
			<command:noun>Whoami</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Make PowerShell a bit more like *NIX! Shows the Login info as you
might know it from Unix/Linux</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Invoke-Whoami</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Make PowerShell a bit more like *NIX!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Invoke-Whoami</dev:code>
				<dev:remarks>
					<maml:para>BART\josh

Description
-----------
Login (User) Josh on the system named BART</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>whoami</dev:code>
				<dev:remarks>
					<maml:para>BART\josh

Description
-----------
Login (User) Josh on the system named BART</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-ComputerGPOs</command:name>
			<maml:description>
				<maml:para>Get computer applied group policies</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>ComputerGPOs</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>This function shows computer applied group policies as shown inside the EventLog</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-ComputerGPOs</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Management.Automation.PSCustomObject</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Credits goes to ControlUp by Smart-X</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-ComputerGPOs</dev:code>
				<dev:remarks>
					<maml:para>List of applicable Group Policy objects:

Local Group Policy

Description
-----------
Get computer applied group policies</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-ComputerGPOs</dev:code>
				<dev:remarks>
					<maml:para>List of applicable Group Policy objects:

Local Group Policy
Default Domain Policy
Default Domain Controllers Policy

Description
-----------
Get computer applied group policies</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-ComputerGPOs</dev:code>
				<dev:remarks>
					<maml:para>List of applicable Group Policy objects:

No relevant Microsoft-Windows-GroupPolicy objects found.

Description
-----------
Get computer applied group policies</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-UserProfileSize</command:name>
			<maml:description>
				<maml:para>Calculate the user profile folder and sub-folders size</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>UserProfileSize</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>This function runs against the user profile folder and collects information
about the number of files and file size.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-UserProfileSize</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Management.Automation.PSCustomObject</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Credits goes to ControlUp by Smart-X</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-UserProfileSize</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Calculate the user profile folder and sub-folders size</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-UserProfileSize| Format-Table -AutoSize</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Calculate the user profile folder and sub-folders size</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-GPUserCSE</command:name>
			<maml:description>
				<maml:para>Lists every Group Policy Client Side Extension and their associated
load time in milliseconds.</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>GPUserCSE</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>This script looks under the &#39;Group Policy Event Log&#39; and lists every
applied Group Policy Client Side Extensions.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-GPUserCSE</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0">
					<maml:name>Identity</maml:name>
					<maml:description>
						<maml:para>Type in the Positional argument of the Down-Level Logon Name (Domain\User)</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName)" position="0">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Type in the Positional argument of the Down-Level Logon Name (Domain\User)</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Credits goes to ControlUp by Smart-X</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-GPUserCSE -Identity &#39;MyDomain\MyUser&#39;</dev:code>
				<dev:remarks>
					<maml:para>CSE Name                  Time(ms) GPOs
--------                  -------- ----
Group Policy Registry          531 VSI User-V4, XenApp 6.5 User Env
Registry                       296 Local Group Policy, Local Group Policy
Citrix Group Policy            281 Local Group Policy, Local Group Policy
Scripts                         93 VSI User-V4, VSI System-V4
Folder Redirection              78 None
Citrix Profile Management       16 None

Group Policy Client Side Extensions with an error

CSE Name                   Time(ms) ErrorCode GPOs
--------                   -------- --------- ----
Internet Explorer Branding       16       127 VSI User-V4, VSI System-V4</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-CertificateExpiration</command:name>
			<maml:description>
				<maml:para>Certificate Expiration Check</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>CertificateExpiration</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Certificate Expiration Check</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-CertificateExpiration</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
					<maml:name>threshold</maml:name>
					<maml:description>
						<maml:para>Days the certificates should be valid</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
				<maml:name>threshold</maml:name>
				<maml:description>
					<maml:para>Days the certificates should be valid</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32</command:parameterValue>
				<dev:type>
					<maml:name>Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>365</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.Int32</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-CertificateExpiration -threshold &#39;200&#39;</dev:code>
				<dev:remarks>
					<maml:para>Issuer               Subject                 NotAfter            Expires In (Days)
------               -------                 --------            -----------------
CN=CONTOSO-INTERN-CA CN=casrv-01.contoso.com 25.12.2016 18:15:48               156

Description
-----------
Check for certificates expiring within the next &#39;200&#39; days</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-CertificateExpiration | Format-Table -AutoSize</dev:code>
				<dev:remarks>
					<maml:para>Issuer               Subject                 NotAfter            Expires In (Days)
------               -------                 --------            -----------------
CN=CONTOSO-INTERN-CA CN=casrv-01.contoso.com 25.12.2016 18:15:48               156

Description
-----------
Check for certificates expiring within year (the default) with a formated list</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-MappedDrives</command:name>
			<maml:description>
				<maml:para>Get a list of users mapped network drives</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>MappedDrives</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>When run against a user session, it will report the drive letter and UNC path of the user&#39;s mapped drives.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-MappedDrives</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Management.Automation.PSCustomObject</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-MappedDrives</dev:code>
				<dev:remarks>
					<maml:para>Drive                                                       UNC Share
-----                                                       ---------
Z:                                                          \\MIASRV09\Home

Description
-----------
Get a list of users mapped network drives</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-MappedDrives | Format-Table -AutoSize</dev:code>
				<dev:remarks>
					<maml:para>Drive UNC Share
----- ---------
Z:    \\MIASRV09\Home

Description
-----------
Get a formated list of users mapped network drives</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-RegistryKeyPropertiesAndValues</command:name>
			<maml:description>
				<maml:para>This function is used here to retrieve registry values while omitting the PS properties</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>RegistryKeyPropertiesAndValues</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>This function is used here to retrieve registry values while omitting the PS properties</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-RegistryKeyPropertiesAndValues</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
					<maml:name>Path</maml:name>
					<maml:description>
						<maml:para>Path to check (within the registry)</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="0">
				<maml:name>Path</maml:name>
				<maml:description>
					<maml:para>Path to check (within the registry)</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-RegistryKeyPropertiesAndValues -path &#39;HKCU:\Volatile Environment&#39;</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code># Get the user profile path, while escaping special characters because we are going to use the -match operator on it</dev:code>
				<dev:remarks>
					<maml:para>$Profilepath = [regex]::Escape($env:USERPROFILE)

# List all folders
$RedirectedFolders = (Get-RegistryKeyPropertiesAndValues -Path &#39;HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders&#39; | Where-Object -FilterScript {$_.RedirectedLocation -notmatch &quot;$Profilepath&quot;})
if ($RedirectedFolders) {
$RedirectedFolders
} else {
Write-Output -InputObject &#39;No folders are redirected for this user&#39;
}

Description
-----------
List redirected user folders</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>http://www.ScriptingGuys.com/blog</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>http://stackoverflow.com/questions/13350577/can-powershell-get-childproperty-get-a-list-of-real-registry-keys-like-reg-query</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-StartupInfo</command:name>
			<maml:description>
				<maml:para>Get all  Programs from the Auto Start</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>StartupInfo</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Get all  Programs from the Auto Start</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-StartupInfo</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Management.Automation.PSCustomObject</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Based on Get-SystemStatus by Patrick G (No copyright or license where applied)</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-StartupInfo</dev:code>
				<dev:remarks>
					<maml:para>StartupItems
------------
None

Description
-----------
Get all  Programs from the Auto Start, in this case there are none!</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-StartupInfo</dev:code>
				<dev:remarks>
					<maml:para>StartupItems
------------
AcWin7Hlpr
EssentialsTrayApp
HotKeysCmds
IgfxTray
LENOVO.TPKNRRES
Persistence
SmartAudio

Description
-----------
Get all  Programs from the Auto Start, in this example on a Lenovo ThinkPad</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>http://poshcode.org/6460</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-DriveInfo</command:name>
			<maml:description>
				<maml:para>Get Drive Information</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>DriveInfo</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Get Drive Information</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-DriveInfo</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Management.Automation.PSCustomObject</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Based on Get-SystemStatus by Patrick G (No copyright or license where applied)</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-DriveInfo</dev:code>
				<dev:remarks>
					<maml:para>DriveLetter FreeSpaceGB TotalDriveCapacityGB PercentFree
----------- ----------- -------------------- -----------
C:                  165                  233          71

Description
-----------
Get Drive Information</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-DriveInfo | Format-List</dev:code>
				<dev:remarks>
					<maml:para>DriveLetter          : C:
FreeSpaceGB          : 165
TotalDriveCapacityGB : 233
PercentFree          : 71

Description
-----------
Get Drive Information in a formated list</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-DriveInfo</dev:code>
				<dev:remarks>
					<maml:para>DriveLetter FreeSpaceGB TotalDriveCapacityGB PercentFree
----------- ----------- -------------------- -----------
C:                  218                  283          77
D:                 1495                 2048          73
E:                 1867                 2048          91

Description
-----------
Get Drive Information, Multiple drives</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-DriveInfo | Format-List</dev:code>
				<dev:remarks>
					<maml:para>DriveLetter          : C:
FreeSpaceGB          : 218
TotalDriveCapacityGB : 283
PercentFree          : 77

DriveLetter          : D:
FreeSpaceGB          : 1495
TotalDriveCapacityGB : 2048
PercentFree          : 73

DriveLetter          : E:
FreeSpaceGB          : 1863
TotalDriveCapacityGB : 2048
PercentFree          : 91

Description
-----------
Get Drive Information in a formated list, Multiple drives</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>http://poshcode.org/6460</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-NetworkCardInfo</command:name>
			<maml:description>
				<maml:para>Get Networking Info</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>NetworkCardInfo</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Get Networking Info</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-NetworkCardInfo</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Management.Automation.PSCustomObject</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Based on Get-SystemStatus by Patrick G (No copyright or license where applied)</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-NetworkCardInfo | Format-List</dev:code>
				<dev:remarks>
					<maml:para>NIC            : Intel(R) PRO/1000 MT Network Connection
DHCPEnabled    : True
IPAddress      : 10.211.55.5
DefaultGateway : 10.211.55.1

Description
-----------
Get Networking Info</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-NetworkCardInfo</dev:code>
				<dev:remarks>
					<maml:para>NIC                                         DHCPEnabled IPAddress      DefaultGateway
---                                         ----------- ---------      --------------
Intel(R) 82567LF Gigabit Network Connection        True 192.168.178.35 {192.168.178.1, fe80::a96:d7ff:feb2:6bcd}

Description
-----------
Get Networking Info</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-NetworkCardInfo | Format-List</dev:code>
				<dev:remarks>
					<maml:para>NIC            : Intel(R) 82567LF Gigabit Network Connection
DHCPEnabled    : True
IPAddress      : 192.168.178.35
DefaultGateway : {192.168.178.1, fe80::a96:d7ff:feb2:6bcd}

Description
-----------
Get Networking Info</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-NetworkCardInfo</dev:code>
				<dev:remarks>
					<maml:para>NIC                                                 DHCPEnabled IPAddress                       DefaultGateway
---                                                 ----------- ---------                       --------------
Intel(R) 82574L Gigabit Netw...                           False 192.168.178.2                   {192.168.178.1, fe80::a96:d7...

Description
-----------
Get Networking Info</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 5 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-NetworkCardInfo | Format-List</dev:code>
				<dev:remarks>
					<maml:para>NIC            : Intel(R) 82574L Gigabit Network Connection
DHCPEnabled    : False
IPAddress      : 192.168.178.2
DefaultGateway : {192.168.178.1, fe80::a96:d7ff:feb2:6bcd}

Description
-----------
Get Networking Info</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>http://poshcode.org/6460</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-SystemInfo</command:name>
			<maml:description>
				<maml:para>Get System Information</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>SystemInfo</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Get System Information</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-SystemInfo</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Management.Automation.PSCustomObject</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Based on Get-SystemStatus by Patrick G (No copyright or license where applied)</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-SystemInfo</dev:code>
				<dev:remarks>
					<maml:para>SerialNumber       : Not Available
BIOSManufacturer   : Parallels Software International Inc.
BIOSVersion        : PRLS   - 1
ComputerModel      : Parallels Virtual Platform
SystemType         : x64-based PC
NumberOfProcessors : 1
OperatingSystem    : Microsoft Windows 7 Enterprise
BuildNumber        : 7601
LastRebootTime     : 2016-08-04 18:31

Description
-----------
Get System Information</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-SystemInfo</dev:code>
				<dev:remarks>
					<maml:para>SerialNumber       : Not Available
BIOSManufacturer   : American Megatrends Inc.
BIOSVersion        : {WDCorp - 1072009, 4.6.5, American Megatrends - 4028D}
ComputerModel      : WDBWVL0080KBK-20
SystemType         : x64-based PC
NumberOfProcessors : 1
OperatingSystem    : Microsoft Windows Server 2012 R2 Essentials
BuildNumber        : 9600
LastRebootTime     : 2016-07-25 15:00

Description
-----------
Get System Information</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-SystemInfo</dev:code>
				<dev:remarks>
					<maml:para>SerialNumber       : Not Available
BIOSManufacturer   : LENOVO
BIOSVersion        : {LENOVO - 2160, Ver 1.00PARTTBLX}
ComputerModel      : 647314G
SystemType         : x64-based PC
NumberOfProcessors : 1
OperatingSystem    : Microsoft Windows 7 Enterprise
BuildNumber        : 7601
LastRebootTime     : 2016-07-30 01:13

Description
-----------
Get System Information</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>http://poshcode.org/6460</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-AntiVirusInfo</command:name>
			<maml:description>
				<maml:para>Get Anti Virus Products and Status</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>AntiVirusInfo</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Get Anti Virus Products and Status</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-AntiVirusInfo</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Management.Automation.PSCustomObject</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Based on Get-SystemStatus by Patrick G (No copyright or license where applied)</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-AntiVirusInfo</dev:code>
				<dev:remarks>
					<maml:para>AntiVirusProduct                        DefinitionStatus                        RealTimeProtection
----------------                        ----------------                        ------------------
McAfee VirusScan Enterprise             Up to date                              Enabled

Description
-----------
Get Anti Virus Products and Status</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-AntiVirusInfo | fl</dev:code>
				<dev:remarks>
					<maml:para>AntiVirusProduct   : McAfee VirusScan Enterprise
DefinitionStatus   : Up to date
RealTimeProtection : Enabled

Description
-----------
Get Anti Virus Products and Status as formated list</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-AntiVirusInfo</dev:code>
				<dev:remarks>
					<maml:para>WARNING: Make sure that a AntiVirus Product is installed and supported by your plattform!
Get-AntiVirusInfo : Failed to get AntiVirus Product Info. The error was: Invalid namespace &quot;root\SecurityCenter2&quot;
At line:71 char:1
+ Get-AntiVirusInfo
+ ~~~~~~~~~~~~~~~~~
+ CategoryInfo          : NotSpecified: (:) [Write-Error], WriteErrorException
+ FullyQualifiedErrorId : Microsoft.PowerShell.Commands.WriteErrorException,Get-AntiVirusInfo

Description
-----------
Get Anti Virus Products and Status</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>http://poshcode.org/6460</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-DefenderStatusInfo</command:name>
			<maml:description>
				<maml:para>Get Windows Defender Status</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>DefenderStatusInfo</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Get Windows Defender Status</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-DefenderStatusInfo</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Management.Automation.PSCustomObject</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Based on Get-SystemStatus by Patrick G (No copyright or license where applied)</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-DefenderStatusInfo</dev:code>
				<dev:remarks>
					<maml:para>DefenderStatus
--------------
Not running

Description
-----------
Get Windows Defender Status</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-DefenderStatusInfo | Format-List</dev:code>
				<dev:remarks>
					<maml:para>DefenderStatus : Not running

Description
-----------
Get Windows Defender Status</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-DefenderStatusInfo</dev:code>
				<dev:remarks>
					<maml:para>Get-DefenderStatusInfo : Failed to get DefenderStatus Info. The error was: Cannot find any service with service name
&#39;windefend&#39;.
At line:41 char:1
+ Get-DefenderStatusInfo
+ ~~~~~~~~~~~~~~~~~~~~~~
+ CategoryInfo          : NotSpecified: (:) [Write-Error], WriteErrorException
+ FullyQualifiedErrorId : Microsoft.PowerShell.Commands.WriteErrorException,Get-DefenderStatusInfo

Description
-----------
Get Windows Defender Status</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>http://poshcode.org/6460</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Test-Port</command:name>
			<maml:description>
				<maml:para>Test ports on computer</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Test</command:verb>
			<command:noun>Port</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Test TCP or UDP ports on computer</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Test-Port</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="Server , target">
					<maml:name>ComputerName</maml:name>
					<maml:description>
						<maml:para>The computer name or IP address to query, can be array</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>PortNumber</maml:name>
					<maml:description>
						<maml:para>Integer value of port to test, default 135 for RPC, can be array</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32[]</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>TCP</maml:name>
					<maml:description>
						<maml:para>Test TCP Connection</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
			<command:syntaxItem>
				<maml:name>Test-Port</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="Server , target">
					<maml:name>ComputerName</maml:name>
					<maml:description>
						<maml:para>The computer name or IP address to query, can be array</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>PortNumber</maml:name>
					<maml:description>
						<maml:para>Integer value of port to test, default 135 for RPC, can be array</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32[]</command:parameterValue>
				</command:parameter>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>UDP</maml:name>
					<maml:description>
						<maml:para>Test UDP Connection</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0" aliases="Server , target">
				<maml:name>ComputerName</maml:name>
				<maml:description>
					<maml:para>The computer name or IP address to query, can be array</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>PortNumber</maml:name>
				<maml:description>
					<maml:para>Integer value of port to test, default 135 for RPC, can be array</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">Int32[]</command:parameterValue>
				<dev:type>
					<maml:name>Int32[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>135</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>TCP</maml:name>
				<maml:description>
					<maml:para>Test TCP Connection</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>UDP</maml:name>
				<maml:description>
					<maml:para>Test UDP Connection</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Management.Automation.PSCustomObject</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>This function contains a lot of work from the following People:
- Ben H.
- Chad Miller

This new function replaced the following:
- Test-TCPPort
- Get-TcpPortStatus</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Test-Port localhost</dev:code>
				<dev:remarks>
					<maml:para>ComputerName                                                               Port                               Connected
------------                                                               ----                               ---------
localhost                                                                   135                                    True

Description
-----------
Checks if TCP port 135 open on localhost</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Test-Port localhost | fl</dev:code>
				<dev:remarks>
					<maml:para>ComputerName : localhost
Port         : 135
connected    : True

Description
-----------
Checks if TCP port 135 open on localhost an return a formated list.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>&quot;MIADOMDC01&quot; | Test-Port</dev:code>
				<dev:remarks>
					<maml:para>ComputerName                                                               Port                               Connected
------------                                                               ----                               ---------
MIADOMDC01                                                                  135                                    True

Description
-----------
Checks if TCP port 135 open on Server MIADOMDC01</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Test-Port -ComputerName &#39;NYCAPPWEB01&#39;,&#39;NYCAPPWEB02&#39; -Port 80,443 -TCP</dev:code>
				<dev:remarks>
					<maml:para>ComputerName                                                               Port                               Connected
------------                                                               ----                               ---------
NYCAPPWEB01                                                                  80                                    True
NYCAPPWEB01                                                                 443                                    True
NYCAPPWEB02                                                                  80                                    True
NYCAPPWEB02                                                                 443                                    True

Description
-----------
Checks if TCP ports 80 and 443 are open on &#39;NYCAPPWEB01&#39; and &#39;NYCAPPWEB02&#39;</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 5 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Test-Port -ComputerName &#39;10.10.16.17&#39; -PortNumber 161 -UDP</dev:code>
				<dev:remarks>
					<maml:para>ComputerName                                                               Port                               Connected
------------                                                               ----                               ---------
10.10.16.17.                                                                161                                   False

Description
-----------
Check if UDP port 161 is open on &#39;10.10.16.17&#39;</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>http://poshcode.org/6442
http://poshcode.org/2392</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-SysIPInfo</command:name>
			<maml:description>
				<maml:para>Get information about the IP Configuration</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>SysIPInfo</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Get information about the IP Configuration

The following Info will be reported:
IP Address
Subnet
Gateway
DNS servers
MAC address</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-SysIPInfo</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0">
					<maml:name>ComputerName</maml:name>
					<maml:description>
						<maml:para>One or more computers to check.
The default is the local computer.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="0">
				<maml:name>ComputerName</maml:name>
				<maml:description>
					<maml:para>One or more computers to check.
The default is the local computer.</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>$env:COMPUTERNAME</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Management.Automation.PSObject</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Found the basic idea somewhere on the Internet.
Have no (more) idea where and when it was :-(

SORRY for stealing the idea without any pride!

TODO: Any idea how to get rid of the WMI call?</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-SysIPInfo</dev:code>
				<dev:remarks>
					<maml:para>ComputerName  : JHW7PSDEV
IPAddress     : 10.211.55.5
SubnetMask    : 255.255.255.0
Gateway       : 10.211.55.1
IsDHCPEnabled : True
DNSServers    : 10.211.55.1
MACAddress    : 00:1C:42:39:9F:6E
Description
-----------
Get information about the IP Configuration with DHCP enabled</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Set-FullRightsForUser</command:name>
			<maml:description>
				<maml:para>Grant FullControl Permission to User or Group on File or Folder</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Set</command:verb>
			<command:noun>FullRightsForUser</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Grant FullControl Permission to User or Group on File or Folder</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Set-FullRightsForUser</maml:name>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="File , directory , directories">
					<maml:name>files</maml:name>
					<maml:description>
						<maml:para></maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
				</command:parameter>
				<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="2" aliases="User , UserName , Group , GroupName">
					<maml:name>Identity</maml:name>
					<maml:description>
						<maml:para>Please specify one, or more, User- or Group-Names</maml:para>
					</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1" aliases="File , directory , directories">
				<maml:name>files</maml:name>
				<maml:description>
					<maml:para></maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
			<command:parameter required="true" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="2" aliases="User , UserName , Group , GroupName">
				<maml:name>Identity</maml:name>
				<maml:description>
					<maml:para>Please specify one, or more, User- or Group-Names</maml:para>
				</maml:description>
					<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
				<dev:type>
					<maml:name>String</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue></dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
			<command:inputType>
				<dev:type>
					<maml:name>System.String</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Internal Helper function</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Set-FullRightsForUser -File &#39;C:\temp\foo\ADPassMon.app.zip&#39; -Identity &#39;Josh&#39;</dev:code>
				<dev:remarks>
					<maml:para>Josh has now FullControl Permission for C:\temp\foo\ADPassMon.app.zip

Description
-----------
Grant FullControl Permission for &#39;C:\temp\foo\ADPassMon.app.zip&#39; to User &#39;Josh&#39;</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Set-FullRightsForUser -File &#39;C:\temp\foo\ADPassMon.app.zip&#39; -Identity &#39;Josh&#39; -WhatIf</dev:code>
				<dev:remarks>
					<maml:para>What if: Performing the operation &quot;Grant FullControl Permission to josh&quot; on target &quot;C:\temp\foo\ADPassMon.app.zip&quot;.

Description
-----------
Dry Run: Grant FullControl Permission for &#39;C:\temp\foo\ADPassMon.app.zip&#39; to User &#39;Josh&#39;</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Set-FullRightsForUser -File &#39;C:\temp\bar\ADPassMon.app.zip&#39; -Identity &#39;Josh&#39;</dev:code>
				<dev:remarks>
					<maml:para>WARNING: No such File or Directory: C:\temp\bar\ADPassMon.app.zip

Description
-----------
The given File &#39;C:\temp\bar\ADPassMon.app.zip&#39; does NOT exist!</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-FailedServicesInfo</command:name>
			<maml:description>
				<maml:para>Find failed Services and give a human readable info about the failure</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>FailedServicesInfo</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Find failed Services and give a human readable info about the failure</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-FailedServicesInfo</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1">
					<maml:name>ComputerName</maml:name>
					<maml:description>
						<maml:para>One, or more, computers to check. The default is the local host.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="True (ByValue)" position="1">
				<maml:name>ComputerName</maml:name>
				<maml:description>
					<maml:para>One, or more, computers to check. The default is the local host.</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">String[]</command:parameterValue>
				<dev:type>
					<maml:name>String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>$env:COMPUTERNAME</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>System.String[]</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Management.Automation.PSObject</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>TODO: Optimize the calls to gain more speed!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-FailedServicesInfo</dev:code>
				<dev:remarks>
					<maml:para>ComputerName : DEFFMDC01
Service      : RaMgmtSvc
Startmode    : Auto
State        : Stopped
Exitcode     : 1075
Message      : The dependency service does not exist or has been marked for deletion.

ComputerName : DEFFMDC01
Service      : WseEmailSvc
Startmode    : Auto
State        : Stopped
Exitcode     : 1067
Message      : The process terminated unexpectedly.

Description
-----------
Find failed Services and give a human readable info about the failure</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-FailedServicesInfo | Format-Table -AutoSize</dev:code>
				<dev:remarks>
					<maml:para>ComputerName Service     Startmode State   Exitcode Message
------------ -------     --------- -----   -------- -------
DEFFMDC01    RaMgmtSvc   Auto      Stopped     1075 The dependency service does not exist or has been marked for deletion.
DEFFMDC01    WseEmailSvc Auto      Stopped     1067 The process terminated unexpectedly.

Description
-----------
Find failed Services and give a human readable info about the failure
Get it as a formated Table</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-FailedServicesInfo -ComputerName &#39;DEFFMDC01&#39; | Format-Table -AutoSize</dev:code>
				<dev:remarks>
					<maml:para>ComputerName Service     Startmode State   Exitcode Message
------------ -------     --------- -----   -------- -------
DEFFMDC01    RaMgmtSvc   Auto      Stopped     1075 The dependency service does not exist or has been marked for deletion.
DEFFMDC01    WseEmailSvc Auto      Stopped     1067 The process terminated unexpectedly.

Description
-----------
Find failed Services and give a human readable info about the failure
This time we execute it on a remote system.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Test-NetworkConnection</command:name>
			<maml:description>
				<maml:para>Check if the System have a working Network connection</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Test</command:verb>
			<command:noun>NetworkConnection</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Check if the System have a working Network connection.
An optional Test for a working Internet Connection is also possible.</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Test-NetworkConnection</maml:name>
				<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
					<maml:name>Internet</maml:name>
					<maml:description>
						<maml:para>Also check the Internet connectivity.</maml:para>
					</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				</command:parameter>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
			<command:parameter required="false" variableLength="false" globbing="false" pipelineInput="false" position="named">
				<maml:name>Internet</maml:name>
				<maml:description>
					<maml:para>Also check the Internet connectivity.</maml:para>
				</maml:description>
					<command:parameterValue required="false" variableLength="false">SwitchParameter</command:parameterValue>
				<dev:type>
					<maml:name>SwitchParameter</maml:name>
					<maml:uri/>
				</dev:type>
				<dev:defaultValue>False</dev:defaultValue>
			</command:parameter>
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Management.Automation.PSObject</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>TODO: Find a better way for older systems to figure out if they have a working internet connection.</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Test-NetworkConnection</dev:code>
				<dev:remarks>
					<maml:para>NetworkAvailible InternetAccess
---------------- --------------
            True unchecked

Description
-----------
Check if the System have a working Network connection</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Test-NetworkConnection | Format-List</dev:code>
				<dev:remarks>
					<maml:para>NetworkAvailible : True
InternetAccess   : unchecked

Description
-----------
Check if the System have a working Network connection.
Report as List instead of a table</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Test-NetworkConnection -Internet</dev:code>
				<dev:remarks>
					<maml:para>NetworkAvailible InternetAccess
---------------- --------------
            True           True

Description
-----------
Check if the System have a working Network connection.
Also check the Internet connectivity.</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Test-NetworkConnection -Internet | Format-List</dev:code>
				<dev:remarks>
					<maml:para>NetworkAvailible : True
InternetAccess   : True

Description
-----------
Check if the System have a working Network connection
Also check the Internet connectivity. Report as List instead of a table</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>http://msdn.microsoft.com/en-us/library/vstudio/system.net.networkinformation.networkinterface</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-TCPConnectionsActive</command:name>
			<maml:description>
				<maml:para>Get a list of active TCP connections</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>TCPConnectionsActive</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Get a list of active TCP connections</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-TCPConnectionsActive</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>TODO: Try to find a alternative to the DotNET with native PowerShell</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-TCPConnectionsActive</dev:code>
				<dev:remarks>
					<maml:para>LocalAddress  : 10.211.55.5
LocalPort     : 54076
RemoteAddress : 216.58.214.99
RemotePort    : 443
Status        : Established
Version       : IPv4

Description
-----------
Get a list of active TCP connections</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-TCPConnectionsActive | Format-Table -AutoSize</dev:code>
				<dev:remarks>
					<maml:para>LocalAddress                LocalPort RemoteAddress               RemotePort      Status Version
------------                --------- -------------               ----------      ------ -------
fe80::8b3:b8b3:d593:ad94%12     64523 fe80::8b3:b8b3:d593:ad94%12       6602 Established IPv6

Description
-----------
Get a list of active TCP connections</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://msdn.microsoft.com/en-us/library/system.net.networkinformation.ipglobalproperties.getactivetcpconnections(v=vs.110).aspx</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText>Get-TCPConnectionsListening</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-TCPConnectionsListening</command:name>
			<maml:description>
				<maml:para>Get a list of listening TCP ports and connections</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>TCPConnectionsListening</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Get a list of listening TCP ports and connections</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-TCPConnectionsListening</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>TODO: Try to find a alternative to the DotNET with native PowerShell</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-TCPConnectionsListening</dev:code>
				<dev:remarks>
					<maml:para>LocalAddress                ListeningPort Version
------------                ------------- -------
fe80::8b3:b8b3:d593:ad94%12            53 IPv6

Description
-----------
Get a list of listening TCP ports and connections</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-TCPConnectionsListening | Format-List</dev:code>
				<dev:remarks>
					<maml:para>LocalAddress  : Loopback
ListeningPort : 49196
Version       : IPv6

Description
-----------
Get a list of listening TCP ports and connections</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://msdn.microsoft.com/en-us/library/system.net.networkinformation.ipglobalproperties.getactivetcpconnections(v=vs.110).aspx</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText>Get-TCPConnectionsActive</maml:linkText>
				<maml:uri></maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-UserType</command:name>
			<maml:description>
				<maml:para>Is the actual User a local or a domain user?</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>UserType</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Is the actual User a local or a domain user?</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-UserType</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Management.Automation.PSObject</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Internal Helper function</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-UserType</dev:code>
				<dev:remarks>
					<maml:para>Type
----
Local

Description
-----------
Is the actual User a local or a domain user?</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 2 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Get-UserType</dev:code>
				<dev:remarks>
					<maml:para>Type
----
Domain

Description
-----------
Is the actual User a local or a domain user?</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 3 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>(Get-UserType).Type</dev:code>
				<dev:remarks>
					<maml:para>Domain

Description
-----------
Is the actual User a local or a domain user?</maml:para>
				</dev:remarks>
			</command:example>
			<command:example>
				<maml:title>-------------------------- EXAMPLE 4 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>if (((Get-UserType).Type) -eq &#39;Domain&#39;) {</dev:code>
				<dev:remarks>
					<maml:para># Do something for a Domain User
} elseif (((Get-UserType).Type) -eq &#39;Local&#39;) {
# Do something for a Local User
} else {
Write-Error -Message &#39;Unknown User&#39;
break
}

Description
-----------
Use the function to control things based on the user type.</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Describe</command:name>
			<maml:description>
				<maml:para>Describe</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb></command:verb>
			<command:noun>Describe</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para></maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Describe</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None
</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Context</command:name>
			<maml:description>
				<maml:para>Add-SteroidsContextMenuCommand</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb></command:verb>
			<command:noun>Context</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para></maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Context</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None
</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>It</command:name>
			<maml:description>
				<maml:para>Edit the Windows Host file</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb></command:verb>
			<command:noun>It</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>A shortcut to quickly edit the Windows host file. It might be useful for testing things without changing the regular DNS.

Handle with care!</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>It</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Edit-HostsFile</dev:code>
				<dev:remarks>
					<maml:para>Description
-----------
Opens the Editor configured within the VisualEditor variable to edit
the Windows Host file</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
		<maml:relatedLinks>
			<!--Links-->
			<maml:navigationLink>
				<maml:linkText>Online version:</maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource</maml:uri>
			</maml:navigationLink>
			<maml:navigationLink>
				<maml:linkText></maml:linkText>
				<maml:uri>https://github.com/Alright-IT/AIT.OpenSource/issues</maml:uri>
			</maml:navigationLink>
		</maml:relatedLinks>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Should</command:name>
			<maml:description>
				<maml:para>Should</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb></command:verb>
			<command:noun>Should</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para></maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Should</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None
</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Mock</command:name>
			<maml:description>
				<maml:para>Mock</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb></command:verb>
			<command:noun>Mock</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para></maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Mock</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None
</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Assert-MockCalled</command:name>
			<maml:description>
				<maml:para>Assert-MockCalled</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Assert</command:verb>
			<command:noun>MockCalled</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para></maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Assert-MockCalled</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None
</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Assert-VerifiableMocks</command:name>
			<maml:description>
				<maml:para>Assert-VerifiableMocks</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Assert</command:verb>
			<command:noun>VerifiableMocks</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para></maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Assert-VerifiableMocks</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None
</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>New-Fixture</command:name>
			<maml:description>
				<maml:para>New-Fixture</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>New</command:verb>
			<command:noun>Fixture</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para></maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>New-Fixture</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None
</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-TestDriveItem</command:name>
			<maml:description>
				<maml:para>Get-TestDriveItem</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>TestDriveItem</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para></maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-TestDriveItem</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None
</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Invoke-Pester</command:name>
			<maml:description>
				<maml:para>Invoke-Pester</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Invoke</command:verb>
			<command:noun>Pester</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para></maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Invoke-Pester</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None
</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Setup</command:name>
			<maml:description>
				<maml:para>Setup</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb></command:verb>
			<command:noun>Setup</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para></maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Setup</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None
</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>In</command:name>
			<maml:description>
				<maml:para>Converts an IP address string to it&#39;s binary string equivalent</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb></command:verb>
			<command:noun>In</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para>Takes a IP as a string and returns the same IP address as a binary
string with no decimal points</maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>In</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Management.Automation.PSCustomObject</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
		<maml:alertSet>
			<!--Notes-->
			<maml:title></maml:title>
			<maml:alert>
				<maml:para>Works with IPv4 addresses only!</maml:para>
			</maml:alert>
		</maml:alertSet>
		<command:examples>
			<!--Examples-->
			<command:example>
				<maml:title>-------------------------- EXAMPLE 1 --------------------------</maml:title>
				<maml:introduction>
					<maml:para>PS C:\&gt;</maml:para>
				</maml:introduction>
				<dev:code>Convert-IPToBinary -IP &#39;10.211.55.1&#39;</dev:code>
				<dev:remarks>
					<maml:para>Binary                           IPAddress
------                           ---------
00001010110100110011011100000001 10.211.55.1

Description
-----------
Converts 10.211.55.1 to the binary equivalent (00001010110100110011011100000001)</maml:para>
				</dev:remarks>
			</command:example>
		</command:examples>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>InModuleScope</command:name>
			<maml:description>
				<maml:para>InModuleScope</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb></command:verb>
			<command:noun>InModuleScope</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para></maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>InModuleScope</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None
</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Invoke-Mock</command:name>
			<maml:description>
				<maml:para>Invoke-Mock</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Invoke</command:verb>
			<command:noun>Mock</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para></maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Invoke-Mock</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None
</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>BeforeEach</command:name>
			<maml:description>
				<maml:para>BeforeEach</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb></command:verb>
			<command:noun>BeforeEach</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para></maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>BeforeEach</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None
</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>AfterEach</command:name>
			<maml:description>
				<maml:para>AfterEach</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb></command:verb>
			<command:noun>AfterEach</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para></maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>AfterEach</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None
</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>BeforeAll</command:name>
			<maml:description>
				<maml:para>BeforeAll</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb></command:verb>
			<command:noun>BeforeAll</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para></maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>BeforeAll</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None
</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>AfterAll</command:name>
			<maml:description>
				<maml:para>AfterAll</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb></command:verb>
			<command:noun>AfterAll</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para></maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>AfterAll</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None
</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Get-MockDynamicParameters</command:name>
			<maml:description>
				<maml:para>Get-MockDynamicParameters</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Get</command:verb>
			<command:noun>MockDynamicParameters</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para></maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Get-MockDynamicParameters</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None
</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Set-DynamicParameterVariables</command:name>
			<maml:description>
				<maml:para>Set-DynamicParameterVariables</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Set</command:verb>
			<command:noun>DynamicParameterVariables</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para></maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Set-DynamicParameterVariables</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None
</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>Set-TestInconclusive</command:name>
			<maml:description>
				<maml:para>Set-TestInconclusive</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>Set</command:verb>
			<command:noun>TestInconclusive</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para></maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>Set-TestInconclusive</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None
</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>SafeGetCommand</command:name>
			<maml:description>
				<maml:para>SafeGetCommand</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb></command:verb>
			<command:noun>SafeGetCommand</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para></maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>SafeGetCommand</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None
</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
	</command:command>
	<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10">
		<!--Command-->
		<command:details>
			<command:name>New-PesterOption</command:name>
			<maml:description>
				<maml:para>New-PesterOption</maml:para>
			</maml:description>
			<maml:copyright>
				<maml:para></maml:para>			</maml:copyright>
			<command:verb>New</command:verb>
			<command:noun>PesterOption</command:noun>
			<dev:version/>
		</command:details>
		<maml:description>
			<maml:para></maml:para>
		</maml:description>
		<command:syntax>
			<!--Parameter Sets-->
			<command:syntaxItem>
				<maml:name>New-PesterOption</maml:name>
			</command:syntaxItem>
		</command:syntax>
		<command:parameters>
			<!--All Parameters-->
		</command:parameters>
		<command:inputTypes>
			<!--Inputs-->
			<command:inputType>
				<dev:type>
					<maml:name>None
</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:inputType>
		</command:inputTypes>
		<command:returnValues>
			<!--Outputs-->
			<command:returnValue>
				<dev:type>
					<maml:name>System.Object</maml:name>
					<maml:uri/>
				</dev:type>
				<maml:description>
					<maml:para></maml:para>

				</maml:description>
			</command:returnValue>
		</command:returnValues>
	</command:command>
	<!--Generated by: SAPIEN PowerShell HelpWriter 2016 v1.1.20-->
</helpItems>
